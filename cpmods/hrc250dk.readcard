ID MAINT
:READ RBLOKS AUXLCL
HRC250DK V01 Dynamic 327x screen size support
:READ RBLOKS HRC250DK
./ * HRC250DK - Dynamic 327x screen size support
./ *
./ * Updates to RDEVBLOK to support dynamic 3270 screen     
./ * sizing. This update removes the use of GRTBLOK to      
./ * define static CCWs and buffer order streams. It also
./ * generalizes the MODEL=DYNAMIC support to extend to
./ * all 3277/3278 models so the actual screen geometry
./ * will be determined when the device is enabled. This
./ * update also introduces the GRFXBLOK extension to
./ * RDEVBLOK that will contain all the extended fields
./ * needed to manage display scrceens of any size.
./ *
./ * HISTORY:
./ * 13-May-2025 WDENTON  Initial version for VM370CE V1 R1.2
./ *
./ R 00181100 $ 00181105
RDEVGRFX DS    1F             GRAF: graphic device extensions  HRC250DK 00181105
./ R 00181440 00181445 $ 00181442 5
*        EQU   X'08'          GRAF: available bit              HRC250DK 00181442
RDEVXSEL EQU   X'04'          GRAF: has extended selects       HRC250DK 00181447
./ R 00195620 $ 00195625
RDEVAVL1 DS    1X             available (was RDEVGRTY)         HRC250DK 00195625
:READ IOBLOKS AUXLCL
HRC250DK V01 Dynamic 327x screen size support
:READ IOBLOKS HRC250DK
./ * HRC250DK - Dynamic 327x screen size support
./ *
./ * Replaces IOBRSV3 with a new field IOBCHPRG which
./ * points to the new workarea for dynamically built       
./ * channel programs for display terminals. This field   
./ * will be managed by the new HDKGRC module.     
./ * 
./ * Add a 2nd byte of parameter flags. Initially, this will
./ * pass the HILIGHT flag from DMKQCN to DMKGRF so the new
./ * dynamic CCW generation can be responsible for highlighting
./ *
./ * Expand the VCONWBSZ field from one byte to a halfword. This
./ * is to support writes to larger screens that might need to
./ * be longerthan 2K (0xFF double words)
./ *
./ * HISTORY:
./ * 18-Jun-2025 WDENTON  Initial version for VM370CE V1 R1.2
./ * 21-Jun-2025 WDENTON  Add CONPARM2 flag byte
./ *  2-Jul-2025 WDENTON  Change VCONWBSZ to halfword
./ *
./ R 00050000 $ 00050010 10
IOBCHPRG DS    1A             -> channel program build area    HRC250DK 00181105
./ R 00089600 $ 00089610
*              | C*3 | C*4 | RESERVED  |        RESERVED       HRC250DK 00089610
./ R 00100200 $ 00100210
CONPARM2 DS    1X         C*4 2nd DMKQCN parameters byte       HRC250DK 00100210
./ R 00188490 $ 00188495
*              |        VCONWBUF       |  VCONWCNT | VCONWBSZ  HRC250DK 00188495
./ R 00200790 00200880 $ 00200850
VCONWBSZ DS    1H             Write buffer size in double wordsHRC250DK 00200850
./ I 00211000 $ 00211020 20              
         EJECT ,                                               HRC250DK 00211020
GRFCCWS  DSECT ,                                               HRC250DK 00211040
         SPACE 1                                               HRC250DK 00211060
***                GRFCCWS - GRAF Channel Program Build Area   HRC250DK 00211080
*                                                              HRC250DK 00211100
*         0   +-----------------------+-----------+-----------+HRC250DK 00211120
*             |        GRFBUFFA       | GRFBUFFL  |  GRFRSV1  |HRC250DK 00211140
*         8   +-----------------------+-----------+-----------+HRC250DK 00211160
*             |                   GRFCCW1                     |HRC250DK 00211180
*        10   +-----------------------------------------------+HRC250DK 00211200
*             |                   GRFCCW2                     |HRC250DK 00211220
*        18   +-----------------------------------------------+HRC250DK 00211240
*             |                   GRFCCW3                     |HRC250DK 00211260
*        20   +-----------------------------------------------+HRC250DK 00211280
*             |                   GRFCCW4                     |HRC250DK 00211300
*        28   +-----------------------------------------------+HRC250DK 00211320
*             |                   GRFCCW5                     |HRC250DK 00211340
*        30   +-----------------------------------------------+HRC250DK 00211360
*             |                   GRFCCW6                     |HRC250DK 00211380
*        38   +-----------------------------------------------+HRC250DK 00211400
*                                                              HRC250DK 00211420
***                GRFCCWS - GRAF Channel Program Build Area   HRC250DK 00211440
         SPACE 1                                               HRC250DK 00211460
GRFBUFFA DS    1A        -> large order stream buffer          HRC250DK 00211480
GRFBUFFL DS    1H        Buffer length (bytes)                 HRC250DK 00211500
GRFRSV1  DS    2XL1      (available)                           HRC250DK 00211520
GRFCCW1  DS    1D        Channel Command Word #1               HRC250DK 00211540
GRFCCW2  DS    1D        Channel Command Word #2               HRC250DK 00211560
GRFCCW3  DS    1D        Channel Command Word #3               HRC250DK 00211580
GRFCCW4  DS    1D        Channel Command Word #4               HRC250DK 00211600
GRFCCW5  DS    1D        Channel Command Word #5               HRC250DK 00211620
GRFCCW6  DS    1D        Channel Command Word #6               HRC250DK 00211640
GRFCCWLN EQU   *-GRFCCWS Length (bytes)                        HRC250DK 00211660
GRFCCWLD EQU   (GRFCCWLN+1)/8   (dwords)                       HRC250DK 00211680
:READ RDEVICE AUXLCL
HRC250DK V01 Dynamic 327x screen size support
:READ RDEVICE HRC250DK
./ * HRC250DK - Dynamic 327x screen size support
./ *
./ * Updates to RDEVICE to support dynamic 3270 screen     
./ * sizing. This update removes the use of GRTBLOK to      
./ * define static CCWs and buffer order streams. It also
./ * generalizes the MODEL=DYNAMIC support to extend to
./ * all 3277/3278 models so the actual screen geometry
./ * will be determined when the device is enabled.
./ *
./ * HISTORY:
./ * 13-May-2025 WDENTON  Initial version for VM370CE V1 R1.2
./ *
./ R 00519450 $ 00519455
         DC    A(*-*)         RDEVGRFX (was RDEVGRTB)          HRC250DK 00519455         
./ R 00519600 $ 00519605
         DC    AL1(0)         RDEVGRIC                         HRC250DK 00519605
./ R 00523000 $ 00523005
         DC    AL1(0)         available (was RDEVGRTY)         HRC250DK 00523005         
:READ GRFXBLOK AUXLCL
HRC250DK V01 Dynamic 327x screen size support
:READ GRFXBLOK HRC250DK
./ * HRC250DK - Dynamic 327x screen size support
./ *
./ * Adds new DSECT - GRFXBLOK - which will contain all of     
./ * the variable info needed to support any 327x screen    
./ * geometry. This control block is attached to the RDEVBLOK
./ * (at RDEVGRFX) and is constructed by HDKD8C via call
./ * from DMKGRF when the device is enabled.             
./ *
./ * HISTORY:
./ * 13-May-2025 WDENTON  Initial version for VM370CE V1 R1.2
./ * 23-Jun-2025 WDENTON  Added fields for input area line numbers
./ *
:READ  GRFXBLOK COPY 
*COPY GRFXBLOK                                                          00010000
         PUSH  PRINT                                                    00020000
         AIF   ('&SYSPARM' NE 'SUP').GFX01                              00030000
         PRINT OFF,NOGEN                                                00040000
.GFX01   ANOP  ,                                                        00050000
GRFXBLOK DSECT ,                                                        00060000
         SPACE 1                                                        00070000
***                GRFXBLOK - GRAF Device Extension Block               00080000
*                                                                       00090000
*         0   +-----------+-----------+-----------+-----------+         00100000
*             | GRFXROWS  | GRFXCOLS  | GRFXINPL  | GRFXOUTL  |         00110000
*         8   +-----------+-----------+-----------+-----------+         00120000
*             | GRFX@INP  | GRFX@STA  | GRFX@SYS  | GRFX@LST  |         00130000
*        10   +-----------+-----------+-----------+-----+-----+         00140000
*             |        GRFXRPQA       | GRFXRPQL  | G*1 | G*2 |         00150000
*        18   +-----------+-----+-----+-----+-----+-----+-----+         00160000
*             | GRFXCUMD  | G*3 | GRFXDVMD  | G*4 | G*5 | G*6 |         00170000
*        20   +-----+-----+-----+-----+-----+-----+-----------+         00180000
*             | G*7 | G*8 | GRFXRSV1  |       GRFXRSV2        |         00190000
*        28   +-----+-----+-----------+-----------------------+         00200000
*             |                                               |         00210000
*             =                   GRFXBUFF                    =         00220000
*             |                                               |         00230000
*        68   +-----------------------------------------------+         00240000
*                                                                       00250000
***                GRFXBLOK - GRAF Device Extension Block               00260000
         SPACE 1                                                        00270000
GRFXROWS DS    H         Size of physical screen (rows)                 00280000
GRFXCOLS DS    H         Size of physical screen (cols)                 00290000
GRFXINPL DS    H         Input area length                              00300000
GRFXOUTL DS    H         Output area length                             00310000
GRFX@INP DS    XL2       Input area attr buffer addr                    00320000
GRFX@STA DS    XL2       Status area attr buffer addr                   00330000
GRFX@SYS DS    XL2       System ID attr buffer addr                     00340000
GRFX@LST DS    XL2       Bottom-right buffer address                    00350000
GRFXRPQA DS    A         WSF RPQ data CP virtual address                00360000
GRFXRPQL DS    H          ''  ''  ''  length                            00370000
GRFXERAS DS    XL1   G*1 EW/EWA opcode                                  00380000
GRFXE4FL DS    XL1   G*2 SenseId flags                                  00390000
GRFXCUOK EQU   X'80'     Valid SenseId Ctlunit info                     00400000
GRFXDVOK EQU   X'40'     Valid SenseId Device info                      00410000
GRFXCUID DS    0XL3      SnsId Control Unit id:                         00420000
GRFXCUTY DS    XL2            type                                      00430000
GRFXCUMD DS    XL1   G*3      model                                     00440000
GRFXDVID DS    0XL3      SnsId Device id:                               00450000
GRFXDVTY DS    XL2            type                                      00460000
GRFXDVMD DS    XL1   G*4      model                                     00470000
GRFXINL1 DS    XL1   G*5 First input area line number                   00480000
GRFXINL2 DS    XL1   G*6 Last input area line number                    00490000
GRFXOALZ DS    XL1   G*7 Last output area line number                   00500000
GRFXATOA DS    XL1   G*8 Attribute in lower right corner                00510000
GRFXORGI DS    XL2       Input area origin                              00520000
GRFXRSV1 DS    4XL1      (available)                                    00530000
GRFXBUFF DS    64XL1     Buffer for orders & data                       00540000
         SPACE 1                                                        00550000
GRFXLEN  EQU   *-GRFXBLOK     Control block length (bytes)              00560000
GRFXLEND EQU   (GRFXLEN+7)/8                       (dwords)             00570000
         EJECT ,                                                        00580000
         POP   PRINT                                                    00590000
:READ GRCWORK AUXLCL
HRC250DK V01 Dynamic 327x screen size support
:READ GRCWORK HRC250DK
./ * HRC250DK - Dynamic 327x screen size support
./ *
./ * Adds new COPY member that contains static constants       
./ * and DSECTS of parameters, etc. that are used in the    
./ * interface between DMKGRF and HDKGRC channel program       
./ * generation calls.
./ *
./ * Also contains the common DSECT for the screen status area
./ *
./ * HISTORY:
./ * 23-Jun-2025 WDENTON  Initial version for VM370CE V1 R1.2
./ *
:READ GRCWORK COPY
*COPY GRCWORK                                                           00010000
         PUSH  PRINT                                                    00020000
         AIF   ('&SYSPARM' NE 'SUP').GRC01                              00030000
         PRINT OFF,NOGEN                                                00040000
.GRC01   ANOP  ,                                                        00050000
         SPACE 1                                                        00060000
* +========================================================+            00070000
* ! +----------------------------------------------------+ !            00080000
* | |                                                    | |            00090000
* | |                  G R C W O R K                     | |            00100000
* | |                                                    | |            00110000
* | |   Control values and work areas used by HDKGRC     | |            00120000
* | |                                                    | |            00130000
* ! +----------------------------------------------------+ !            00140000
* +========================================================+            00150000
         SPACE 1                                                        00160000
*                                                                       00170000
*        Channel Program Index                                          00180000
*                                                                       00190000
*        Specifies which channel program is to be built                 00200000
*                                                                       00210000
         SPACE 1                                                        00220000
*              4*0            Is an error                               00230000
CPIXRMI  EQU   4*1            Read Manual Input                         00240000
CPIXFMT  EQU   4*2            Format screen w/logo                      00250000
CPIXWRT  EQU   4*3            Write to output area                      00260000
CPIXCLR  EQU   4*4            Clear screen                              00270000
CPIXCLS  EQU   4*5            Clear screen w/erase write (alternate)    00280000
CPIXCRD  EQU   4*6            Clear input area                          00290000
CPIXMRD  EQU   4*7            Clear screen                              00300000
CPIXIDS  EQU   4*8            Write to input area                       00310000
CPIXTAB  EQU   4*9            Insert a logical tab                      00320000
CPIXHLD  EQU   4*10           Set status = HOLDING                      00330000
CPIXMOR  EQU   4*11           Set status = MORE...                      00340000
CPIXNAC  EQU   4*12           Set status = NOT ACCEPTED                 00350000
CPIXRUN  EQU   4*13           Set status = RUNNING                      00360000
CPIXVMR  EQU   4*14           Set status = VM READ                      00370000
CPIXCPR  EQU   4*15           Set status = CP READ                      00380000
CPIXVMP  EQU   4*16           Set status = VM READ inhibit              00390000
CPIXCPP  EQU   4*17           Set status = CP READ inhibit              00400000
CPIXWNG  EQU   4*18           Sound warning alarm                       00410000
         SPACE 3                                                        00420000
STATAREA DSECT ,                  Map the status area                   00430000
STATATTR DS    XL1                  attribute                           00440000
STATSTAT DS    CL9                  status                              00450000
STATATTI DS    XL1                  sysid attr                          00460000
STATSYID DS    CL8                  sysid                               00470000
STATLAST DS    XL1                  last attr                           00480000
STATLEN  EQU   *-STATAREA                                               00490000
         EJECT ,                                                        00500000
         POP   PRINT                                                    00510000
:READ HDKD8C AUXLCL
HRC250DK V01 Dynamic 327x screen size support
:READ HDKD8C HRC250DK
./ * HRC250DK - Dynamic 327x screen size support
./ *
./ * Updates the Diag8C processing to return the WSF/RPQ    
./ * data if the user's buffer is big enough.               
./ *
./ * Enhances the initialization logic to build the    
./ * GRFXBLOK for all 327x displays. This will contain 
./ * all the extended fields needed to manage display 
./ * scrceens of any size.
./ *
./ * HISTORY:
./ * 15-May-2025 WDENTON  Initial version for VM370CE V1 R1.2
./ * 27-May-2025 WDENTON  Add limit checks and 3066 support
./ * 29-Jul-2025 WDENTON  Add support for Logical Devices
./ *
./ R 00022000 00024000 $ 00022010 300 
*        HDKD8CEN - Build and initialize the display device    HRC250DK 00022010
*                   extension block (GRFXBLOK) for the 327x    HRC250DK 00022310
*                   device when it is enabled. This includes   HRC250DK 00022610
*                   issuing a Sense Id CCW to determine device HRC250DK 00022910
*                   and control unit identities followed by    HRC250DK 00023210
*                   a Write-Structured-Field Read-Partition-   HRC250DK 00023510
*                   Query to find screen geometry and other    HRC250DK 00023810
*                   capabilities. If the WSF/RPQ fails or is   HRC250DK 00024110
*                   invalid, the geometry is determined        HRC250DK 00024410
*                   based on buffer size.                      HRC250DK 00024710
./ R 00078000 $ 00078005
*        GPR  9 = Address of the GRFXBLOK                      HRC250DK 00078005
./ R 00116000 00116500 $ 00116100 100
         EXTRN DMKSCNRD                Get RDEV address        HRC250DK 00116100
         EXTRN DMKPGTVG                Get CP virtual stg page HRC250DK 00116200
         EXTRN DMKPGTVR                Rlse CP virtual stg     HRC250DK 00116300
         EXTRN DMKPTRUL                Unlock CP stg page      HRC250DK 00116400
         EXTRN DMKTBL68                3270 buffer addr xlate  HRC250DK 00116500
./ R 00128000 $ 00127805 100
         L     R4,0(,R5)               Get user's buffer vaddr HRC250DK 00127805
         L     R1,4(R5)          Rx+1  Get virtual device addr HRC250DK 00127905
         ICM   R5,15,0(R6)       Ry    Get Ry (buffer length)  HRC250DK 00128005
./ D 00130000
./ D 00132000
./ R 00136400 00136600 $ 00136405 100
         LH    R0,VMVTERM              Offset to cons VDEVBLOK HRC250DK 00136405
         AL    R0,VMDVSTRT             -> console VDEVBLOK     HRC250DK 00136505
         CLR   R0,R8                   Is that the request?    HRC250DK 00136605
./ I 00147400 $ 00147420 50
         CLI   RDEVTYPE,TYP3277        Is it a display device? HRC250DK 00147420
         BE    ISGRAF                  ..yes.. OK              HRC250DK 00147470
         CLI   RDEVTYPE,TYP3066        m168 concole?           HRC250DK 00147520
         BE    ISGRAF                  ..yes.. OK              HRC250DK 00147570
./ R 00148000 $ 00148100 100
ISGRAF   DS    0H                                              HRC250DK 00148100
         USING GRFXBLOK,R9             Accessing the GRFXBLOK  HRC250DK 00148200
         ICM   R9,15,RDEVGRFX          ...                     HRC250DK 00148300
         BZ    NOTGRAF                 not there.. bad         HRC250DK 00148400
./ R 00169000 00186000 $ 00169100 200
*                                                              HRC250DK 00169100
         LH   R1,GRFXCOLS              Screen width (columns)  HRC250DK 00169300
         STH  R1,SAVEWRK2+2            ...                     HRC250DK 00169500
*                                                              HRC250DK 00169700
         LH   R1,GRFXROWS              Screen height (rows)    HRC250DK 00169900
         STH  R1,SAVEWRK2+4            ...                     HRC250DK 00170100
./ R 00188000 00200000 $ 00188100 300
*                                                              HRC250DK 00188100
* ------------------------------------------------------------ HRC250DK 00188400
*                                                              HRC250DK 00188700
*        Moving results to user's buffer:                      HRC250DK 00189000
*        -- First part: six bytes from SAVEWRK2                HRC250DK 00189300
*        -- Second part: GRFXRPQA+1 length GRFXRPWL-1          HRC250DK 00189600
*                                                              HRC250DK 00189900
*        SAVEWRK3+3 progress flags                             HRC250DK 00190200
*                                                              HRC250DK 00190500
*        R2 = (temp) Current user buffer raddr                 HRC250DK 00190800
*        R3 = (temp) Length of piece to move                   HRC250DK 00191100
*                                                              HRC250DK 00191400
*        the next two are manually tracked based               HRC250DK 00191700
*        on the calculated value or R3                         HRC250DK 00192000
*        R4 = Current user buffer vaddr                        HRC250DK 00192300
*        R5 = Remaining buffer length                          HRC250DK 00192600
*                                                              HRC250DK 00192900
*        these two will be adjusted by the MVCL                HRC250DK 00193200
*        execution.                                            HRC250DK 00193500
*        R6 = CP source real address                           HRC250DK 00193800
*        R7 = Remaining source length                          HRC250DK 00194100
*                                                              HRC250DK 00194400
         LA    R6,SAVEWRK2             1st six bytes are here  HRC250DK 00194700
         LA    R7,6                    ...                     HRC250DK 00195000
*                                                              HRC250DK 00195300
MOV010   DS    0H                                              HRC250DK 00195600
         LR    R1,R4                   Get user buffer vaddr   HRC250DK 00195900
./ R 00206000 $ 00206100 100
         CALL  DMKPSASP                Check prot violation    HRC250DK 00206100
         BNZ   PROTERR                 Return protection error HRC250DK 00206200
./ R 00211000 00230000 $ 00211100 300
*                                                              HRC250DK 00211100
*   First, figure the length of remaining data to be           HRC250DK 00211400
*   moved into the user's buffer. This is: MIN(R5, R7)         HRC250DK 00211700
*                                                              HRC250DK 00212000
MOV020   DS    0H                                              HRC250DK 00212300
         LR    R3,R7                   Remaining data to move  HRC250DK 00212600
         CR    R3,R5                   Is remaining buffer big HRC250DK 00212900
         BNH   *+6                       enough to hold it?    HRC250DK 00213200
         LR    R3,R5                   no, truncate            HRC250DK 00213500
*                                                              HRC250DK 00213800
*   Make sure we won't run off the end of the real buffer      HRC250DK 00214100
*   page. If needed, reduce the length to stay within the      HRC250DK 00214400
*   currently paged in buffer page.                            HRC250DK 00214700
*                                                              HRC250DK 00215000
*-- R2 -> real address of user's buffer                        HRC250DK 00215300
         LR    R1,R2                   Calc space remaining:   HRC250DK 00215600
         O     R1,F4095                  current | x'FFF'      HRC250DK 00215900
         LA    R1,1(,R1)                  + 1                  HRC250DK 00216200
         SR    R1,R2                      - current            HRC250DK 00216500
*                                                              HRC250DK 00216800
         CR    R3,R1                   Take the minimum        HRC250DK 00217100
         BNH   *+6                     ...                     HRC250DK 00217400
         LR    R3,R1                   ...                     HRC250DK 00217700
*                                                              HRC250DK 00218000
*   User buffer virtual controls (R4 & R5) need                HRC250DK 00218300
*   manual adjustment to match the updates that                HRC250DK 00218600
*   the MVCL instruction will make on the source               HRC250DK 00218900
*   controls (R6 & R7) during its execution.                   HRC250DK 00219200
*                                                              HRC250DK 00219500
         LA    R4,0(R3,R4)             Adjust buffer vaddr     HRC250DK 00219800
         SR    R5,R3                    and remaining length   HRC250DK 00220100
*                                                              HRC250DK 00220400
         MVCL  R2,R6                   Move a chunk of data    HRC250DK 00220700
*                                      Results: R2' = R2 + R3  HRC250DK 00221000
*                                               R3' = 0        HRC250DK 00221300
*                                               R6' = R6 + R3  HRC250DK 00221600
*                                               R7' = R7 - R3  HRC250DK 00221900
*                                                              HRC250DK 00222200
         LTR   R5,R5                   At end of buffer?       HRC250DK 00222500
         BNP   MOVFIN                  yes, we're done         HRC250DK 00222800
*                                                              HRC250DK 00223100
         LTR   R7,R7                   More to be moved?       HRC250DK 00223400
         BNZ   MOV010                  yes, get next buffer pg HRC250DK 00223700
*                                                              HRC250DK 00224000
         CLI   SAVEWRK3+3,0            Already done WSF/RPC?   HRC250DK 00224300
         BNE   MOVFIN                  yes, then all done      HRC250DK 00224600
         MVI   SAVEWRK3+3,1            Set the 1-time flag     HRC250DK 00224900
*                                                              HRC250DK 00225200
         LH    R7,GRFXRPQL             Length of WSF/RPQ data  HRC250DK 00225500
         BCTR  R7,0                    - 1 for AID (x'88')     HRC250DK 00225800
         LTR   R7,R7                   any left?               HRC250DK 00226100
         BNP   MOVFIN                  no, all done            HRC250DK 00226400
*                                                              HRC250DK 00226700
         L     R1,GRFXRPQA             Get CP buffer vaddr     HRC250DK 00227000
         LA    R1,1(,R1)               skip over AID (x'88')   HRC250DK 00227300
         TRANS 6,1,                    Bring in WSF/RPQ data   HRC250DKx00227600
               OPT=(BRING,DEFER,SYSTEM),                       HRC250DKx00227900
               IOER=IOERR,             Error in paging         HRC250DKx00228200
               ADEX=ADDRERR            Error in addressing     HRC250DK 00228500
         B     MOV010                  move this to buffer     HRC250DK 00228800
./ R 00232000 00234000 $ 00232100 200
MOVFIN   DS    0H                                              HRC250DK 00232100
         L     R1,SAVER6        Ry     Set residual length     HRC250DK 00232300
         ST    R5,0(,R1)               ... unused buffer len   HRC250DK 00232500
./ I 00237000 $ 00237100
         L     R5,SAVER5               Get back Rx ptr         HRC250DK 00237100
./ R 00258000 00259000 $ 00258100
         EJECT ,                                               HRC250DK 00258100
./ R 00294000 00297500 $ 00294100
*        None                                                  HRC250DK 00294100
./ I 00348000 $ 00348005 20
         SPACE 3                                               HRC250DK 00348005
         XC    SAVEWRK2,SAVEWRK2       Clear locked page addr  HRC250DK 00348025
         XC    SAVEWRK3,SAVEWRK3       Clear other work area   HRC250DK 00348045
*                                                              HRC250DK 00348065
*        Ensure we are running on the System VMBLOK            HRC250DK 00348085
*                                                              HRC250DK 00348105
         CL    R11,ASYSVM              Are running as system?  HRC250DK 00348125
         BE    NOSWITCH                ..yes, continue         HRC250DK 00348145
         MVI   SAVEWRK3+1,1            Set switch flag         HRC250DK 00348165
         CHARGE SWITCH,ASYSVM          Switch to system VMBLOK HRC250DK 00348185
NOSWITCH DS    0H                                              HRC250DK 00348205
         SPACE 3                                               HRC250DK 00348225
* +------------------------------------------------------------HRC250DK 00348245
* +      Allocate and initialize a new GRFXBLOK or             HRC250DK 00348265
* +      reinitialize an existing one.                         HRC250DK 00348285
* +------------------------------------------------------------HRC250DK 00348305
         SPACE 1                                               HRC250DK 00348325
         USING GRFXBLOK,R9                                     HRC250DK 00348345
         ICM   R9,15,RDEVGRFX          Already have a GRFXBLOK?HRC250DK 00348365
         BZ    NEWGRFX                 ..no, go alloc new one  HRC250DK 00348385
         ICM   R1,15,GRFXRPQA          Is there a RPQ boffer?  HRC250DK 00348405
         BZ    INITGRFX                ..no, just clear the oldHRC250DK 00348425
         CALL  DMKPGTVR                ..yes, release CP vpage HRC250DK 00348445
         B     INITGRFX                and clear old GRFXBLOK  HRC250DK 00348465
         SPACE 1                                               HRC250DK 00348485
NEWGRFX  DS    0H                                              HRC250DK 00348505
         LA    R0,GRFXLEND             Extension len in dwords HRC250DK 00348525
         CALL  DMKFREE                 Allocate the storage    HRC250DK 00348545
         LR    R9,R1                   Set permanent addressingHRC250DK 00348565
         ST    R9,RDEVGRFX             and hook to RDEVBLOK    HRC250DK 00348585
         SPACE 1                                               HRC250DK 00348605
INITGRFX DS    0H                                              HRC250DK 00348625
         XC    0(GRFXLEN,R9),0(R9)     Clear the GRFXBLOK      HRC250DK 00348645
*        Clear extended features flags                         HRC250DK 00348665
         NI    RDEVGRIC,255-RDEVEXTC-RDEVEXTH-RDEVPSS-RDEVAD14 HRC250DK 00348685
         SPACE 1                                               HRC250DK 00348705
         CLI   RDEVTYPE,TYP3066        m168 console?           HRC250DK 00348725
         BNE   NOT3066                 ..no, skip              HRC250DK 00348745
*------------------------------------------------------------- HRC250DK 00348765
*        Build a static GRFXBLOK for the 3066 console          HRC250DK 00348785
*------------------------------------------------------------- HRC250DK 00348805
         SPACE 1                                               HRC250DK 00348825
         MVC   GRFXBLOK(GRFXLEN),GRFX3066 3066 static values   HRC250DK 00348840
         B     RETURN0                 and just normal return  HRC250DK 00348860
NOT3066  DS    0H                                              HRC250DK 00348880
         SPACE 1                                               HRC250DK 00348900
./ R 00361000 00364000 $ 00361055 10
         CALL  DMKSCNRD                Get dev addr            HRC250DK 00361055
         STH   R1,IOBRADD              CUU to IOBLOK           HRC250DK 00361065
         ST    R8,IOWRDEV              Save RDEV ptr across i/oHRC250DK 00362095
         SPACE 3                                               HRC250DK 00362105
* +------------------------------------------------------------HRC250DK 00362115
* +      Handle logical devices (Diag7C) a bit differently     HRC250DK 00362125
* +------------------------------------------------------------HRC250DK 00362145
         SPACE 1                                               HRC250DK 00362155
         TM    RDEVADD,RDEVLDEV        Initializing LDEV?      HRC250DK 00362156
         BNO   NOTLDEV1                no, proceed w/senseId   HRC250DK 00362157
         BAL   R14,FINDLDEV            Set geometry from mdl#  HRC250DK 00362158
         LTR   R15,R15                 Results OK?             HRC250DK 00362175
         BNZ   IOERROR                 ..I/O error, pass back  HRC250DK 00362185
         B     GEOMETRY                Calc buffer addrs, etc. HRC250DK 00362185
NOTLDEV1 DS    0H                                              HRC250DK 00362185
         SPACE 3                                               HRC250DK 00362105
* +------------------------------------------------------------HRC250DK 00362115
* +      First issue a Sense-Id CCW to see what sort           HRC250DK 00362125
* +      of device we're dealing with                          HRC250DK 00362135
* +------------------------------------------------------------HRC250DK 00362145
         SPACE 1                                               HRC250DK 00362155
         BAL   R14,SENSEID             Issue Sense-Id CCW      HRC250DK 00362165
         LTR   R15,R15                 Results OK?             HRC250DK 00362175
         BM    IOERROR                 ..I/O error, pass back  HRC250DK 00362185
         BNZ   LEGACY                  ..old style device      HRC250DK 00362195
         SPACE 3                                               HRC250DK 00362205
* +------------------------------------------------------------HRC250DK 00362215
* +      For newer devices, issue Write-Structured-Field       HRC250DK 00362225
* +      for a Read-Partition: Query operation to get          HRC250DK 00362235
* +      a fuller description of the actual device             HRC250DK 00362245
* +------------------------------------------------------------HRC250DK 00362255
         SPACE 1                                               HRC250DK 00362265
         BAL   R14,WSFRPQ              Issue WSF/RPQ           HRC250DK 00362275
         LTR   R15,R15                 Results OK?             HRC250DK 00362285
         BM    IOERROR                 ..I/O error, pass back  HRC250DK 00362295
         BZ    GEOMETRY                ..ok, go calc addresses HRC250DK 00362305
         SPACE 3                                               HRC250DK 00362315
* +------------------------------------------------------------HRC250DK 00362325
* +      For older devices (or WSF/RPQ not valid), we          HRC250DK 00362335
* +      need to determins screen dimensions by doing          HRC250DK 00362345
* +      a full buffer read after erasing the screen           HRC250DK 00362355
* +------------------------------------------------------------HRC250DK 00362365
         SPACE 1                                               HRC250DK 00362375
LEGACY   DS    0H                                              HRC250DK 00362385
         BAL   R14,READSIZE            Use buffer sz for model HRC250DK 00362395
         LTR   R15,R15                 Results OK?             HRC250DK 00362405
         BM    IOERROR                 ..I/O error, pass back  HRC250DK 00362415
         SPACE 3                                               HRC250DK 00362425
* +------------------------------------------------------------HRC250DK 00362435
* +      Finally, once we know screen size, calculate the      HRC250DK 00362445
* +      buffer addresses needed to build the CP screens       HRC250DK 00362455
* +------------------------------------------------------------HRC250DK 00362465
         SPACE 1                                               HRC250DK 00362475
GEOMETRY DS    0H                                              HRC250DK 00362485
         CLI   RDEVTYPE,TYP3287        Did it become a printer?HRC250DK 00362495
         BE    RETURN0                 yes, no addresses neededHRC250DK 00362505
         BAL   R14,SETADDRS            Calc buffer addresses   HRC250DK 00362515
         B     FIN                     Return the R15 value    HRC250DK 00362525
         SPACE 3                                               HRC250DK 00362535
* +------------------------------------------------------------HRC250DK 00362545
* +      Normal exit: R15 = 0                                  HRC250DK 00362555
* +------------------------------------------------------------HRC250DK 00362565
         SPACE 1                                               HRC250DK 00362575
RETURN0  DS    0H                                              HRC250DK 00362585
         SR    R15,R15                 Set RC=0                HRC250DK 00362595
FIN      DS    0H                                              HRC250DK 00362605
         BAL   R14,CLEANUP             Clean up things         HRC250DK 00362615
         EXIT  ,                       and exit                HRC250DK 00362625
         SPACE 3                                               HRC250DK 00362635
* +------------------------------------------------------------HRC250DK 00362645
* +      I/O error exit: R15 = 4                               HRC250DK 00362655
* +------------------------------------------------------------HRC250DK 00362665
         SPACE 1                                               HRC250DK 00362675
IOERROR  DS    0H                                              HRC250DK 00362685
         LA    R15,4                   Set RC=4                HRC250DK 00362695
         B     FIN                     then clean up & exit    HRC250DK 00362705
         EJECT ,                                               HRC250DK 00362715
***************************************************************HRC250DK 00362725
*                                                              HRC250DK 00362735
*        C L E A N U P                                         HRC250DK 00362745
*                                                              HRC250DK 00362755
*        Perform all clean up actions & release temp storage   HRC250DK 00362765
*                                                              HRC250DK 00362775
*        Input:                                                HRC250DK 00362785
*              R8  = RDEVBLOK                                  HRC250DK 00362795
*              R10 = IOBLOK (+ work area)                      HRC250DK 00362805
*              R14 = return address                            HRC250DK 00362815
*              R15 = return code                               HRC250DK 00362825
*                                                              HRC250DK 00362835
*        Output:                                               HRC250DK 00362845
*              IOBLOK+work released                            HRC250DK 00362855
*              RPQ buffer page unlocked                        HRC250DK 00362865
*                                                              HRC250DK 00362875
***************************************************************HRC250DK 00362885
         SPACE 1                                               HRC250DK 00362895
CLEANUP  DS    0H                                              HRC250DK 00362905
         STM   R14,R15,SAVEWRK4        Save linkage regs       HRC250DK 00362915
         SPACE 1                                               HRC250DK 00362925
*                                                              HRC250DK 00362935
*        First unlock the CP virtual page that is              HRC250DK 00362945
*        allocated for the RPQ buffer                          HRC250DK 00362955
*                                                              HRC250DK 00362965
         ICM   R1,15,RDEVGRFX          Have we done anything?  HRC250DK 00362975
         BZ    NOVPAGE                 ..no, nothing to do     HRC250DK 00362985
         ICM   R1,15,GRFXRPQA          Allocates RPQ vpage?    HRC250DK 00362995
         BZ    NOVPAGE                 ..no, no cleanup needed HRC250DK 00363005
         ICM   R2,15,SAVEWRK2          Page needs unlocking?   HRC250DK 00363015
         BZ    NOVPAGE                 ..no, nothing needed    HRC250DK 00363025
         CALL  DMKPTRUL                ..yes, unlock the page  HRC250DK 00363035
NOVPAGE  DS    0H                                              HRC250DK 00363045
*                                                              HRC250DK 00363055
*        Done with IOBLOK+work area storage                    HRC250DK 00363065
*                                                              HRC250DK 00363075
         LA    R0,HDKWKSZ              IOBLOK+work size in dwdsHRC250DK 00363085 
         LR    R1,R10                  IOBLOK ptr to R1        HRC250DK 00363095
         CALL  DMKFRET                 Release the storage     HRC250DK 00363105
*                                                              HRC250DK 00363115
*        Switch back to caller's VMBLOK if needed              HRC250DK 00363125
*                                                              HRC250DK 00363135
         CLI   SAVEWRK3+1,0            Did we switch at entry? HRC250DK 00363145
         BE    NOSWIT2                 no, just do nothing     HRC250DK 00363155
         CHARGE SWITCH,SAVER11         yes, switch back        HRC250DK 00363165
NOSWIT2  DS    0H                                              HRC250DK 00363175
*                                                              HRC250DK 00363185
*        and return                                            HRC250DK 00363195
*                                                              HRC250DK 00363205
         LM    R14,R15,SAVEWRK4        restore linkage regs    HRC250DK 00363215
         BR    R14                     and return              HRC250DK 00363225
         EJECT ,                                               HRC250DK 00363235
***************************************************************HRC250DK 00363245
*                                                              HRC250DK 00363255
*        S E N S E I D                                         HRC250DK 00363265
*                                                              HRC250DK 00363275
*        Issue a Sense-Id (x'E4') CCW and analyze the results  HRC250DK 00363285
*                                                              HRC250DK 00363295
*        Input:                                                HRC250DK 00363305
*              R8  = RDEVBLOK                                  HRC250DK 00363315
*              R9  = GRFXBLOK                                  HRC250DK 00363325
*              R10 = IOBLOK (+ work area)                      HRC250DK 00363335
*              R14 = return address                            HRC250DK 00363345
*                                                              HRC250DK 00363355
*        Output:                                               HRC250DK 00363365
*              R15 = completion status:                        HRC250DK 00363375
*                    <  0 -- I/O error occured                 HRC250DK 00363385
*                    == 0 -- successful                        HRC250DK 00363395
*                    >  0 -- failed, is probably legacy device HRC250DK 00363405
*                                                              HRC250DK 00363415
***************************************************************HRC250DK 00363425
         SPACE 1                                               HRC250DK 00363435
SENSEID  DS    0H                                              HRC250DK 00363445
         ST    R14,SAVEWRK4            Save return address     HRC250DK 00363455
         SPACE 3                                               HRC250DK 00363465
*        Set up and issue a SENSE ID command to the            HRC250DK 00363475
*        device to, hopefully, get the "real" device           HRC250DK 00363485
*        and control unit type and model. This is used         HRC250DK 00363495
*        to find out if the Read-Partition-Query is            HRC250DK 00363505
*        supported.                                            HRC250DK 00363515
         SPACE 1                                               HRC250DK 00363525
         MVC   IOWCCW1,SIDCCW          Set up SENSE IO chan prgHRC250DK 00363535
         LA    R5,IOWDATA              the result will go here HRC250DK 00363545
         STCM  R5,7,IOWCCW1+1          ...                     HRC250DK 00363555
         SPACE 1                                               HRC250DK 00363565
*--------------------------------------------------------------HRC250DK 00363575
*        Issue the SENSE ID channel program                    HRC250DK 00363585
*--------------------------------------------------------------HRC250DK 00363595
         SPACE 1                                               HRC250DK 00363605
         LA    R1,IOWCCW1              Point IOBLOK at chan prgHRC250DK 00363615
         OI    IOBSPEC3,IOBBYPER       IOS should ignore errorsHRC250DK 00363625
         SPACE 1                                               HRC250DK 00363635 
         BAL   R5,CPIO                 and let 'er rip         HRC250DK 00363645   
         SPACE 1                                               HRC250DK 00363655
*--------------------------------------------------------------HRC250DK 00363665
*        Check the completion status                           HRC250DK 00363675
*--------------------------------------------------------------HRC250DK 00363685
         SPACE 1                                               HRC250DK 00363695
         TM    IOBSPEC3,IOBHADER       was there an I/O error? HRC250DK 00363705      
         BZ    SENSEOK                 no, data is valid       HRC250DK 00363715
         TM    IOBFSNS1,CMDREJ         Command-Reject?         HRC250DK 00363725
         BO    SIDRET4                 yes, can't do WSF/RPQ   HRC250DK 00363735
         B     SIDIOERR                no, set error code      HRC250DK 00363745
         SPACE 1                                               HRC250DK 00363755
SENSEOK  DS    0H                                              HRC250DK 00363765
         LA    R5,IOWDATA              Access the E4 results   HRC250DK 00363545
         USING SIDDATA,R5              R5 is still valid       HRC250DK 00363775
         LH    R1,IOWCCW1+6            Calc SnsId data length  HRC250DK 00363785
         SH    R1,IOBCSW+6             ...                     HRC250DK 00363795
         SPACE 1                                               HRC250DK 00363805
*--------------------------------------------------------------HRC250DK 00363815
*        Save Sense-ID result to GRFXBLOK                      HRC250DK 00363825
*        (result length in R1)                                 HRC250DK 00363835
*--------------------------------------------------------------HRC250DK 00363845
         SPACE 1                                               HRC250DK 00363855
         CH    R1,=AL2(SIDMINLN)       At least have CU info?  HRC250DK 00363865
         BL    SIDRET4                 ..no, must be old CU    HRC250DK 00363875
         MVC   GRFXCUTY,SIDCUTY        set CU type number      HRC250DK 00363885
         MVC   GRFXCUMD,SIDCUMD        set CU model number     HRC250DK 00363895      
         OI    GRFXE4FL,GRFXCUOK       the CU id is valid      HRC250DK 00363905
         SPACE 1                                               HRC250DK 00363915
         CH    R1,=AL2(SIDFULLN)       Results have dev info?  HRC250DK 00363925
         BL    SETXSEL                 ..no, must be old CU    HRC250DK 00363935
         MVC   GRFXDVTY,SIDDVTY        set Dev type number     HRC250DK 00363945
         MVC   GRFXDVMD,SIDDVMD        set Dev model number    HRC250DK 00363955
         ICM   R1,7,GRFXDVID           Got valid values?       HRC250DK 00363965
         BZ    SETXSEL                 ..no, done              HRC250DK 00363975
         OI    GRFXE4FL,GRFXDVOK       ..yes, set is-valid flagHRC250DK 00363985
         SPACE 1                                               HRC250DK 00363995
         DROP  R5                      Done with Sns-Id data   HRC250DK 00364005
         SPACE 3                                               HRC250DK 00364015
SETXSEL  DS    0H                                              HRC250DK 00364025
         CLC   GRFXCUID,=X'32741D'     is this a 3274-1D CU?   HRC250DK 00364035
         BE    EXTSEL                  yes, can do ext. selectsHRC250DK 00364045   
         SPACE 1                                               HRC250DK 00364055
         CLC   GRFXCUID,=X'31741D'     is this a 3174-1L CU?   HRC250DK 00364065
         BNE   SIDRET0                 no, don't do ext selectsHRC250DK 00364075   
         SPACE 1                                               HRC250DK 00364085
EXTSEL   DS    0H                                              HRC250DK 00364095
         OI    RDEVGRIC,RDEVXSEL       CU handles ext selects  HRC250DK 00364105 
         SPACE 3                                               HRC250DK 00364115
SIDRET0  DS    0H                                              HRC250DK 00364125
         SR    R15,R15                 RC = 0                  HRC250DK 00364135
         B     SIDFIN                                          HRC250DK 00364145
SIDRET4  DS    0H                                              HRC250DK 00364155
         LA    R15,4                   RC = 4 : Legacy device  HRC250DK 00364165
         B     SIDFIN                                          HRC250DK 00364175
SIDIOERR DS    0H                                              HRC250DK 00364185
         LH    R15,=H'-4'              RC = -1 : I/O error     HRC250DK 00364195
SIDFIN   DS    0H                                              HRC250DK 00364205
         L     R14,SAVEWRK4            Return to caller        HRC250DK 00364215
         BR    R14                     ...                     HRC250DK 00364225
         EJECT ,                                               HRC250DK 00364235
***************************************************************HRC250DK 00364245
*                                                              HRC250DK 00364255
*        W S F R P Q                                           HRC250DK 00364265
*                                                              HRC250DK 00364275
*        Issue a Write-Structured-Field CCW with a Read        HRC250DK 00364285
*        Paartition: Query content. Then examine the           HRC250DK 00364295
*        results to set device geometry and options            HRC250DK 00364305
*                                                              HRC250DK 00364315
*        Input:                                                HRC250DK 00364325
*              R8  = RDEVBLOK                                  HRC250DK 00364335
*              R9  = GRFXBLOK                                  HRC250DK 00364345
*              R10 = IOBLOK (+ work area)                      HRC250DK 00364355
*              R14 = return address                            HRC250DK 00364365
*                                                              HRC250DK 00364375
*        Output:                                               HRC250DK 00364385
*              R15 = completion status:                        HRC250DK 00364395
*                    <  0 -- I/O error occured                 HRC250DK 00364405
*                    == 0 -- successful                        HRC250DK 00364415
*                    >  0 -- failed, is probably legacy device HRC250DK 00364425
*                                                              HRC250DK 00364435
***************************************************************HRC250DK 00364445
         SPACE 1                                               HRC250DK 00364455
WSFRPQ   DS    0H                                              HRC250DK 00364465
         ST    R14,SAVEWRK4            Save return address     HRC250DK 00364475
         SPACE 3                                               HRC250DK 00364485
*        No point in issuing the WSFQ command if we know       HRC250DK 00364495
*        the device or control unit does not support it.       HRC250DK 00364505
*        Use a READ BUFFER instead to determine the screen     HRC250DK 00364515
*        size.                                                 HRC250DK 00364525
         SPACE 1                                               HRC250DK 00364535
         CLI   RDEVTYPE,TYP3277        3277 display ?          HRC250DK 00364545
         BE    WSFRET4                 yes, no WSF support     HRC250DK 00364555
         CLI   RDEVTYPE,TYP3284        3284 display printer ?  HRC250DK 00364565
         BE    WSFRET4                 yes, no WSF support     HRC250DK 00364575
         SPACE 1                                               HRC250DK 00364585
         CLC   GRFXCUID,=X'32741B'     3274-1B  control unit ? HRC250DK 00364595
         BE    WSFRET4                 yes, no WSF support     HRC250DK 00364605
         SPACE 1                                               HRC250DK 00364615
         CLC   GRFXCUTY,=X'4381'       3278/9 model 2A/2C ?    HRC250DK 00364625
         BNE   TRYWSFQ                 no, go try WSF/RPQ      HRC250DK 00364635
         SPACE 1                                               HRC250DK 00364645
*                                                              HRC250DK 00364655
*        Special handling for 3278-2A and 3279-2C consoles     HRC250DK 00364665
*                                                              HRC250DK 00364675
         SPACE 1                                               HRC250DK 00364685
         MVI   GRFXERAS,CCWEW          use the ERASE WRITE ccw HRC250DK 00364695
         MVC   GRFXROWS,MD2AROWS       set model 2A/2C goemetryHRC250DK 00364705 
         MVC   GRFXCOLS,MD2ACOLS       ..  = 20x80             HRC250DK 00364715
         SPACE 1                                               HRC250DK 00364725
         B     WSFRET0                 return success          HRC250DK 00364735
         EJECT ,                                               HRC250DK 00364745
***************************************************************HRC250DK 00364755
*                                                              HRC250DK 00364765
*        Set up and issue a Write-Structured-Field command     HRC250DK 00364775
*        with the Read Partition Query field. This will        HRC250DK 00364785
*        return DE when the command is processed by the        HRC250DK 00364795
*        control unit. Later, an Attn interrupt will be        HRC250DK 00364805
*        posted when the device has generated the response.    HRC250DK 00364815
*        DMKGRFIN will then invoke HDKGINRD to issue a         HRC250DK 00364825
*        Read-Modified CCW to read the RPQ response.           HRC250DK 00364835
*                                                              HRC250DK 00364845
***************************************************************HRC250DK 00364855
         SPACE 1                                               HRC250DK 00364865
TRYWSFQ  DS    0H                                              HRC250DK 00364875  
         MVC   IOWCCW1,WSFCCW          Set up WSF/RPQ ccws     HRC250DK 00364885
         LA    R1,WSFDATA               with this data         HRC250DK 00364895
         STCM  R1,7,IOWCCW1+1          ...                     HRC250DK 00364905
         SPACE 1                                               HRC250DK 00364915
*--------------------------------------------------------------HRC250DK 00364925
*        Issue the WSF/RPQ channel program                     HRC250DK 00364935
*--------------------------------------------------------------HRC250DK 00364945
         SPACE 1                                               HRC250DK 00364955
         LA    R1,IOWCCW1              Point IOBLOK at chan prgHRC250DK 00364965
         OI    IOBSPEC3,IOBBYPER       IOS should ignore errorsHRC250DK 00364975
         SPACE 1                                               HRC250DK 00364985
./ R 00367000 00368000 $ 00367005 100
         SPACE 1                                               HRC250DK 00367005
*--------------------------------------------------------------HRC250DK 00367105
*        Check the completion status                           HRC250DK 00367205
*--------------------------------------------------------------HRC250DK 00367305
         SPACE 1                                               HRC250DK 00367405
         TM    IOBSPEC3,IOBHADER       was there an I/O error? HRC250DK 00367505
         BZ    WAITATTN                no, Write was good      HRC250DK 00367605
         TM    IOBFSNS1,CMDREJ         Command-Reject?         HRC250DK 00367705
         BO    WSFRET4                 yes, can't do WSF/RPQ   HRC250DK 00367805
         B     WSFIOERR                no, return I/O error    HRC250DK 00367905
         SPACE 1                                               HRC250DK 00368005
*--------------------------------------------------------------HRC250DK 00368105
*        Await the ATTN interrupt when CU has composed         HRC250DK 00368205
*        the RPQ response                                      HRC250DK 00368305
*--------------------------------------------------------------HRC250DK 00368405
         SPACE 1                                               HRC250DK 00368505
WAITATTN DS    0H                                              HRC250DK 00368605
./ R 00387000 $ 00387010 100
         L     R8,IOWRDEV              Reload RDEVBLOK ptr     HRC250DK 00387010
         L     R9,RDEVGRFX             and reload GRFXBLOK ptr HRC250DK 00387110
./ R 00389000 00392000 $ 00389005 100
         SPACE 1                                               HRC250DK 00389005
         TM    IOBCSW+4,UC             Device error?           HRC250DK 00389105
         BO    WSFIOERR                yes, return I/O error   HRC250DK 00389205
         TM    IOBCSW+4,ATTN           Make sure it is ATTN    HRC250DK 00389305
         BNO   WAITATTN                ... wait for that       HRC250DK 00389405 
         SPACE 3                                               HRC250DK 00389505
*--------------------------------------------------------------HRC250DK 00389605
*        Allocate a page of CP virtual storage for the         HRC250DK 00389705
*        Read-Partition-Query response and prepare the         HRC250DK 00389805
*        Read-Modified channel program.                        HRC250DK 00389905
*--------------------------------------------------------------HRC250DK 00390005
         SPACE 1                                               HRC250DK 00390105
         ICM   R1,15,GRFXRPQA          RPQ buffer allocated?   HRC250DK 00390205
         BNZ   LOCKIT                  yes, just lock it       HRC250DK 00390305 
         CALL  DMKPGTVG                Allocate CP virt page   HRC250DK 00390405
         ST    R1,GRFXRPQA             (save in GRFXBLOK)      HRC250DK 00390505
LOCKIT   DS    0H                                              HRC250DK 00390605
         TRANS 2,1,                    Lock buffer             HRC250DKx00390705
               OPT=(BRING,DEFER,LOCK,SYSTEM)                   HRC250DK 00390805
         ST    R2,SAVEWRK2             (Save physical addr)    HRC250DK 00390005
         SPACE 1                                               HRC250DK 00391005
         MVC   IOWCCW1(RMDCCWL),RMDCCW Move in CCWs            HRC250DK 00391105
         STCM  R2,7,IOWCCW2+1          and plug in buffer addr HRC250DK 00391205
         SPACE 3                                               HRC250DK 00391305
*--------------------------------------------------------------HRC250DK 00391405
*        Issue the Read-Modified channel program               HRC250DK 00391505
*--------------------------------------------------------------HRC250DK 00391605
         SPACE 1                                               HRC250DK 00391705
         LA    R1,IOWCCW1              Point IOBLOK at chanprogHRC250DK 00391805
         OI    IOBSPEC3,IOBBYPER       IOS should ignore errorsHRC250DK 00391905
         SPACE 1                                               HRC250DK 00392005
./ R 00394000 00410000 $ 00394005
         SPACE 1                                               HRC250DK 00394005
*--------------------------------------------------------------HRC250DK 00394005
*        Check the completion status                           HRC250DK 00394005
*--------------------------------------------------------------HRC250DK 00394005
         SPACE 1                                               HRC250DK 00394005
         TM    IOBSPEC3,IOBHADER       was there an I/O error? HRC250DK 00394005
         BNZ   WSFRET4                 yes, setup w/o RPQ data HRC250DK 00394005
         SPACE 1                                               HRC250DK 00394005
         L     R2,SAVEWRK2             -> RPQ buffer           HRC250DK 00394005 
         CLI   0(R2),AIDSTFLD          Structured fld response?HRC250DK 00394005
         BNE   WSFRET4                 no, set up w/o RPQ data HRC250DK 00394005
         SPACE 1                                               HRC250DK 00394005
         LH    R3,IOWCCW2+6            Calc the amount read    HRC250DK 00394005
         SH    R3,IOBCSW+6             ...                     HRC250DK 00394005
         BNP   WSFRET4                 ... nothing.. ignore    HRC250DK 00394005
         STH   R3,GRFXRPQL             Save length in GRFXBLOK HRC250DK 00394005
         SPACE 1                                               HRC250DK 00394005
         BCT   R3,WSFRET4              Reduce length for AID   HRC250DK 00394005
         LA    R2,1(,R2)               and bump past the AID   HRC250DK 00394005
         LA    R4,0(R3,R2)             point to the end        HRC250DK 00394005
         BCTR  R4,0                    ...                     HRC250DK 00394005
         SPACE 1                                               HRC250DK 00394005
         USING SFLD,R2            (Structured Field addressing)HRC250DK 00394005
         EJECT ,                                               HRC250DK 00394005
***************************************************************HRC250DK 00394005
*                                                              HRC250DK 00394005
*        Scan all the structured fields in the                 HRC250DK 00394005
*        Read Partition Query response                         HRC250DK 00394005
*                                                              HRC250DK 00394005
***************************************************************HRC250DK 00394005
         SPACE 1                                               HRC250DK 00394005
./ R 00412000 $ 00412005
         CLI   QRQCODE,QRUA            ID usable area?         HRC250DK 00412005
./ R 00414000 $ 00414005
         CLI   QRQCODE,QRHI            ID Highlight?           HRC250DK 00414005
./ R 00416000 $ 00416005
         CLI   QRQCODE,QRCOL           ID Color?               HRC250DK 00416005
./ R 00418000 $ 00418005
         CLI   QRQCODE,QRCHS           ID Character sets?      HRC250DK 00418005
./ R 00420000 $ 00420005
         CLI   QRQCODE,QRANP           Alphanumeric partitions?HRC250DK 00420005
./ R 00422000 $ 00422005
         CLI   QRQCODE,QRIP            Implicit oaartition?    HRC250DK 00422005
./ R 00424000 00431000 $ 00424005 100
         SPACE 3                                               HRC250DK 00424005
*--------------------------------------------------------------HRC250DK 00424105
*        End of the Structured Field scan loop                 HRC250DK 00424205
*--------------------------------------------------------------HRC250DK 00424305
         SPACE 1                                               HRC250DK 00424405
NEXTID   DS    0H                                              HRC250DK 00424505
         SR    R4,R4                   Get length of current   HRC250DK 00424605
         ICM   R4,3,SFLEN                structured field      HRC250DK 00424705 
         SR    R3,R4                   Reduce length remaining HRC250DK 00424805
         BNP   WSFRET0                 Done... do buffer addrs HRC250DK 00424905
         AR    R2,R4                   Bump ptr to next SF     HRC250DK 00425005
         B     CHKIDS                  and process that one    HRC250DK 00425105
         SPACE 3                                               HRC250DK 00425205
WSFRET0  DS    0H                                              HRC250DK 00425305
         SR    R15,R15                 RC = 0                  HRC250DK 00425405
WSFFIN   DS    0H                                              HRC250DK 00425505
         L     R14,SAVEWRK4            Return to caller        HRC250DK 00425605
         BR    R14                     ...                     HRC250DK 00425705
WSFRET4  DS    0H                                              HRC250DK 00425805
         LA    R15,4                   RC = 4 : Legacy device  HRC250DK 00425905
         B     WSFFIN                                          HRC250DK 00426005
WSFIOERR DS    0H                                              HRC250DK 00426105
         LH    R15,=H'-4'              RC = -1 : I/O error     HRC250DK 00426205
         B     WSFFIN                                          HRC250DK 00426305
         SPACE 3                                               HRC250DK 00426405
*                                                              HRC250DK 00426505
*        Usable Area (x'81') Query Reply field                 HRC250DK 00426605
*                                                              HRC250DK 00426705
         SPACE 1                                               HRC250DK 00426805
./ R 00433000 00434000 $ 00433100 1000
         TM    QRUAFLG1,QRUA1214       14-bit buf addrs?       HRC250DK 00433100
         BNO   *+8                     no, next check          HRC250DK 00434100
./ I 00435000 $ 00435105 100
         SPACE 1                                               HRC250DK 00435105
         TM    SAVEWRK3,1              Had IP structured field?HRC250DK 00435205
         BO    NEXTID                  yes, use those values   HRC250DK 00435305
         TM    QRUAFLG2,QRUAPELS       Dimensions in pels?     HRC250DK 00435405
         BO    NEXTID                  yes, don't use values   HRC250DK 00435505
         SPACE 1                                               HRC250DK 00435605
         MVC   GRFXROWS,QRUAH          Set height in cells     HRC250DK 00435705
         MVC   GRFXCOLS,QRUAW          Set width in cells      HRC250DK 00435805
./ R 00437000 $ 00437050 50
         SPACE 3                                               HRC250DK 00437050
*                                                              HRC250DK 00437100
*        Color (x'86') Query Reply field                       HRC250DK 00437150
*                                                              HRC250DK 00437200
         SPACE 1                                               HRC250DK 00437250
./ R 00439000 00442000 $ 00439105 100
*                                                              HRC250DK 00439105
*        Loop thru the color attribute pairs to see if the     HRC250DK 00439205
*        device is capable of displaying more than the default HRC250DK 00439305
*        colors. Set the flag if it is.                        HRC250DK 00439405
*                                                              HRC250DK 00439505
         SR    R0,R0                   Get the color pair countHRC250DK 00439605
         ICM   R0,1,QRCOLNP            ...                     HRC250DK 00439705
         BZ    NEXTID                  Ignore if zero pairs    HRC250DK 00439805
         LA    R5,QRCOLCAV             => 1st pair             HRC250DK 00439905
COLLP    DS    0H                                              HRC250DK 00440005
         CLI   0(R5),0                 Default CAV?            HRC250DK 00440105
         BE    COLNX                   yes, try next one       HRC250DK 00440205
         CLI   1(R5),0                 Non-default CID?        HRC250DK 00440305
         BE    COLSET                  yes, set flag           HRC250DK 00440405
COLNX    DS    0H                                              HRC250DK 00440505
         LA    R5,2(,R5)               next pair               HRC250DK 00440605
         BCT   R0,COLLP                and look at them all    HRC250DK 00440705
         B     NEXTID                  next field              HRC250DK 00440805
COLSET   DS    0H                                              HRC250DK 00440905
./ R 00445000 $ 00445050 50
         SPACE 3                                               HRC250DK 00445050
*                                                              HRC250DK 00445100
*        Extended Hilighting (x'87') Query Reply field         HRC250DK 00445150
*                                                              HRC250DK 00445200
         SPACE 1                                               HRC250DK 00445250
./ R 00447000 00450000 $ 00447105 100
*                                                              HRC250DK 00447105
*        Loop thru the value/action pairs to see if the        HRC250DK 00447205
*        device is capable of displaying more than the         HRC250DK 00447305
*        default highlight values. Set the flag if it is.      HRC250DK 00447405 
*                                                              HRC250DK 00447505
         SR    R0,R0                   Get value/action        HRC250DK 00447605
         ICM   R0,1,QRHINP                pair count.          HRC250DK 00447705
         BZ    NEXTID                  Ignore if zero pairs    HRC250DK 00447805
         LA    R5,QRHIVAL              => 1st pair             HRC250DK 00447905
HILP     DS    0H                                              HRC250DK 00448005
         CLI   0(R5),0                 Default VAL?            HRC250DK 00448105
         BE    HINX                    yes, try next one       HRC250DK 00448205
         CLI   1(R5),0                 Non-default ACT?        HRC250DK 00448305
         BE    HISET                   yes, set flag           HRC250DK 00448405
HINX     DS    0H                                              HRC250DK 00448505
         LA    R5,2(,R5)               next pair               HRC250DK 00448605
         BCT   R0,HILP                 and look at them all    HRC250DK 00448705
         B     NEXTID                  next field              HRC250DK 00448805
HISET    DS    0H                                              HRC250DK 00448905
./ R 00453000 $ 00453050 50
         SPACE 3                                               HRC250DK 00453050
*                                                              HRC250DK 00453100
*        Character Sets (x'85') Query Reply field              HRC250DK 00453150
*                                                              HRC250DK 00453200
         SPACE 1                                               HRC250DK 00453250
./ R 00455000 $ 00455005
         TM    QRCHSFL1,QRCHSPSS       Loadable PSS supported? HRC250DK 00455005
./ I 00456000 $ 00456010 30
*                                                              HRC250DK 00456010
*        Loop thru the active PSS descriptors                  HRC250DK 00456040
*        looking for one flagged as loadable                   HRC250DK 00456070
*                                                              HRC250DK 00456100
         SR    R5,R5                   Get size of the         HRC250DK 00456130
         ICM   R5,3,SFLEN                structured field      HRC250DK 00456160
         BZ    NEXTID                  get out if  bad data    HRC250DK 00456190
         AR    R5,R2                   -> end of struct fld    HRC250DK 00456220
         BCTR  R5,0                    ... ast byte actually   HRC250DK 00456250
         SR    R6,R6                   Get size of descriptor  HRC250DK 00456280
         IC    R6,QRCHSDL              ...                     HRC250DK 00456310
         LA    R4,QRCHSDSC             -> 1st PSS descriptor   HRC250DK 00456340
         USING QRCHSDSC,R4             (temp addressing)       HRC250DK 00456370
CHSLOOP  DS    0H                                              HRC250DK 00456400
         CR    R4,R5                   End of PSS descriptors? HRC250DK 00456430
         BNL   NEXTID                  yes, done with this fld HRC250DK 00456460
         TM    QRCHSDFL,QRCHSDLD       Loadable flag set?      HRC250DK 00456490
         BO    CHSLODBL                yes, save setting       HRC250DK 00456520
         AR    R4,R6                   next descriptor         HRC250DK 00456550
         B     CHSLOOP                                         HRC250DK 00456580
         DROP  R4                                              HRC250DK 00456610
CHSLODBL DS    0H                                              HRC250DK 00456640
./ R 00459000 $ 00459050 50
         SPACE 3                                               HRC250DK 00459050
*                                                              HRC250DK 00459100
*        Alpha Numeric Partitions (x'84') Query Reply field    HRC250DK 00459150
*                                                              HRC250DK 00459200
         SPACE 1                                               HRC250DK 00459250
./ R 00461000 $ 00461005
         MVC   RDEVPART,QRANPNA        Max A/N partition count HRC250DK 00461005
./ R 00463000 $ 00463050 50
         SPACE 3                                               HRC250DK 00463050
*                                                              HRC250DK 00463100
*        Implicit Partition (x'a6') Query Reply field          HRC250DK 00463150
*                                                              HRC250DK 00463200
         SPACE 1                                               HRC250DK 00463250
./ R 00465000 00516000 $ 00465100 100
*                                                              HRC250DK 00465100
*        Loop thru the self-defining parameters                HRC250DK 00465200
*                                                              HRC250DK 00465300
         SR    R5,R5                   Get size of the         HRC250DK 00465400
         ICM   R5,3,SFLEN                structured field      HRC250DK 00465500
         BZ    NEXTID                  get out if bad data     HRC250DK 00465600
         AR    R5,R2                   -> end of struct fld    HRC250DK 00465700
         BCTR  R5,0                    ... ast byte actually   HRC250DK 00465800
         SR    R6,R6                   (clear for work)        HRC250DK 00465900
         LA    R4,QRIPSDPS             -> 1st self-def parm    HRC250DK 00466000
         USING QRIPSDPS,R4             (temp addressing)       HRC250DK 00466100
IPLOOP   DS    0H                                              HRC250DK 00466200
         CR    R4,R5                   End of parameters?      HRC250DK 00466300
         BNL   NEXTID                  yes, done with field    HRC250DK 00466400
         SPACE 1                                               HRC250DK 00466500
         CLI   IPSDID,SDPIPSD          Display partition size? HRC250DK 00466600
         BNE   IPPRT                   ..no, try printer       HRC250DK 00466700
         MVI   RDEVTYPE,TYP3278        Set display device type HRC250DK 00466800
         MVC   GRFXROWS,IPSDHA         Set height in cells     HRC250DK 00466900
         MVC   GRFXCOLS,IPSDWA         Set width in cells      HRC250DK 00467000
         MVI   SAVEWRK3,1              Tell Usable Area        HRC250DK 00467100
         SPACE 1                                               HRC250DK 00467200
IPNEXT   DS    0H                                              HRC250DK 00467300
         IC    R6,IPSDL                Get this parm length    HRC250DK 00467400
         AR    R4,R6                   Bump pointer            HRC250DK 00467500
         B     IPLOOP                   and process them all   HRC250DK 00467600
         SPACE 1                                               HRC250DK 00467700
IPPRT    DS    0H                                              HRC250DK 00467800
         CLI   IPSPID,SDPIPSP          Partition size (printer)HRC250DK 00467900
         BNE   IPNEXT                  ..no, try next          HRC250DK 00468000
         MVI   RDEVTYPE,TYP3287        ..yes, set RDEV to prt  HRC250DK 00468100
         B     IPNEXT                  and look at next parm   HRC250DK 00468200
         SPACE 1                                               HRC250DK 00468300
         DROP  R2,R4                                           HRC250DK 00468400
         EJECT ,                                               HRC250DK 00468500
***************************************************************HRC250DK 00468600
*                                                              HRC250DK 00468700
*        R E A D S I Z E                                       HRC250DK 00468800
*                                                              HRC250DK 00468900
*        Determine display model & screen geometry based       HRC250DK 00469000
*        on buffer size                                        HRC250DK 00469100
*                                                              HRC250DK 00469200
*        Input:                                                HRC250DK 00469300
*              R8  = RDEVBLOK                                  HRC250DK 00469400
*              R9  = GRFXBLOK                                  HRC250DK 00469500
*              R10 = IOBLOK (+ work area)                      HRC250DK 00469600
*              R14 = return address                            HRC250DK 00469700
*                                                              HRC250DK 00469800
*        Output:                                               HRC250DK 00469900
*              R15 = completion status:                        HRC250DK 00470000
*                    <  0 -- I/O error occured                 HRC250DK 00470100
*                    == 0 -- successful                        HRC250DK 00470200
*                                                              HRC250DK 00470300
***************************************************************HRC250DK 00470400
         SPACE 1                                               HRC250DK 00470500
READSIZE DS    0H                                              HRC250DK 00470600
         ST    R14,SAVEWRK4            Save return address     HRC250DK 00470700
         SPACE 3                                               HRC250DK 00470800
*        End up here when either the Sense-Id CCW or some part HRC250DK 00470900
*        of the WSF-RPQ operation fails. The logic here will   HRC250DK 00471000
*        determine the screen geometry by doing a Read-Buffer  HRC250DK 00471100
*        and analyzing the size of the data returned. (Not     HRC250DK 00471200
*        really reading since the RB CCW SKIP bit is on.)      HRC250DK 00471300
         SPACE 1                                               HRC250DK 00471400
*        First issue an Erase-Write-Alternate to clear         HRC250DK 00471500
*        screen content and place it in its alternate          HRC250DK 00471600
*        configuration.                                        HRC250DK 00471700
         SPACE 1                                               HRC250DK 00471800
         MVC   IOWCCW1(EWACCWL),EWACCW Setup the EWA CCWs      HRC250DK 00471900
         LA    R1,ERSDATA              w/real addr of WCC      HRC250DK 00472000
         STCM  R1,7,IOWCCW2+1          .. in 2nd CCW           HRC250DK 00472100
         LA    R1,IOWCCW1              EWA operation           HRC250DK 00472200
         OI    IOBSPEC3,IOBBYPER       IOS should ignore error HRC250DK 00472300
         SPACE 1                                               HRC250DK 00472400
         BAL   R5,CPIO                 and let 'er rip         HRC250DK 00472500
         SPACE 1                                               HRC250DK 00472600
         TM    IOBSPEC3,IOBHADER       was there an I/O error? HRC250DK 00472700
         BNO   DOREAD                  ..no, just do the RB    HRC250DK 00472800
         SPACE 1                                               HRC250DK 00472900
         MVC   IOWCCW1(EWCCWL),EWCCW   Try just Erase-Wwrite   HRC250DK 00473000
         LA    R1,ERSDATA              w/real addr of WCC      HRC250DK 00473100
         STCM  R1,7,IOWCCW2+1          .. in 2nd CCW           HRC250DK 00473200
         LA    R1,IOWCCW1              EW operation            HRC250DK 00473300
         OI    IOBSPEC3,IOBBYPER       IOS should ignore errorsHRC250DK 00473400
         SPACE 1                                               HRC250DK 00473500
         BAL   R5,CPIO                 and let 'er rip         HRC250DK 00473600
         SPACE 1                                               HRC250DK 00473700
         TM    IOBSPEC3,IOBHADER       was there an I/O error? HRC250DK 00473800
         BNZ   SIZIOERR                ..yes, return the error HRC250DK 00473900
         SPACE 1                                               HRC250DK 00474000
*        Issue a Read-Buffer with a large data length          HRC250DK 00474100
*        but with SKIP flag on. Then use the residual          HRC250DK 00474200
*        length result to figure the size of the, now,         HRC250DK 00474300
*        totally empty display buffer. This size will          HRC250DK 00474400
*        be used to determine the 327x model number            HRC250DK 00474500
*        and, thus, display geometry.                          HRC250DK 00474600
         SPACE 1                                               HRC250DK 00474700
DOREAD   DS    0H                                              HRC250DK 00474800
         MVC   IOWCCW1(RBCCWL),RBCCW   Issue Read-Buffer with..HRC250DK 00474900
         LA    R1,IOWCCW1              EW operation            HRC250DK 00475000
         NI    IOBSPEC3,255-IOBBYPER   (revert err handling)   HRC250DK 00475100
         SPACE 1                                               HRC250DK 00475200
         BAL   R5,CPIO                 and let 'er rip         HRC250DK 00475300
         SPACE 1                                               HRC250DK 00475400
         TM    IOBSTAT,IOBFATAL        was there an I/O error? HRC250DK 00475500
         BO    SIZIOERR                ..yes, return the error HRC250DK 00475600
         SPACE 1                                               HRC250DK 00475700
         LH    R1,IOWCCW2+6            Calc Read-Buffer length HRC250DK 00475800
         SH    R1,IOBCSW+6             ...                     HRC250DK 00475900
         S     R1,F3                   - 3 for AID+Cursor      HRC250DK 00476000
         SPACE 1                                               HRC250DK 00476100
         USING TUBEINFO,R2             Access the buffer size  HRC250DK 00476200
         LA    R2,TUBETAB                lookup able           HRC250DK 00476300
         LA    R0,TUBECNT              Get entry count         HRC250DK 00476400
TUBELP   DS    0H                                              HRC250DK 00476500
         CH    R1,TUBEBUFF             Match on buffer size    HRC250DK 00476600
         BE    TUBEGOT                 .. got it               HRC250DK 00476700
         LA    R2,TUBELEN(,R2)         Next entry              HRC250DK 00476800
         BCT   R0,TUBELP               and search them all     HRC250DK 00476900
         LA    R2,TUBE2                default to Mod2         HRC250DK 00477000
         SPACE 1                                               HRC250DK 00477100
TUBEGOT  DS    0H                                              HRC250DK 00477200
         MVC   GRFXROWS,TUBEROWS       Set rows/cols based     HRC250DK 00477300
         MVC   GRFXCOLS,TUBECOLS         on the buffer size    HRC250DK 00477400
         SPACE 1                                               HRC250DK 00477500
         DROP  R2                                              HRC250DK 00477600
         SPACE 3                                               HRC250DK 00477700
SIZRET0  DS    0H                                              HRC250DK 00477800
         SR    R15,R15                 RC = 0                  HRC250DK 00477900
SIZFIN   DS    0H                                              HRC250DK 00478000
         L     R14,SAVEWRK4            Return to caller        HRC250DK 00478100
         BR    R14                     ...                     HRC250DK 00478200
SIZRET4  DS    0H                                              HRC250DK 00478300
         LA    R15,4                   RC = 4 : Legacy device  HRC250DK 00478400
         B     SIZFIN                                          HRC250DK 00478500
SIZIOERR DS    0H                                              HRC250DK 00478600
         LH    R15,=H'-4'              RC = -1 : I/O error     HRC250DK 00478700
         B     SIZFIN                                          HRC250DK 00478800
         EJECT ,                                               HRC250DK 00478900
***************************************************************HRC250DK 00479000
*                                                              HRC250DK 00479100
*        F I N D L D E V                                       HRC250DK 00479200
*                                                              HRC250DK 00479300
*        Initialize the geometry in GRFXBLOK for Logical       HRC250DK 00479400
*        Devices (Diag7C) based on declared model number       HRC250DK 00479500
*                                                              HRC250DK 00479800
*        Input:                                                HRC250DK 00479900
*              R8  = RDEVBLOK                                  HRC250DK 00480000
*              R9  = GRFXBLOK                                  HRC250DK 00480100
*              R10 = IOBLOK (+ work area)                      HRC250DK 00480200
*              R14 = return address                            HRC250DK 00480300
*                                                              HRC250DK 00480400
*        Output:                                               HRC250DK 00480500
*              R15 = completion status:                        HRC250DK 00480600
*                    <  0 -- I/O error occured                 HRC250DK 00480700
*                    == 0 -- successful                        HRC250DK 00480800
*                    >  0 -- failed, is probably legacy device HRC250DK 00480900
*                                                              HRC250DK 00481000
***************************************************************HRC250DK 00481100
         SPACE 1                                               HRC250DK 00481200
FINDLDEV DS    0H                                              HRC250DK 00481300
         ST    R14,SAVEWRK4            Save return address     HRC250DK 00481400
*                                                              HRC250DK 00482500
*        Try to set geometry based on model                    HRC250DK 00482600
*                                                              HRC250DK 00482700
         IC    R1,RDEVMDL              Get declared model #    HRC250DK 00482800
         USING TUBEINFO,R2             Access the buffer size  HRC250DK 00482900
         LA    R2,TUBETAB                lookup table          HRC250DK 00483000
         LA    R0,TUBECNT              Get entry count         HRC250DK 00483100
LDEVLP1  DS    0H                                              HRC250DK 00483200
         CLM   R1,1,TUBEMDL            Match on model number?  HRC250DK 00483300
         BE    LDEVGOT1                .. got it               HRC250DK 00483400
         LA    R2,TUBELEN(,R2)         Next entry              HRC250DK 00483500
         BCT   R0,GEOMLP               and search them all     HRC250DK 00483600
         LA    R15,8                   bad model number        HRC250DK 00483600
         B     LDEVRET                 and pass back to caller HRC250DK 00483600
*                                                              HRC250DK 00483600
LDEVGOT1 DS    0H                                              HRC250DK 00483600
         MVC   GRFXROWS,TUBEROWS       Set geometry from       HRC250DK 00485500
         MVC   GRFXCOLS,TUBECOLS         declared LDEV model   HRC250DK 00485600
         SPACE 1                                               HRC250DK 00477500
         DROP  R2                                              HRC250DK 00477600
         SPACE 1                                               HRC250DK 00477700
         SR    R15,R15                 Set good RC             HRC250DK 00483600
LDEVRET  DS    0H                                              HRC250DK 00483600
         L     R14,SAVEWRK4            Return to caller        HRC250DK 00483600
         BR    R14                                             HRC250DK 00483600
         EJECT ,                                               HRC250DK 00478900
***************************************************************HRC250DK 00479000
*                                                              HRC250DK 00479100
*        S E T A D D R S                                       HRC250DK 00479200
*                                                              HRC250DK 00479300
*        Now that display station geometry (rows, columns)     HRC250DK 00479400
*        is known, the various size-dependent screen addreses  HRC250DK 00479500
*        can be calculated and the rest of the GRFXBLOK        HRC250DK 00479600
*        (and parts of RDEVBLOK) can be completed.             HRC250DK 00479700
*                                                              HRC250DK 00479800
*        Input:                                                HRC250DK 00479900
*              R8  = RDEVBLOK                                  HRC250DK 00480000
*              R9  = GRFXBLOK                                  HRC250DK 00480100
*              R10 = IOBLOK (+ work area)                      HRC250DK 00480200
*              R14 = return address                            HRC250DK 00480300
*                                                              HRC250DK 00480400
*        Output:                                               HRC250DK 00480500
*              R15 = completion status:                        HRC250DK 00480600
*                    <  0 -- I/O error occured                 HRC250DK 00480700
*                    == 0 -- successful                        HRC250DK 00480800
*                    >  0 -- failed, is probably legacy device HRC250DK 00480900
*                                                              HRC250DK 00481000
***************************************************************HRC250DK 00481100
         SPACE 1                                               HRC250DK 00481200
SETADDRS DS    0H                                              HRC250DK 00481300
         ST    R14,SAVEWRK4            Save return address     HRC250DK 00481400
         SPACE 3                                               HRC250DK 00481500..............
*                                                              HRC250DK 00481600
*        First a sanity check of overall dimensions.           HRC250DK 00481700
*        Cannot exceed 255 rows or columns                     HRC250DK 00481800
*                                                              HRC250DK 00481900
         CLI   GRFXROWS,0              Rows > 255?             HRC250DK 00482000
         BNE   DFLTMOD2                ..yes, force to Mod2    HRC250DK 00482100
         CLI   GRFXCOLS,0              Columns > 255?          HRC250DK 00482200
         BNE   DFLTMOD2                ..yes, force to Mod2    HRC250DK 00482300
         SPACE 1                                               HRC250DK 00482400
*                                                              HRC250DK 00482500
*        Try to set model based on geometry                    HRC250DK 00482600
*                                                              HRC250DK 00482700
         ICM   R1,15,GRFXROWS          Get rows/cols           HRC250DK 00482800
         USING TUBEINFO,R2             Access the buffer size  HRC250DK 00482900
         LA    R2,TUBETAB                lookup table          HRC250DK 00483000
         LA    R0,TUBECNT              Get entry count         HRC250DK 00483100
GEOMLP   DS    0H                                              HRC250DK 00483200
         C     R1,TUBEGEOM             Match on rows/cols      HRC250DK 00483300
         BE    GEOMGOT                 .. got it               HRC250DK 00483400
         LA    R2,TUBELEN(,R2)         Next entry              HRC250DK 00483500
         BCT   R0,GEOMLP               and search them all     HRC250DK 00483600
         SPACE 1                                               HRC250DK 00483700
         MVI   RDEVMDL,2               Default to Mod2         HRC250DK 00483800
         MVI   GRFXERAS,CCWEWA         but use EWA CCWs        HRC250DK 00483900
         B     GOCALC                  and calculate           HRC250DK 00484000
         SPACE 1                                               HRC250DK 00484100
DFLTMOD2 DS    0H                      Set 3270-2 default      HRC250DK 00484200
         ICM   R1,15,GRFXRPQA          Allocated RPQ vpage?    HRC250DK 00364395
         BZ    NORPQPG                 ..no, no cleanup needed HRC250DK 00364405
         ICM   R2,15,SAVEWRK2          Page needs unlocking?   HRC250DK 00364515
         BZ    NOUNLK                  ..no, nothing needed    HRC250DK 00364625
         CALL  DMKPTRUL                ..yes, unlock the page  HRC250DK 00364735
NOUNLK   DS    0H                                              HRC250DK 00364845
         CALL  DMKPGTVR                release CP vpage        HRC250DK 00344945
         SR    R1,R1                   and clean RPQ stuff     HRC250DK 00485000
         ST    R1,GRFXRPQA             ... vpage ptr           HRC250DK 00485100
         STH   R1,GRFXRPQL             ... length              HRC250DK 00485200
NORPQPG  DS    0H                                              HRC250DK 00485300
         LA    R2,TUBE2                Get Model 2 values      HRC250DK 00485400
         MVC   GRFXROWS,TUBEROWS       Default row count       HRC250DK 00485500
         MVC   GRFXCOLS,TUBECOLS       Default column count    HRC250DK 00485600
         NI    RDEVGRIC,255-RDEVEXTC-RDEVEXTH-RDEVPSS-RDEVAD14 HRC250DK 00485785
         SPACE 1                                               HRC250DK 00485800
GEOMGOT  DS    0H                                              HRC250DK 00485900
         MVC   RDEVMDL,TUBEMDL         Set model for Diag24    HRC250DK 00486000
         MVC   GRFXERAS,TUBECCW        and the EW/EWA opcode   HRC250DK 00486100
         DROP  R2                                              HRC250DK 00486200
         SPACE 1                                               HRC250DK 00486300
*       The screen buffer addresses are saved in the           HRC250DK 00486400
*       GRFXBLOK so they do not have to calculated every       HRC250DK 00486500
*       time they are needed. They are saved in the            HRC250DK 00486600
*       format that the display will return in an inbound      HRC250DK 00486700
*       data stream. If ALL screen address are  addressable    HRC250DK 00486800
*       in 12 bits, 12 bit addresses are ALWAYS returned.      HRC250DK 00486900
*       If ANY screen address is over 12 bits, 14 bit          HRC250DK 00487000
*       addresses are ALWAYS returned.                         HRC250DK 00487100
         SPACE 1                                               HRC250DK 00487200
GOCALC   DS    0H                                              HRC250DK 00487300
         LH    R1,GRFXCOLS             Calculate the input     HRC250DK 00487400
         SLL   R1,1                    ... area length         HRC250DK 00487500
         SH    R1,=AL2(STATLEN)        ... in bytes and        HRC250DK 00487600
         STH   R1,GRFXINPL             ... save it             HRC250DK 00487700
         SPACE 1                                               HRC250DK 00487800
         LH    R2,GRFXROWS             Calculate the output    HRC250DK 00487900
         BCTR  R2,0                    ... area length         HRC250DK 00488000
         STC   R2,GRFXINL2             ... (last input ln)     HRC250DK 00488100
         BCTR  R2,0                    ... - 1 more            HRC250DK 00488200
         STC   R2,GRFXINL1             ... (1st input area ln  HRC250DK 00488300
         MH    R2,GRFXCOLS             ... in bytes            HRC250DK 00488400
         STH   R2,GRFXOUTL             ... and save it         HRC250DK 00488500
         SPACE 1                                               HRC250DK 00488600
         AR    R1,R2                   Output area length      HRC250DK 00488700
*                                      + Input area length     HRC250DK 00488800
         STH   R1,GRFX@STA             = Status attr           HRC250DK 00488900
         LA    R1,L'STATSTAT(,R1)      + Status length         HRC250DK 00489000
         STH   R1,GRFX@SYS             = Sysid attr            HRC250DK 00489100
         LA    R1,L'STATSYID(,R1)      + Sysid length          HRC250DK 00489200
         STH   R1,GRFX@LST             = Output area attr      HRC250DK 00489300
*                                      (also last screen loc)  HRC250DK 00489400
         MVI   GRFXATOA,FLDPROT        last attr = prot-low    HRC250DK 00489500
         SPACE 1                                               HRC250DK 00489600
         STH   R2,GRFXORGI             1st byte of input area  HRC250DK 00489700
         BCTR  R2,0                    Last byte of output     HRC250DK 00489800
         STH   R2,GRFX@INP             ... is input area attr  HRC250DK 00489900
         SPACE 1                                               HRC250DK 00490000
         IC    R1,GRFXINL1             Last out area line#     HRC250DK 00490100
         BCTR  R1,0                    ...                     HRC250DK 00490200
         STC   R1,GRFXOALZ             ...                     HRC250DK 00490300
         SPACE 1                                               HRC250DK 00490400
         LH    R1,GRFXCOLS             Set RDEV line length    HRC250DK 00490500
         STC   R1,RDEVLLEN             to screen width         HRC250DK 00490600
         SPACE 1                                               HRC250DK 00489400
         TM    RDEVGRIC,RDEVAD14       14-bit addressing ok?   HRC250DK 00489800
         BO    SETRET0                 yes, use addr as-is     HRC250DK 00489900
         MH    R1,GRFXROWS             Rows * cols = size      HRC250DK 00489500
         CH    R1,=XL2'0FFF'           Will it fit in 12 bits? HRC250DK 00489600
         BNH   SET12BIT                yes.. encode as 12-bit  HRC250DK 00489700
         OI    RDEVGRIC,RDEVAD14       no.. set 14-bit flag    HRC250DK 00489700
         B     SETRET0                 and return              HRC250DK 00489700
         SPACE 1                                               HRC250DK 00490000
SET12BIT DS    0H                                              HRC250DK 00489700
         LA    R1,GRFX@INP             Convert Input area attr HRC250DK 00490100
         BAL   R5,CVT1412              ...                     HRC250DK 00490200
         LA    R1,GRFX@STA             Convert Status area attrHRC250DK 00490300
         BAL   R5,CVT1412              ...                     HRC250DK 00490400
         LA    R1,GRFX@SYS             Convert Sysid area attr HRC250DK 00490500
         BAL   R5,CVT1412              ...                     HRC250DK 00490600
         LA    R1,GRFX@LST             Convert Output area attrHRC250DK 00490700
         BAL   R5,CVT1412              ...                     HRC250DK 00490800
         SPACE 3                                               HRC250DK 00490900
SETRET0  DS    0H                                              HRC250DK 00491000
         SR    R15,R15                 RC = 0                  HRC250DK 00491100
SETFIN   DS    0H                                              HRC250DK 00491200
         L     R14,SAVEWRK4            Return to caller        HRC250DK 00491300
         BR    R14                     ...                     HRC250DK 00491400
         SPACE 3                                               HRC250DK 00491500
CVT1412  DS    0H                                              HRC250DK 00491600
         LH    R15,0(,R1)              Split 12-bit address    HRC250DK 00491700
         SR    R14,R14                 ... into two 6-bit      HRC250DK 00491800
         SLDL  R14,26                  ... pieces.             HRC250DK 00491900
         SRL   R15,26                  ...                     HRC250DK 00492000
         STC   R14,0(,R1)              ... and store them in   HRC250DK 00492100
         STC   R15,1(,R1)              ... the GRFXBLOK        HRC250DK 00492200
         L     R14,=A(DMKTBL68)        ... translate to 3270   HRC250DK 00492300
         TR    0(2,R1),0(R14)          ... 6-bit form          HRC250DK 00492400
         BR    R5                                              HRC250DK 00492500
         EJECT ,                                               HRC250DK 00492600
./ R 00523000 $ 00523010
         ST    R5,IOWIORET             Save caller return addr HRC250DK 00523010
./ R 00540000 00541000 $ 00540010 500
         L     R5,IOWIORET             Load caller return addr HRC250DK 00540010
         L     R8,IOWRDEV              Restore RDEVBLOK ptr    HRC250DK 00541510
         L     R9,RDEVGRFX             Restore GRFXBLOK ptr    HRC250dk 00542010
./ R 00548000 00572000 $ 00548100 100
         EJECT ,                                               HRC250DK 00548100
***************************************************************HRC250DK 00548200
*                                                              HRC250DK 00548300
*        Display terminal initialization channel programs      HRC250DK 00548400
*                                                              HRC250DK 00548500
***************************************************************HRC250DK 00548600
         SPACE 1                                               HRC250DK 00548700
*------------------------------------------------------------- HRC250DK 00548800
*        Sense-Id Channel Program                              HRC250DK 00548900
*------------------------------------------------------------- HRC250DK 00549000
         SPACE 1                                               HRC250DK 00549100
SIDCCW   CCW   X'E4',*-*,SILI,SIDDATAL                         HRC250DK 00549200
SIDCCWL  EQU   *-SIDCCW                                        HRC250DK 00549300
         SPACE 1                                               HRC250DK 00549400
*------------------------------------------------------------- HRC250DK 00549500
*        WSF-RPQ Channel Program                               HRC250DK 00549600
*------------------------------------------------------------- HRC250DK 00549700
         SPACE 1                                               HRC250DK 00549800
WSFCCW   CCW   CCWWSF,*-*,SILI,WSFDATAL                        HRC250DK 00549900
WSFCCWL  EQU   *-WSFCCW                                        HRC250DK 00550000
         SPACE 1                                               HRC250DK 00550100
*------------------------------------------------------------- HRC250DK 00550200
*        Read-Modified Channel PRogram (to finish WSF-RPQ)     HRC250DK 00550300
*------------------------------------------------------------- HRC250DK 00550400
         SPACE 1                                               HRC250DK 00550500
RMDCCW   CCW   CCWSEL,0,CC+SILI,1                              HRC250DK 00550600
         CCW   CCWRM,*-*,SILI,4096                             HRC250DK 00550700
RMDCCWL  EQU   *-RMDCCW                                        HRC250DK 00550800
         SPACE 1                                               HRC250DK 00550900
*------------------------------------------------------------- HRC250DK 00551000
*        Erase-Write & EW Alt Channel Programs                 HRC250DK 00551100
*        (to reset before the Read-Buffer)                     HRC250DK 00551200
*------------------------------------------------------------- HRC250DK 00551300
         SPACE 1                                               HRC250DK 00551400
EWACCW   CCW   CCWSEL,0,CC+SILI,1                              HRC250DK 00551500
         CCW   CCWEWA,*-*,CC+SILI,ERSDATAL                     HRC250DK 00551600
         CCW   CCWNOP,0,SILI,1                                 HRC250DK 00551700
EWACCWL  EQU   *-EWACCW                                        HRC250DK 00551800
         SPACE 1                                               HRC250DK 00551900
EWCCW    CCW   CCWSEL,0,CC+SILI,1                              HRC250DK 00552000
         CCW   CCWEW,*-*,CC+SILI,ERSDATAL                      HRC250DK 00552100
         CCW   CCWNOP,0,SILI,1                                 HRC250DK 00552200
EWCCWL   EQU   *-EWCCW                                         HRC250DK 00552300
         SPACE 1                                               HRC250DK 00552400
*------------------------------------------------------------- HRC250DK 00552500
*        Read Buffer Channel Program                           HRC250DK 00552600
*        (to discover screen geometry)                         HRC250DK 00558700
*------------------------------------------------------------- HRC250DK 00552800
         SPACE 1                                               HRC250DK 00552900
RBCCW    CCW   CCWSEL,0,CC+SILI,1                              HRC250DK 00553000
         CCW   CCWRB,0,SKIP+SILI,MAXBUFLN                      HRC250DK 00553100
RBCCWL   EQU   *-RBCCW                                         HRC250DK 00553200
MAXBUFLN EQU   X'4003'                 14-bit len + AID/Cursor HRC250DK 00553300
         SPACE 3                                               HRC250DK 00553400
***************************************************************HRC250DK 00553500
*                                                              HRC250DK 00553600
*        Data streams                                          HRC250DK 00553700
*                                                              HRC250DK 00553800
***************************************************************HRC250DK 00553900
         SPACE 1                                               HRC250DK 00554000
*--------------------------------------------------------------HRC250DK 00554100
*        Sense-ID (X'E4') result data                          HRC250DK 00554200
*--------------------------------------------------------------HRC250DK 00554300
         SPACE 1                                               HRC250DK 00554400
SIDDATA  DSECT ,                                               HRC250DK 00554500
SIDUNK1  DS    XL1                     Extra something (x'ff') HRC250DK 00554600
SIDCUID  DS    0XL3                    Control Unit type/model HRC250DK 00554700
SIDCUTY  DS    XL2                     Control Unit type numberHRC250DK 00554800
SIDCUMD  DS    XL1                     Control Unit mdl number HRC250DK 00554900
SIDMINLN EQU   *-SIDDATA               (minimum length)        HRC250DK 00555000
SIDDVID  DS    0XL3                    Device type/model       HRC250DK 00555100
SIDDVTY  DS    XL2                     Device type number      HRC250DK 00555200
SIDDVMD  DS    XL1                     Device model number     HRC250DK 00555300
SIDFULLN EQU   *-SIDDATA               (length w/device id)    HRC250DK 00555400
         DS    XL1                     (pad to dword)          HRC250DK 00555500
SIDDATAL EQU   *-SIDDATA               Length in bytes         HRC250DK 00555600
         SPACE 1                                               HRC250DK 00555700
HDKD8C   CSECT ,                                               HRC250DK 00555800
         SPACE 1                                               HRC250DK 00555900
*--------------------------------------------------------------HRC250DK 00556000
*        WSF-RPQ Data Stream                                   HRC250DK 00556100
*--------------------------------------------------------------HRC250DK 00556200
         SPACE 1                                               HRC250DK 00556300
WSFDATA  EQU   *                       Write Structure Fields  HRC250DK 00556400
         SPACE 1                                               HRC250DK 00556500
WSFKBRS  EQU   *                         SF to restore the kbd HRC250DK 00556600
         DC    AL2(WSFKBRSL)               Field length        HRC250DK 00556700
         DC    AL1(SFO3DS)                 SFID: 3270DS Outbnd HRC250DK 00556800
         DC    X'00'                       PID                 HRC250DK 00556900
         DC    AL1(CMDW)                   Command: write      HRC250DK 00557000
         DC    AL1(WCCUNLK)                3270 WCC: restore kbHRC250DK 00557100
WSFKBRSL EQU   *-WSFKBRS                                       HRC250DK 00557200
         SPACE 1                                               HRC250DK 00557300
WSFRPQA  EQU   *                         Structure Fld to RPQ  HRC250DK 00557400
         DC    AL2(WSFRPQL)                Field length        HRC250DK 00557500
         DC    AL1(SFORP)                  SFID: Read PartitionHRC250DK 00557600
         DC    X'FF'                       PID: (FF=query oper)HRC250DK 00557700
         DC    AL1(SFRPQRY)                Read Type: Query    HRC250DK 00557800
WSFRPQL  EQU   *-WSFRPQA                                       HRC250DK 00557900
         SPACE 1                                               HRC250DK 00558000
WSFDATAL EQU   *-WSFDATA               Overall WSF I/O length  HRC250DK 00558100
         SPACE 1                                               HRC250DK 00558200
*--------------------------------------------------------------HRC250DK 00558300
*        Simple WCC for EW/EWA CCWs                            HRC250DK 00558400
*--------------------------------------------------------------HRC250DK 00558500
         SPACE 1                                               HRC250DK 00558600
ERSDATA  EQU   *                                               HRC250DK 00558700
         DC    AL1(WCCUNLK)                                    HRC250DK 00558800
ERSDATAL EQU   *-ERSDATA                                       HRC250DK 00558900
         SPACE 3                                               HRC250DK 00559000
***************************************************************HRC250DK 00559100
*                                                              HRC250DK 00559200
*        Screen geometry based on size of buffer.              HRC250DK 00559300
*        (Determined by issuing a Read-Buffer CCW              HRC250DK 00559400
*         after first erasing the screen)                      HRC250DK 00559500
*                                                              HRC250DK 00559600
***************************************************************HRC250DK 00559700
         SPACE 1                                               HRC250DK 00559800
TUBETAB  DS    0H                                              HRC250DK 00559900
TUBE2A   DC    AL2(20*80),X'2A',AL1(CCWEW)                     HRC250DK 00560000
MD2AROWS DC    AL2(20)                                         HRC250DK 00560100
MD2ACOLS DC    AL2(80)                                         HRC250DK 00560200
TUBELEN  EQU   *-TUBETAB                                       HRC250DK 00560300
TUBE2    DC    AL2(24*80),X'02',AL1(CCWEW),AL2(24,80)          HRC250DK 00560400
TUBE3    DC    AL2(32*80),X'03',AL1(CCWEWA),AL2(32,80)         HRC250DK 00560500
TUBE4    DC    AL2(43*80),X'04',AL1(CCWEWA),AL2(43,80)         HRC250DK 00560600
TUBE5    DC    AL2(27*132),X'05',AL1(CCWEWA),AL2(27,132)       HRC250DK 00560700
TUBECNT  EQU   (*-TUBETAB)/TUBELEN                             HRC250DK 00560800
         SPACE 1                                               HRC250DK 00560900
TUBEINFO DSECT ,                  Map the table entry          HRC250DK 00561000
TUBEBUFF DS    H                    Buffer length              HRC250DK 00561100
TUBEMDL  DS    XL1                  RDEVMDL value              HRC250DK 00561200
TUBECCW  DS    XL1                  EW/EWA CCW to use          HRC250DK 00561300
TUBEGEOM DS    0XL4                 Geometry                   HRC250DK 00561400
TUBEROWS DS    H                    .. rows                    HRC250DK 00561500
TUBECOLS DS    H                    .. cols                    HRC250DK 00561600
         SPACE 3                                               HRC250DK 00562500
HDKD8C   CSECT ,                                               HRC250DK 00562600
         SPACE 1                                               HRC250DK 00562700
GRFX3066 DS    0D                                              HRC250DK 00562800
ROWS3066 DC    H'35'      Size of physical screen (rows)       HRC250DK 00562900
COLS3066 DC    H'80'      Size of physical screen (cols)       HRC250DK 00563000
INPL3066 DC    AL2(140)   Input area length                    HRC250DK 00563100
OUTL3066 DC    AL2(33*80) Output area length                   HRC250DK 00563200
@INP3066 DC    AL1(33,0)  Input area attr buffer addr          HRC250DK 00563300
@STA3066 DC    AL1(34,60) Status area attr buffer addr         HRC250DK 00563400
@SYS3066 DC    AL1(34,70) System ID attr buffer addr           HRC250DK 00563500
@LST3066 DC    AL1(34,79) Bottom-right buffer address          HRC250DK 00563600
RPQA3066 DC    A(0)       WSF RPQ data CP virtual address      HRC250DK 00563700
RPQL3066 DC    H'0'        ''  ''  ''  length                  HRC250DK 00563800
ERAS3066 DC    XL1'00'    EW/EWA opcode                        HRC250DK 00563900
E4FL3066 DC    XL1'00'    SenseId flags                        HRC250DK 00564000
CUID3066 DC    XL3'00'    SnsId Control Unit id:               HRC250DK 00564100
DVID3066 DC    XL3'00'    SnsId Device id:                     HRC250DK 00564200
INL13066 DC    AL1(33)    1st input area line                  HRC250DK 00564300
INL23066 DC    AL1(34)    last input area line                 HRC250DK 00564400
OALZ3066 DC    AL1(32)    last output area line                HRC250DK 00564500
ATOA3066 DC    AL1(0)     lower-right attr (n/a for 3066)      HRC250DK 00564600
ORGI3066 DC    AL2(33*80) input area origin                    HRC250DK 00564800
RSV13066 DC    XL4'00'    (available)                          HRC250DK 00564900
BUFF3066 DC    64XL1'00'  Buffer for orders & data             HRC250DK 00565000
         EJECT ,                                               HRC250DK 00565100
./ I 00579000 $ 00579100 100
         COPY  GRFXBLOK           327x device extensions       HRC250DK 00579100
         COPY  GRCWORK            For status area layout       HRC250DK 00579200
         COPY  HDK3270            327x equates                 HRC250DK 00579300
         COPY  HDKSFLDS           327x structured fields       HRC250DK 00579400
./ R 00587000 00592000 $ 00587005 500 
IOWCCW1  DS    D                       CCW #1                  HRC250DK 00587005
IOWCCW2  DS    D                       CCW #2                  HRC250DK 00587505
IOWCCW3  DS    D                       CCW #3                  HRC250DK 00588005
IOWCCW4  DS    D                       CCW #4                  HRC250DK 00588505
IOWRDEV  DS    A                       -> RDEVBLOK             HRC250DK 00589005
IOWIORET DS    A                       CPIO return addr        HRC250DK 00589505
IOWDATA  DS    XL64                    Up to 64 bytes of data  HRC250DK 00590005
:READ DMKBOX AUXLCL   A
HRC250DK V01 Dynamic 327x screen size support
:READ DMKBOX HRC250DK A
./ * HRC250DK - Dynamic 327x screen size support
./ *
./ * Revert the 327x logo back to a simple matrix since the  
./ * actual buffer orders sent to the device will be generated
./ * dynamically at runtime based on screen geometry.    
./ *
./ * Adds a simple logo descriptor with the size of each logo
./ * row and the number of rows in the logo.
./ * 
./ * Adds a 2nd logo for VM/380. The dimensions must match
./ * the default VM/370 logo
./ *
./ * HISTORY:
./ * 19-Jun-2025 WDENTON  Initial version for VM370CE V1 R1.2
./ *
./ R 00004500 $ 00004600 100
         ENTRY DMKBOXDS       Box descriptor                   HRC250DK 00004600
         ENTRY DMKBOX80       VM/380 logo                      HRC250DK 00004700
./ R 00005020 00005880 $ 00005100 100
DMKBOXDS DS    0H             Logo geeometry description       HRC250DK 00005100
         DC    AL2(LINESZ)    ... length of each line          HRC250DK 00005200
         DC    AL2(LINECT)    ... number of lines              HRC250DK 00005200
./ I 00006020 $ 00006025
LINESZ   EQU   *-DMKBOXBX     Length of each logo line         HRC250DK 00006025
./ I 00006172 $ 00007100 100
LINECT   EQU   (*-DMKBOXBX)/LINESZ Number of lines in logo     HRC250DK 00007100
         SPACE 3                                               HRC250DK 00007200
DMKBOX80 EQU   *                                               HRC250DK 00007300
    DC    CL46'        VV        VV    MM        MM         '  HRC250DK 00007400
    DC    CL46'        VV        VV    MMM      MMM         '  HRC250DK 00007500
    DC    CL46' 3333333333      8888888888M    MM00000000   '  HRC250DK 00007600
    DC    CL46'333333333333    888888888888M  MM0000000000  '  HRC250DK 00007700
    DC    CL46'33      VV33    88VV    MM88MMMM00MM      00 '  HRC250DK 00007800
    DC    CL46'         V33    88V     MM88 MM 00MM      00 '  HRC250DK 00007900
    DC    CL46'          33    V88     M88     00MM      00 '  HRC250DK 00008000
    DC    CL46'       3333VV  VV 88888888      00MM      00 '  HRC250DK 00008100
    DC    CL46'       3333 VVVV  88888888      00MM      00 '  HRC250DK 00008200
    DC    CL46'          33 VV  88     M88     00MM      00 '  HRC250DK 00008300
    DC    CL46'          33    88        88    00        00 '  HRC250DK 00008400
    DC    CL46'33        33    88        88    00        00 '  HRC250DK 00008500
    DC    CL46'333333333333    888888888888     0000000000  '  HRC250DK 00008600
    DC    CL46' 3333333333      8888888888       00000000   '  HRC250DK 00008700
    DC    CL46'                                             '  HRC250DK 00008800
    DC    CL46'   VM/380 Community Edition V1 Release 1.2   '  HRC250DK 00008900
         SPACE 3
:READ DMKCFP AUXLCL   A
HRC250DK V01 Dynamic 327x screen size support
:READ DMKCFP HRC250DK A
./ * HRC250DK - Dynamic 327x screen size support
./ *
./ * Support screen writes larger than 2040. Larger screen  
./ * sizes means that there could be a need for a virtual   
./ * machine to write more than 2040 bytes to the console
./ * in a single operation
./ *
./ * HISTORY:
./ *  6-Jun-2025 WDENTON  Initial version for VM370CE V1 R1.2
./ *
./ R 00943000 $ 00943100
         LH    R0,VCONWBSZ    Get size in dbl wds              HRC250DK 00943100
:READ DMKQCN AUXLCL   A
HRC250DK V01 Dynamic 327x screen size support
:READ DMKQCN HRC250DK A
./ * HRC250DK - Dynamic 327x screen size support
./ *
./ * Remove the 327x data stream processing for the HILIGHT   
./ * option. Pass the parameter flag along to DMKGRF in the   
./ * new CONTASK field CONPARM2. This is to allow all data
./ * stream processing of hilighted output to be managed
./ * by the consoloddated channel program and data stream    
./ * processing (HDKGRC) added with this update.
./ *
./ * HISTORY:
./ * 22-Jun-2025 WDENTON  Initial version for VM370CE V1 R1.2
./ *
./ R 00034550 $ 00034555                         
         EXTRN DMKGRFM2       Default GRFXBLOK for Mod2        HRC250DK 00034555
./ D 00429340
./ R 00432090 00434070 $ 00432095 90
         C     R5,F9          Must have at least 9 extra       HRC250DK 00432095
         BNL   *+8            Already > 9                      HRC250DK 00433085
         LA    R5,9           < 9, make it 9 (the minimum)     HRC250DK 00434075
./ R 00445300 00445400 $ 00445350
         OI    CONPARM2,HILIGHT/256  Pass HILIGHT option along HRC250DK 00445350
./ D 00457570 00457920
./ R 00530250 $ 00530350 25
CHKAPLEN DS    0H                                              HRC250DK 00530350
         L     R1,=A(DMKGRFM2) All remotes are Mod2s           HRC250DK 00530375
./ R 00531250 00531750 $ 00531255 50 
         L     R1,RDEVGRFX    Access GRFXBLOK                  HRC250DK 00531255
CHKSIZE  DS    0H                                              HRC250DK 00531305
         USING GRFXBLOK,R1    ...                              HRC250DK 00531355
         LH    R10,GRFXOUTL   Get output area length           HRC250DK 00531405
         DROP  R1                                              HRC250DK 00531455
./ R 00615190 00616370 $ 00615195 590
         C     R7,F9          Must have at least 9 extra       HRC250DK 00615195
         BNL   *+8            Already > 9                      HRC250DK 00615785
         LA    R7,9           < 9, make it 9 (the minimum)     HRC250DK 00616375
./ I 00627100 $ 00627200 100
         IC    R1,CONPARM2-CONTASK(,R8) Copy 2nd parm byte     HRC250DK 00627200
         STC   R1,CONPARM2              ... for DMKGRF         HRC250DK 00627300
./ D 01167150 01167300
./ I 01172000 $ 01172100 100
         COPY  GRFXBLOK            GRAF RDEV extensions        HRC250DK 01172100
:READ DMKVCN AUXLCL   A
HRC250DK V01 Dynamic 327x screen size support
:READ DMKVCN HRC250DK A
./ * HRC250DK - Dynamic 327x screen size support
./ *
./ * Removes references to tables in DMKGRT that are indexed  
./ * by 3270 model number. Uses calculated values in the       
./ * GRFXBLOK instead.
./ *
./ * HISTORY:
./ * 23-Jun-2025 WDENTON  Initial version for VM370CE V1 R1.2
./ *  2-Jul-2025 WDENTON  Virtual console writes larger than 2040
./ *
./ R 00138100 $ 00138150
         EXTRN DMKGRFM2       Default GRFXBLOK for Mod2        HRC250DK 00138150
./ R 00409000 $ 00409100
         LH    R0,VCONWBSZ    Get buffer size                  HRC250DK 00409100
./ R 00495000 00497000 $ 00495100 100
         LA    R15,132        Default max length               HRC250DK 00495100
         ICM   R14,15,VMTERM  Get console RDEVBLOK             HRC250DK 00495200
         BZ    CKCMD1         not there.. use defailt          HRC250DK 00495300
         USING RDEVBLOK,R14   access RDEVBLOK                  HRC250DK 00495400
         CLI   RDEVTYPC,CLASGRAF Graphical console?            HRC250DK 00495500
         BNE   CKCMD1         no, use default                  HRC250DK 00495600
         IC    R15,RDEVLLEN   yes, use actual line length      HRC250DK 00495700
         DROP  R14                                             HRC250DK 00495800
         SLL   R15,1          ... * 2                          HRC250DK 00495900
         SH    R15,=H'20'     ... - status length              HRC250DK 00496000
         C     R15,F255       > actual max                     HRC250DK 00496100
         BNH   CKCMD1         no, good to go                   HRC250DK 00496200
         LA    R15,255        yes, must truncate               HRC250DK 00496300
CKCMD1   DS    0H                                              HRC250DK 00496400
         CR    R3,R15         is bigger than allowed?          HRC250DK 00496500
         BNH   *+6            no, continue                     HRC250DK 00496600
         LR    R3,R15         yes, set to max                  HRC250DK 00496700
./ R 00640000 $ 00640100
         LH    R0,VCONWBSZ    Get old buffer size              HRC250DK 00640100
./ R 00651000 $ 00651100
         STH   R0,VCONWBSZ    Save buffer size                 HRC250DK 00651100
./ R 00819200 00819300 $ 00819230 30
         IC    R0,RDEVLLEN    Get line length                  HRC250DK 00819230
         SLR   R15,R15        Clear a 2nd work reg             HRC250DK 00819260
         IC    R15,VCONDWC    Get line coordinate number       HRC250DK 00819290
         N     R15,=XL4'0000003F' and clear out erase bit      HRC250DK 00819320
./ R 00820000 $ 00820100
         L     R1,=A(DMKGRFM2) All remotes are Mod 2s          HRC250DK 00820100
./ R 00822300 $ 00822310
         L     R1,RDEVGRFX    Access GRFXBLOK                  HRC250DK 00822310
./ R 00822600 00823100 $ 00823100 100
         USING GRFXBLOK,R1                                     HRC250DK 00823100
         CLM   R15,1,GRFXINL1 Is this write to input area      HRC250DK 00823200
./ R 00825100 00825500 $ 00825150 100
         MR    R14,R0         End addr = start row * row size  HRC250DK 00825150
         ALR   R15,R4         .. + write length                HRC250DK 00825250
         CH    R15,GRFXOUTL   Can't be larger than out area    HRC250DK 00823350
         DROP  R1                                              HRC250DK 00823450
./ R 00830000 $ 00830100 100
TSTINPT  DS    0H                                              HRC250DK 00830100
         SLL   R0,1           Two rows                         HRC250DK 00830200
         SH    R0,=H'20'      - status area                    HRC250DK 00830300
         CR    R4,R0          Can't write more than this       HRC250DK 00830400
./ I 01092000 $ 01092100 100
         COPY  GRFXBLOK            GRAF RDEV extensions        HRC250DK 01092100
:READ DMKVDR AUXLCL   A
HRC250DK V01 Dynamic 327x screen size support
:READ DMKVDR HRC250DK A
./ * HRC250DK - Dynamic 327x screen size support
./ *
./ * Support screen writes larger than 2040. Larger screen  
./ * sizes means that there could be a need for a virtual   
./ * machine to write more than 2040 bytes to the console
./ * in a single operation
./ *
./ * HISTORY:
./ * 10-Jun-2025 WDENTON  Initial version for VM370CE V1 R1.2
./ *
./ R 00329000 $ 00329100
         LH    R0,VCONWBSZ    Get buffer size                  HRC248DK 00329100
:READ DMKGRF AUXLCL   A
HRC250DK V01 Dynamic 327x screen size support
:READ DMKGRF HRC250DK A
./ * HRC250DK - Dynamic 327x screen size support
./ *
./ * Allow CP to support 327x display devices with any screen
./ * dimensions. This is mainly done by replacing the static
./ * channel programs and buffer order streams with a new
./ * module (HDKGRC) that will dynamically build the channel
./ * programs and buffer order streams based on the device's
./ * geometry and features determined when the device was 
./ * enabled.
./ * 
./ * Most of the static tables of sizes and buffer addresses
./ * that were contained in DMKGRT have been replaced with 
./ * values determined when the device is enabled or calculated
./ * on the fly when needed.
./ * 
./ * This update also reduces the size of DMKGRF so the 
./ * third base register can be eliminated.
./ *
./ * HISTORY:
./ * 18-Nov-2024 WDENTON  Initial version for VM370CE V1 R1.2
./ * 26-Jul-2025 WDENTON  Move AID table from DMKGRT
./ *
./ I 00029500 $ 00029600
*        DMKGRFM2 - Static GRFXBLOK for vanilla 3270 Mdl 2     HRC250DK 00029600
./ D 00061500
./ D 00067100 00067800
./ D 00074000 00075000
./ R 00082100 $ 00082150
*        R9  - GRFXBLOK addressing                             HRC250DK 00082150
./ I 00198000 $ 00198100
         USING GRFXBLOK,R9    RDEVBLOK extensions              HRC250DK 00198100
./ D 00208250
./ R 00211600 00211850 $ 00211603 100
         EXTRN HDKGRCCW       Generate channel programs        HRC250DK 00211603
         EXTRN HDKGRCRL       Release dynamic CCW resourcews   HRC250DK 00211703
         EXTRN DMKPGTVR       Release CP virtual storage       HRC250DK 00211803
./ I 00212490 $ 00212500
         ENTRY DMKGRFM2                                        HRC250DK 00212500                                    
./ D 00215100
./ R 00217100 $ 00217150
         USING DMKGRF,R12,R13 Establish addressability         HRC250DK 00217150                           
./ I 00227000 $ 00227100 100
         L     R9,RDEVGRFX    Access GRFXBLOK                  HRC250DK 00227200
./ D 00258000
./ R 00303880 $ 00303882
         B     BLDFMT         Go build the logo screen         HRC250DK 00303882   
./ R 00368000 $ 00368005
         B     BLDNAC        Go write NOT ACCEPTED status      HRC250DK 00368005
./ D 00377555
./ I 00383000 $ 00383100 50
         ICM   R9,15,RDEVGRFX     GRFXBLOK exists?             HRC250DK 00383100
         BZ    NOGRFX             no, nothing to do            HRC250DK 00383150
         ICM   R1,15,GRFXRPQA     Allocated RPQ vpage?         HRC250DK 00383200
         BZ    NORPQPG            no, no cleanup needed        HRC250DK 00383250
         CALL  DMKPGTVR           release CP vpage             HRC250DK 00383300
NORPQPG  DS    0H                                              HRC250DK 00383350
         LA    R0,GRFXLEND        Release the GRFXBLOK         HRC250DK 00383400
         LR    R1,R9              ...                          HRC250DK 00383450
         CALL  DMKFRET            ...                          HRC250DK 00383500
         XR    R9,R9              Clear addressing             HRC250DK 00383550
         ST    R9,RDEVGRFX        and clear the RDEVBLOK       HRC250DK 00383600
NOGRFX   DS    0H                                              HRC250DK 00383650         
./ D 00392100
./ R 00394100 $ 00394150
         USING DMKGRF,R12,R13 Establish addressability         HRC250DK 00394150                           
./ D 00405100
./ R 00407100 $ 00407150
         USING DMKGRF,R12,R13 Establish addressability         HRC250DK 00407150                           
./ I 00415000 $ 00415100
         L     R9,RDEVGRFX    Access the GRFXBLOK              HRC250DK 00415100
./ D 00418180
./ R 00418210 $ 00418215
         USING DMKGRF,R12,R13 Establish addressability         HRC250DK 00418215                           
./ I 00418296 $ 00418298
         L     R9,RDEVGRFX    Access the GRFXBLOK              HRC250DK 00418298
./ R 00418600 00418650 $ 00418630
         B     BLDWNG         Set WARNING status               HRC250DK 00418630
./ D 00418750 
./ R 00444000 00446000 $ 00444100
         B     BLDRMI         Read input area                  HRC250DK 00444100
./ R 00494000 00496000 $ 00494100
         B     BLDCLR         Clear the screen                 HRC250DK 00494100
./ R 00536200 00536300 $ 00536203 50
         LA    R1,AIDTBPF6    Handle PA3 key as PF Key 6       HRC250DK 00536203
PFKEY    DS    0H                                              HRC250DK 00536253
         LA    R0,AIDPFTAB    Convert index number to          HRC250DK 00536303
         SR    R1,R0            to the PF key number           HRC250DK 00536353
./ R 00587921 $ 00587925
         B     BLDIDS         Write result to input area       HRC241DK 00587925
./ R 00609000 $ 00609100
         B     BLDIDS         Display in input area            HRC250DK 00609100
./ R 00619000 $ 00619100
         B     BLDIDS         Write in input area              HRC250DK 00619100
./ R 00624000 00633000 $ 00624105 100
PFTAB    DS    0H             Process PF TAB key               HRC250DK 00624105
         LH    R0,4(,R2)      Length of TAB sets               HRC250DK 00624205
         S     R0,F4          ...                              HRC250DK 00624305
         LA    R1,4(,R4)      Point to the list of TAB sets    HRC250DK 00624405
         B     BLDTAB         Go build & execute CCWs          HRC250DK 00624505
./ R 00739100 00739300 $ 00739110 10
*        Calculate length of the buffer needed for the         HRC250DK 00739110
*        read due to limitations on APL and TEXT. These        HRC250DK 00739120
*        limitations are described in the CP Command           HRC250DK 00739130
*        Reference manual under Diag. 58 as 2000 maximum.      HRC250DK 00739140
*        Since APL uses double byte chars, this really         HRC250DK 00739150
*        is 4000.  We will also add a few bytes for            HRC250DK 00739160
*        header info                                           HRC250DK 00739170
         LH    R2,GRFXROWS    Get row count                    HRC250DK 00739180
         SLL   R2,1           * 2 for TEXT/APL                 HRC250DK 00739190
         MH    R2,GRFXCOLS    * column count                   HRC250DK 00739200
         CH    R2,=H'4000'    > max supported?                 HRC250DK 00739210
         BNH   *+8            no, continue                     HRC250DK 00739220
         LA    R2,4000        yes, set to max                  HRC250DK 00739230
         LA    R2,3(,R2)      add in AID/cursor size           HRC250DK 00739240
         LA    R0,28+7(,R2)   header ovhd + rounding           HRC250DK 00739250
         SRL   R0,3           dword count                      HRC250DK 00739260
./  I 00743000 $ 00743100
         STH   R2,14(,R1)     Set read length                  HRC250DK 00743100
./ R 00753000 $ 00753100
         LH    R7,14(,R4)     Get read data length             HRC250DK 00753100
./ R 00855120 00855200 $ 00855125 20
         LH    R0,AIDTABCT    Load table entry count           HRC250DK 00855125
         LA    R1,AIDTAB      Address of AID decode table      HRC250DK 00855145
./ R 00874100 00874200 $ 00874150
         CLC   BUFCSR,GRFX@INP Cursor on input area attr?      HRC250DK 00874150
./ R 00944000 00946000 $ 00944100 100
GRFCRD   DS    0H                                              HRC250DK 00944100
         B     BLDCRD         Clear input area                 HRC250DK 00944200
./ R 00959000 00961000 $ 00959100
         B     BLDHLD         Set status to HOLDING            HRC250DK 00959100
./ R 00967000 00969000 $ 00967100
         B     BLDMOR         Set status to MORE...            HRC250DK 00967100
./ R 01083000 01085000 $ 01083100
         B     BLDNAC         Set status to NOT ACCEPTED       HRC250DK 01083100
./ D 01169100 01169300
./ R 01202130 01202140 $ 01202135
*        Build new GRFXBLOK for all graphic devices            HRC250DK 01202135
./ R 01202160 $ 01202165
         L     R9,RDEVGRFX    Address new GRFXBLOK             HRC250DK 01202165
./ R 01221000 01223000 $ 01221100
         B     BLDFMT         Format screen, display logo      HRC250DK 01083100
./ R 01307000 01309000 $ 01307100 100
GRFRUN   DS    0H                                              HRC250DK 01307100
         B     BLDRUN         Set status = RUNNING             HRC250DK 01307200
./ R 01451100 01453200 $ 01451105 100
         SR    R3,R3          Get Diag58 target row            HRC250DK 01451105
         IC    R3,CONDWC      ...                              HRC250DK 01451205
         CLM   R3,1,GRFXINL1  Is it the 1st input area line?   HRC250DK 01451305
         BNL   DIAGSIO        yes, take special path           HRC250DK 01451405
         CLM   R3,1,GRFXINL2  or is it the last input line?    HRC250DK 01451505
./ D 01482400
./ R 01486100 01489300 $ 01486500
         CH    R4,GRFXOUTL    Will the data fit the screen?    HRC250DK 01486500
./ R 01554000 01556000 $ 01554100
         B     BLDWRT         Write the data to the screen     HRC250DK 01554100
./ D 01575000 01576000
./ R 01580000 01581000 $ 01580100 1000
         BO    BLDVMR         Set status = VM READ             HRC250DK 01580100
         B     BLDCPR         Set status = CP READ             HRC250DK 01581100
./ R 01583000 01584000 $ 01583100 1000
         BO    BLDVMP         Set status = VM READ hidden      HRC250DK 01583100
         B     BLDCPP         Set status = CP READ hidden      HRC250DK 01584100
./ D 01586000 01588000
./ I 01645500 $ 01645600
         CALL  HDKGRCRL       Release CCW resources            HRC250DK 01645600
./ R 01654000 01745200 $ 01654005 100
BLDWRT   DS    0H                                              HRC250DK 01645005
         LA    R0,CPIXWRT      Write to output area            HRC250DK 01645105
         B     BLDCHPRG                                        HRC250DK 01645205
         SPACE 1                                               HRC250DK 01645305
BLDTAB   DS    0H                                              HRC250DK 01645405
         LA    R0,CPIXTAB      Write to input area             HRC250DK 01645505
         B     BLDRDEX                                         HRC250DK 01645605
         SPACE 1                                               HRC250DK 01645305
BLDIDS   DS    0H                                              HRC250DK 01645405
         LA    R0,CPIXIDS      Write to input area             HRC250DK 01645505
BLDRDEX  DS    0H                                              HRC250DK 01645015         
         LA    R1,RDEXIT       Return processing here          HRC250DK 01645525
         ST    R1,TRQBCRT        after doing the I/O           HRC250DK 01645535
         B     BLDCHPRG                                        HRC250DK 01645605
         SPACE 1                                               HRC250DK 01645705
BLDRMI   DS    0H                                              HRC250DK 01645805
         LA    R0,CPIXRMI      Read Manual Input               HRC250DK 01645905
         B     BLDCHPRG                                        HRC250DK 01646005
         SPACE 1                                               HRC250DK 01646105
BLDFMT   DS    0H                                              HRC250DK 01646205
         LA    R0,CPIXFMT     Format screen w/logo             HRC250DK 01646305
         CALL  HDKGRCCW       returns R1 -> CCWs               HRC250DK 01646405
         TM    VMOSTAT,VMSYSOP Is this the Operator?           HRC250DK 01646505
         BZ    CALLIOS        ..no, put up the logo            HRC250DK 01646605
         B     GRFCLRT        ..yes, just clear the screen     HRC250DK 01646705
         SPACE 1                                               HRC250DK 01646805
BLDHLD   DS    0H                                              HRC250DK 01646905
         LA    R0,CPIXHLD      Set status = HOLDING            HRC250DK 01647005
         B     BLDCHPRG                                        HRC250DK 01647105
         SPACE 1                                               HRC250DK 01647205
BLDMOR   DS    0H                                              HRC250DK 01647305
         LA    R0,CPIXMOR      Set status = MORE...            HRC250DK 01647405
         B     BLDCHPRG                                        HRC250DK 01647505
         SPACE 1                                               HRC250DK 01647605
BLDWNG   DS    0H                                              HRC250DK 01647705
         LA    R0,CPIXWNG      Sound warning alarm             HRC250DK 01647805
         B     BLDCHPRG                                        HRC250DK 01647905
         SPACE 1                                               HRC250DK 01648005
BLDNAC   DS    0H                                              HRC250DK 01648105
         LA    R0,CPIXNAC      Set status = NOT ACCEPTED       HRC250DK 01648205
         B     BLDCHPRG                                        HRC250DK 01648305
         SPACE 1                                               HRC250DK 01648405
BLDCRD   DS    0H                                              HRC250DK 01648505
         LA    R0,CPIXCRD      Clear input area                HRC250DK 01648605
         TM    RDEVTFLG,RDEVMORE+RDEVHOLD in MORE or HOLD ??   HRC250DK 01648605
         BZ    BLDCHPRG       No, set status to RUNNING        HRC250DK 01648605
         LA    R0,CPIXMRD     Yes, Leave status alone          HRC250DK 01648605
         B     BLDCHPRG                                        HRC250DK 01648705
         SPACE 1                                               HRC250DK 01648805
BLDRUN   DS    0H                                              HRC250DK 01648905
         LA    R0,CPIXRUN      Set status = RUNNING            HRC250DK 01649005
         B     BLDCHPRG                                        HRC250DK 01649105
         SPACE 1                                               HRC250DK 01649205
BLDCLR   DS    0H                                              HRC250DK 01649305
         TM    TRQBFLAG,CRTUSEWA  Is E/w(A) needed?            HRC250DK 01649305
         BNZ   BLDCLS             yes, do that                 HRC250DK 01649305
         MVI   RDEVKEYC,0         Clear last interrupt key     HRC250DK 01649305
         LA    R1,CPIXCLR         Generate the channel program HRC250DK 01649305
         B     BLDCHPRG                                        HRC250DK 01649505
BLDCLS   DS    0H                                              HRC250DK 01649305
         NI    TRQBFLAG,X'FF'-CRTUSEWA  Reseet the E/W flag    HRC250DK 01649305
         LA    R1,CPIXCLS                                      HRC250DK 01649305
         B     BLDCHPRG                                        HRC250DK 01649505
         SPACE 1                                               HRC250DK 01649605
BLDVMR   DS    0H                                              HRC250DK 01649705
         LA    R0,CPIXVMR      Set status = VM READ            HRC250DK 01649805
         B     BLDCHPRG                                        HRC250DK 01649905
         SPACE 1                                               HRC250DK 01650005
BLDCPR   DS    0H                                              HRC250DK 01650105
         LA    R0,CPIXCPR      Set status = CP READ            HRC250DK 01650205
         B     BLDCHPRG                                        HRC250DK 01650305
         SPACE 1                                               HRC250DK 01650405
BLDVMP   DS    0H                                              HRC250DK 01650505
         LA    R0,CPIXVMP      Set status = VM READ inhibit    HRC250DK 01650605
         B     BLDCHPRG                                        HRC250DK 01650705
         SPACE 1                                               HRC250DK 01650805
BLDCPP   DS    0H                                              HRC250DK 01650905
         LA    R0,CPIXVMR      Set status = CP READ inhibit    HRC250DK 01651005
BLDCHPRG DS    0H                                              HRC250DK 01651105
         CALL  HDKGRCCW       returns R1 -> CCWs               HRC250DK 01651205
         B     CALLIOS        and send it                      HRC250DK 01651305
./ D 01747000 01765000
./ D 01777000 01806000
./ I 01918000 $ 01918103 10
         SPACE 2                                               HRC250DK 01918103
*        Table of Attention Identification (AID) codes         HRC250DK 01918113
*        and index values into KEYTBLP                         HRC250DK 01918123
*        (moved here from DMKGRT)                              HRC250DK 01918133
         SPACE 1                                               HRC250DK 01918143
AIDTAB   DC    AL1(AIDENTER,X'00')    ENTER                    HRC250DK 01918153
         DC    AL1(AIDCLEAR,X'04')    CLEAR                    HRC250DK 01918163
         DC    AL1(AIDPA2,X'18')      PA2 (CNCL)               HRC250DK 01918173
         DC    AL1(AIDPA1,X'08')      PA1                      HRC250DK 01918183
         DC    AL1(AIDPA3,X'0C')      PA3                      HRC250DK 01918193
         DC    AL1(AIDOPRID,X'10')    CARD READER              HRC250DK 01918203
AIDPFTAB DC    AL1(AIDPF1,X'14')      PF01                     HRC250DK 01918213
         DC    AL1(AIDPF2,X'14')      PF02                     HRC250DK 01918223
         DC    AL1(AIDPF3,X'14')      PF03                     HRC250DK 01918233
         DC    AL1(AIDPF4,X'14')      PF04                     HRC250DK 01918243
         DC    AL1(AIDPF5,X'14')      PF05                     HRC250DK 01918253
AIDTBPF6 DC    AL1(AIDPF6,X'14')      PF06                     HRC250DK 01918263
         DC    AL1(AIDPF7,X'14')      PF07                     HRC250DK 01918273
         DC    AL1(AIDPF8,X'14')      PF08                     HRC250DK 01918283
         DC    AL1(AIDPF9,X'14')      PF09                     HRC250DK 01918293
         DC    AL1(AIDPF10,X'14')     PF10                     HRC250DK 01918303
         DC    AL1(AIDPF11,X'14')     PF11                     HRC250DK 01918313
         DC    AL1(AIDPF12,X'14')     PF12                     HRC250DK 01918323
         DC    AL1(AIDPF13,X'14')     PF13                     HRC250DK 01918333
         DC    AL1(AIDPF14,X'14')     PF14                     HRC250DK 01918343
         DC    AL1(AIDPF15,X'14')     PF15                     HRC250DK 01918353
         DC    AL1(AIDPF16,X'14')     PF16                     HRC250DK 01918363
         DC    AL1(AIDPF17,X'14')     PF17                     HRC250DK 01918373
         DC    AL1(AIDPF18,X'14')     PF18                     HRC250DK 01918383
         DC    AL1(AIDPF19,X'14')     PF19                     HRC250DK 01918393
         DC    AL1(AIDPF20,X'14')     PF20                     HRC250DK 01918403
         DC    AL1(AIDPF21,X'14')     PF21                     HRC250DK 01918413
         DC    AL1(AIDPF22,X'14')     PF22                     HRC250DK 01918423
         DC    AL1(AIDPF23,X'14')     PF23                     HRC250DK 01918433
         DC    AL1(AIDPF24,X'14')     PF24                     HRC250DK 01918443
         DC    AL1(X'01',X'1C')       TESTREQ (not real AID)   HRC250DK 01918453
AIDTABCT DC    AL2((*-AIDTAB)/2)      Table entry count        HRC250DK 01918463
./ D 01921000
./ R 01926000 02050060 $ 01926103 100
         SPACE 3                                               HRC250DK 01926103
*                                                              HRC250DK 01926203
*        Static GRFXBLOK for default 3270 Model 2              HRC250DK 01926303
*                                                              HRC250DK 01926403
DMKGRFM2 DS    0D                                              HRC250DK 01926503
ROWSMOD2 DC    H'24'      Size of physical screen (rows)       HRC250DK 01926603
COLSMOD2 DC    H'80'      Size of physical screen (cols)       HRC250DK 01926703
INPLMOD2 DC    AL2(140)   Input area length                    HRC250DK 01926803
OUTLMOD2 DC    AL2(22*80) Output area length                   HRC250DK 01926903
@INPMOD2 DC    XL2'5B5F'  Input area attr buffer addr          HRC250DK 01927003
@STAMOD2 DC    XL2'5D6B'  Status area attr buffer addr         HRC250DK 01927103
@SYSMOD2 DC    XL2'5DF6'  System ID attr buffer addr           HRC250DK 01927203
@LSTMOD2 DC    XL2'5D7F'  Bottom-right buffer address          HRC250DK 01927303
RPQAMOD2 DC    A(0)       WSF RPQ data CP virtual address      HRC250DK 01927403
RPQLMOD2 DC    H'0'        ''  ''  ''  length                  HRC250DK 01927503
ERASMOD2 DC    AL1(CCWEW) EW/EWA opcode                        HRC250DK 01927603
E4FLMOD2 DC    XL1'00'    SenseId flags                        HRC250DK 01927703
CUIDMOD2 DC    XL3'00'    SnsId Control Unit id:               HRC250DK 01927803
DVIDMOD2 DC    XL3'00'    SnsId Device id:                     HRC250DK 01927903
INL1MOD2 DC    AL1(22)    1st input area line                  HRC250DK 01928003
INL2MOD2 DC    AL1(23)    last input area line                 HRC250DK 01928103
OALZMOD2 DC    AL1(21)    last output area line                HRC250DK 01928203
ATOAMOD2 DC    AL1(FLDPROT) Bottom-right attribute             HRC250DK 01928303
ORGIMOD2 DC    AL2(22*80) 1st input area cell location         HRC250DK 01928403
RSV1MOD2 DC    XL4'00'    (available)                          HRC250DK 01928503
BUFFMOD2 DC    64XL1'00'  Buffer for orders & data             HRC250DK 01928603
./ D 02051000 02054000
./ R 02063010 02063150 $ 02063101 20
         COPY GRFXBLOK                                         HRC250DK 02063101
         COPY GRCWORK                                          HRC250DK 02063121
         COPY HDK3270                                          HRC250DK 02063141
:READ HDKGRC AUXLCL   A
HRC250DK V01 Dynamic 327x screen size support
:READ HDKGRC HRC250DK A
./ * HRC250DK - Dynamic 327x screen size support
./ *
./ * Add new module to dynamically build channel programs    
./ * and data streams for 327x display terminals. The data     
./ * streams are built based on the screen geomeetry and 
./ * device features that were discovered by HDKD8C when
./ * the device was enabled and stored in the GRFXBLOK 
./ * attached to the RDEVBLOK.
./ * 
./ * HISTORY:
./ * 19-Jul-2025 WDENTON  Initial version for VM370CE V1 R1.2
./ *
:READ HDKGRC ASSEMBLE A
GRC      TITLE 'HDKGRC           (CP)  VM370CE: VIRTUAL MACHINE/370 COMX00010000
               MUNITY EDITION'                                          00020000
         ISEQ  73,80          Valdate seuence numbers                   00030000
**********************************************************************  00040000
*                                                                       00050000
* MODULE NAME -                                                         00060000
*                                                                       00070000
*        HDKGRC                                                         00080000
*                                                                       00090000
* FUNCTION -                                                            00100000
*                                                                       00110000
*        Build all of the Channel Programs needed to manage             00120000
*        local display devices. The CCWs and associated data            00130000
*        streams will be tailored to fit the device type and            00140000
*        screen geometry.                                               00150000
*                                                                       00160000
* ATTRIBUTES -                                                          00170000
*                                                                       00180000
*        Reenterable, resident                                          00190000
*                                                                       00200000
* ENTRY POINTS -                                                        00210000
*                                                                       00220000
*        DMKGRCCW - Prepare channel programs                            00230000
*        DMKGRCRL - Release CCW resources from IOBLOK                   00240000
*                                                                       00250000
**********************************************************************  00260000
         EJECT ,                                                        00270000
         COPY  OPTIONS                                                  00280000
         COPY  LOCAL                                                    00290000
         SPACE 3                                                        00300000
HDKGRC   CSECT ,                                                        00310000
         DC    CL8'HDKGRC'        Module Id                             00320000
         DC    AL2(MODEND-HDKGRC) Module length                         00330000
         DC    C'&SYSDATE',C'-'   Compile date                          00340000
         DC    C'&SYSTIME'        Compile time                          00350000
         SPACE 3                                                        00360000
         USING PSA,0                                                    00370000
         USING TRQBLOK,R5                                               00380000
         USING CONTASK,R6                                               00390000
         USING RDEVBLOK,R8                                              00400000
         USING GRFXBLOK,R9                                              00410000
         USING IOBLOK,R10                                               00420000
         USING VMBLOK,R11                                               00430000
         USING SAVEAREA,R13                                             00440000
         SPACE 3                                                        00450000
         EXTRN DMKBOXDS,DMKBOXBX,DMKBOX80                               00460000
         EXTRN DMKCVT12,DMKCVT14                                        00470000
         EXTRN HDKG66CP,DMKSYSID                                        00480000
         TITLE 'HDKGRC:HDKGRCCW  (CP)  VM370CE: VIRTUAL MACHINE/370 COMX00490000
               MUNITY EDITION'                                          00500000
***************************************************************         00510000
*                                                                       00520000
* METHOD NAME -                                                         00530000
*                                                                       00540000
*        HDKGRCCW                                                       00550000
*                                                                       00560000
* FUNCTION -                                                            00570000
*                                                                       00580000
*        Build a local display device channel program                   00590000
*        and its associated data stream.                                00600000
*                                                                       00610000
* ENTRY CONDITIONS -                                                    00620000
*                                                                       00630000
*        R0  = Index of channel program to be built                     00640000
*        R8  = Address of the RDEVBLOK                                  00650000
*        R10 = Address of the IOBLOK                                    00660000
*        R11 = Address of the user's VMBLOK                             00670000
*        R12 = Address of HDKGINIT entry point                          00680000
*        R13 = Address of standard SAVEAREA                             00690000
*                                                                       00700000
* EXIT CONDITIONS -                                                     00710000
*                                                                       00720000
*        R15 = 0 : The RDEVBLOK has been initialized                    00730000
*                                                                       00740000
*        R15 = 4 : A Read Partition Query was issued.                   00750000
*                  Wait for the Attention interrupt that                00760000
*                  will be generated. A call to HDKGINRD                00770000
*                  needs to be made when that interrupt occurs.         00780000
*                                                                       00790000
*        R15 = 8 : An I/O error occurred while trying th                00800000
*                  initialize the display device.                       00810000
*                                                                       00820000
* NOTES -                                                               00830000
*                                                                       00840000
*        Local display device initialization is invoked                 00850000
*        when an unsolicited Device-End is detected for                 00860000
*        an enabled device or when an ENABLE command is                 00870000
*        issued for a disabled device                                   00880000
*                                                                       00890000
***************************************************************         00900000
         SPACE 3                                                        00910000
HDKGRCCW RELOC ,                                                        00920000
         SPACE 3                                                        00930000
*-------------------------------------------------------------          00940000
*        3066 gets its own happy place                                  00950000
*-------------------------------------------------------------          00960000
         SPACE 1                                                        00970000
         CLI   RDEVTYPE,TYP3066   Ship old 3066 stuff                   00980000
         BNE   CCW327X            ... off to buffalo                    00990000
         GOTO  HDKG66CP           3066 CCWs in separate place           01000000
         SPACE 3                                                        01010000
*-------------------------------------------------------------          01020000
*        Generate 327x channel programs and data streams                01030000
*-------------------------------------------------------------          01040000
         SPACE 1                                                        01050000
CCW327X  DS    0H                                                       01060000
         L     R9,RDEVGRFX    Get GRFXBLOK addressability               01070000
         ICM   R7,15,IOBCHPRG Get channel program addressing            01080000
         BNZ   ROUTCALL       have it already                           01090000
         LA    R0,GRFCCWLD    1st call.. allocate the storage           01100000
         CALL  DMKFREE        ...                                       01110000
         ST    R1,IOBCHPRG    Chain it off the IOBLOK                   01120000
         LR    R7,R1          Set permanent aaddressing                 01130000
         USING GRFCCWS,R7     ...                                       01140000
         SPACE 1                                                        01150000
*-------------------------------------------------------------          01160000
*        Route based on display device type                             01170000
*-------------------------------------------------------------          01180000
         SPACE 1                                                        01190000
ROUTCALL DS    0H                                                       01200000
         B     VECTOR77(R1)                                             01210000
VECTOR77 DS    0H                                                       01220000
         B     BADCALL        CPIX=0  bad call                          01230000
         B     BLD77RMI       CPIX=1  Read Manual Input                 01240000
         B     BLD77FMT       CPIX=2  Format screen w/logo              01250000
         B     BLD77WRT       CPIX=3  Write to output area              01260000
         B     BLD77CLR       CPIX=4  Clear screen                      01270000
         B     BLD77CLS       CPIX=5  Clear screen with Erase Write     01280000
         B     BLD77CRD       CPIX=6  Clear input area w/RUNNING        01290000
         B     BLD77MRD       CPIX=7  Clear input area w/o status       01300000
         B     BLD77IDS       CPIX=8  Write to input area               01310000
         B     BLD77TAB       CPIX=9  Insert a logical tab              01320000
         B     BLD77HLD       CPIX=10 Set status = HOLDING              01330000
         B     BLD77MOR       CPIX=11 Set status = MORE...              01340000
         B     BLD77NAC       CPIX=12 Set status = NOT ACCEPTED         01350000
         B     BLD77RUN       CPIX=13 Set status = RUNNING              01360000
         B     BLD77VMR       CPIX=14 Set status = VM READ              01370000
         B     BLD77CPR       CPIX=15 Set status = CP READ              01380000
         B     BLD77VMP       CPIX=16 Set status = VM READ inhibit      01390000
         B     BLD77CPP       CPIX=17 Set status = CP READ inhibit      01400000
         B     BLD77WNG       CPIX=18 Sound warning alarm               01410000
         SPACE 3                                                        01420000
GOODEXIT DS    0H                                                       01430000
         LA    R1,GRFCCW1                                               01440000
EXITR1   DS    0H                                                       01450000
         ST    R1,SAVER1      Return R1 = channel program               01460000
         XR    R15,R15        and RC=0                                  01470000
DOEXIT   DS    0H                                                       01480000
         EXIT  ,                                                        01490000
BADCALL  DS    0H                                                       01500000
         LA    R15,8                                                    01510000
         B     DOEXIT                                                   01520000
         EJECT ,                                                        01530000
* +--------------------------------------------------------+            01540000
* |                                                        |            01550000
* |      R M I : Read Manual Input (327x)                  |            01560000
* |                                                        |            01570000
* |      Input:                                            |            01580000
* |      IOBMISC = read buffer address                     |            01590000
* |                                                        |            01600000
* |      0B (Select)                                       |            01610000
* |      01 (Write) WCC                                    |            01620000
* |                 SBA @inpt                              |            01630000
* |      06 (RM)    buffer                                 |            01640000
* |                                                        |            01650000
* +--------------------------------------------------------+            01660000
         SPACE 1                                                        01670000
         PUSH  USING                                                    01680000
BLD77RMI DS    0H                                                       01690000
         MVC   GRFCCW1(RMI77CPL),RMI77CP  Channel program               01700000
         MVC   GRFXBUFF(RMI77DSL),RMI77DS Data stream                   01710000
*                                                                       01720000
         LA    R1,RMI77DSL        Set data stream length                01730000
         STH   R1,GRFCCW2+6         into the write CCW                  01740000
         LA    R1,GRFXBUFF        Data stream goes here                 01750000
         STCM  R1,7,GRFCCW2+1     plug in CCW address                   01760000
*                                                                       01770000
         USING RMI77DS,R1         Fill in variables                     01780000
         MVC   RMI77SBA,GRFX@INP  ... input area buffer addr            01790000
*                                                                       01800000
         L     R1,IOBMISC         Caller-provided input buffer          01810000
         STCM  R1,7,GRFCCW3+1       goes into the RM CCW                01820000
         LA    R1,BUFINLTH*2      along with the buffer size            01830000
         STH   R1,GRFCCW3+6       ...                                   01840000
*                                                                       01850000
         B     GOODEXIT           and all finished                      01860000
         SPACE 1                                                        01870000
         POP   USING                                                    01880000
         SPACE 3                                                        01890000
*-------------------------------------------------------------          01900000
*        RMI Channel Program template                                   01910000
*-------------------------------------------------------------          01920000
         SPACE 1                                                        01930000
RMI77CP  DS    0D                                                       01940000
         CCW   CCWSEL,0,SILI+CC,1       Select                          01950000
         CCW   CCWWRT,*-*,SILI+CC,*-*   Write: WCC, SBA @inpt           01960000
         CCW   CCWRM,*-*,SILI,*-*       Read Modified                   01970000
RMI77CPL EQU   *-RMI77CP                                                01980000
         SPACE 1                                                        01990000
*-------------------------------------------------------------          02000000
*        RMI Data Stream template                                       02010000
*-------------------------------------------------------------          02020000
         SPACE 1                                                        02030000
RMI77DS  EQU   *                                                        02040000
         DC    AL1(WCCDFLT)                                             02050000
         DC    AL1(SBA)                                                 02060000
RMI77SBA DC    AL2(*-*)       Input Area buffer address                 02070000
RMI77DSL EQU   *-RMI77DS                                                02080000
         EJECT ,                                                        02090000
* +--------------------------------------------------------+            02100000
* |                                                        |            02110000
* |      F M T : Format screen with logo                   |            02120000
* |                                                        |            02130000
* |      Input:                                            |            02140000
* |      none                                              |            02150000
* |                                                        |            02160000
* |      05/0D (EW[A]) WCC kbreset+alarm                   |            02170000
* |                    SBA @stat                           |            02180000
* |                    SF prot-low                         |            02190000
* |                    CL9'ENABLED'                        |            02200000
* |                    SF prot-low                         |            02210000
* |                    CL8'sysid'                          |            02220000
* |                    SF prot-low   s/b last screen cell  |            02230000
* |                    C'VM/370 Online'                    |            02240000
* |                                                        |            02250000
* |                    for each logo row [                 |            02260000
* |                       SBA logo-addr                    |            02270000
* |                       logo data row                    |            02280000
* |                    ]                                   |            02290000
* |      03    (NOP)                                       |            02300000
* |                                                        |            02310000
* +--------------------------------------------------------+            02320000
         SPACE 1                                                        02330000
         PUSH  USING                                                    02340000
BLD77FMT DS    0H                                                       02350000
         MVC   GRFCCW1(FMT77CPL),FMT77CP                                02360000
         MVC   GRFCCW1(1),GRFXERAS Put correct EW[A] opcode             02370000
*                                                                       02380000
         L     R5,=A(DMKBOXDS) Access logo descriptor                   02390000
         LH    R2,0(,R5)      Get row size                              02400000
         LH    R3,2(,R5)      Get row count                             02410000
*                                                                       02420000
*        Calculate the space needed                                     02430000
*                                                                       02440000
         LA    R5,3(,R2)      (row.size + 3)                            02450000
         MR    R4,R3          * row.ct                                  02460000
         LA    R5,FMT77DSL(,R5) + preamble                              02470000
         STH   R5,GRFCCW1+6   = write length                            02480000
*                                                                       02490000
*        (Re)allocate as needed                                         02500000
*                                                                       02510000
         ICM   R6,15,GRFBUFFA Is there a work area?                     02520000
         BZ    FMT77ALO                                                 02530000
         CH    R5,GRFBUFFL                                              02540000
         BNH   FMT77OK1                                                 02550000
*                                                                       02560000
*        release current.. it's too small                               02570000
*                                                                       02580000
         LR    R1,R6          release current                           02590000
         LH    R0,GRFBUFFL    ...                                       02600000
         SRL   R0,3           ... (dwords)                              02610000
         CALL  DMKFRET        ...                                       02620000
*                                                                       02630000
*        Allocate logo buffer wrk                                       02640000
*                                                                       02650000
FMT77ALO DS    0H                                                       02660000
         LA    R0,7(,R5)      Alloc size in dwords                      02670000
         SRL   R0,3           dwords please                             02680000
         LR    R5,R0          save it...                                02690000
         SLL   R5,3           ... as byte count                         02700000
         STH   R5,GRFBUFFL    (save new size)                           02710000
         CALL  DMKFREE        ... get it                                02720000
         ST    R1,GRFBUFFA    save address                              02730000
         LR    R6,R1          set addressability                        02740000
*                                                                       02750000
*        Build orders in work area                                      02760000
*                                                                       02770000
FMT77OK1 DS    0H                                                       02780000
         STCM  R6,7,GRFCCW1+1 Set order addr in CCW                     02790000
         L     R5,=A(DMKBOXBX) Use the default logo                     02800000
*                                                                       02810000
         MVC   0(FMT77DSL,R6),FMT77DS                                   02820000
         USING FMT77DS,R6                                               02830000
         MVC   FMT77SBA,GRFX@STA  Status area attr addr                 02840000
         L     R14,=A(DMKSYSID)   Move in systemId                      02850000
         MVC   FMT77SID,0(R14)    ...                                   02860000
*                                                                       02870000
*        If we are running on Hercules-380, then update                 02880000
*        the "VM/370 Online" message to say "VM/380 Online"             02890000
*                                                                       02900000
         MVC   FMT77VMO+4(1),INSTWRD1 zap with 7 or 8 from PSA          02910000
         CLI   INSTWRD1,C'8'  Is it really VM/380??                     02920000
         BNE   *+8            no.. all set to build logo                02930000
         L     R5,=A(DMKBOX80) yes.. use alternate logo                 02940000
*                                                                       02950000
*        Calculate starting buffer address                              02960000
*                                                                       02970000
         LH    R4,GRFXROWS    Screen rows                               02980000
         S     R4,F2          - 2                                       02990000
         SR    R4,R3          - logo rows                               03000000
         SRL   R4,1           / 2 = starting row                        03010000
         MH    R4,GRFXCOLS    * cols = address                          03020000
*                                                                       03030000
         LH    R1,GRFXCOLS    Screen cols                               03040000
         SR    R1,R2          - logo cols                               03050000
         SRL   R1,1           / 2 = starting col                        03060000
*                                                                       03070000
         AR    R4,R1          row+col = buffer addr                     03080000
*                                                                       03090000
         LA    R6,FMT77DSL(,R6) Build the logo here                     03100000
         BCTR  R2,0           row size - 1 for EX                       03110000
*                                                                       03120000
FMT77LP  DS    0H                                                       03130000
         LR    R1,R4          Current buffer address                    03140000
         TM    RDEVGRIC,RDEVAD14 14-bit addressing                      03150000
         BO    FMT77ADD          yes, use addr as-is                    03160000
         CALL  DMKCVT12          no, convert to 12-bit                  03170000
FMT77ADD DS    0H                                                       03180000
         MVI   0(R6),SBA      Move to next row                          03190000
         STCM  R1,3,1(R6)     ...                                       03200000
*                                                                       03210000
         EX    R2,FMT77MVC    Move in next logo row                     03220000
*                                                                       03230000
         LA    R6,3+1(R2,R6)  Bump buffer target                        03240000
         LA    R5,1(R2,R5)    Bump to next logo row                     03250000
         AH    R4,GRFXCOLS    Bump buffer addr                          03260000
*                                                                       03270000
         BCT   R3,FMT77LP     and build the whole logo                  03280000
*                                                                       03290000
         MVI   GRFXATOA,FLDPROT Attribute in lower right                03300000
*                                                                       03310000
         B     GOODEXIT                                                 03320000
         SPACE 1                                                        03330000
FMT77MVC MVC   3(*-*,R6),0(R5)    *** Executed ***                      03340000
         SPACE 1                                                        03350000
         POP   USING                                                    03360000
         SPACE 3                                                        03370000
*-------------------------------------------------------------          03380000
*        FMT Channel Program template                                   03390000
*-------------------------------------------------------------          03400000
         SPACE 1                                                        03410000
FMT77CP  DS    0D                                                       03420000
         CCW   CCWEW,*-*,SILI+CC,*-*    Erase Write [Alternate]         03430000
         CCW   CCWNOP,0,SILI,1          NOP to get CE+DE together       03440000
FMT77CPL EQU   *-FMT77CP                                                03450000
         SPACE 1                                                        03460000
*-------------------------------------------------------------          03470000
*        FMT Data Stream template                                       03480000
*-------------------------------------------------------------          03490000
         SPACE 1                                                        03500000
FMT77DS  EQU   *                                                        03510000
         DC    AL1(WCCUNLK+WCCALARM)                                    03520000
         DC    AL1(SBA)                                                 03530000
FMT77SBA DC    AL2(*-*)         status area buffer address              03540000
         DC    AL1(SF,FLDPROT)                                          03550000
         DC    CL9'ENABLED'                                             03560000
         DC    AL1(SF,FLDPROT)                                          03570000
FMT77SID DC    CL8'sysid'                                               03580000
         DC    AL1(SF,FLDPROT)                                          03590000
FMT77VMO DC    CL20'VM/370 Online'                                      03600000
FMT77DSL EQU   *-FMT77DS                                                03610000
         EJECT ,                                                        03620000
* +--------------------------------------------------------+            03630000
* |                                                        |            03640000
* |      W R T : Write to output area                      |            03650000
* |                                                        |            03660000
* |      Input:                                            |            03670000
* |      R4:       number of screen lines to write         |            03680000
* |      R5:       TRQBLOK address                         |            03690000
* |      R6:       CONTASK address                         |            03700000
* |      CONCNT:   length of data                          |            03710000
* |      CONDATA:  data to write                           |            03720000
* |      RDEVCORD: 1st screen line to write                |            03730000
* |                                                        |            03740000
* |      0B (Select)                                       |            03750000
* |                                                        |            03760000
* |      01 (Write) or 05 (EW) or 0D (EWA)                 |            03770000
* |                                                        |            03780000
* |         WCC kbreset                                    |            03790000
* |         if !hilight:                                   |            03800000
* |            SBA target-row, col-0                       |            03810000
* |         else                                           |            03820000
* |            if target-row == 0:                         |            03830000
* |               SBA 0,0                                  |            03840000
* |            else:                                       |            03850000
* |               SBA (target-row, 0) - 1                  |            03860000
* |               SF prot-high                             |            03870000
* |                                                        |            03880000
* |      00 data chained                                   |            03890000
* |                                                        |            03900000
* |          caller's data                                 |            03910000
* |                                                        |            03920000
* |      00 data chained                                   |            03930000
* |                                                        |            03940000
* |         if hilight && not ending on last row:          |            03950000
* |            SBA last row, end col                       |            03960000
* |            SF  prot-low                                |            03970000
* |                                                        |            03980000
* |         SBA @inpt                                      |            03990000
* |         SF  unprot+mdt                                 |            04000000
* |         SBA @stat                                      |            04010000
* |         SF  prot-low                                   |            04020000
* |         RUNNING                                        |            04030000
* |         SF  prot-low                                   |            04040000
* |         sysid                                          |            04050000
* |         if target-row == 0:                            |            04060000
* |            SF  prot-high                               |            04070000
* |         else                                           |            04080000
* |            SF  prot-low                                |            04090000
* |                                                        |            04100000
* +--------------------------------------------------------+            04110000
         SPACE 1                                                        04120000
         PUSH  USING                                                    04130000
BLD77WRT DS    0H                                                       04140000
         MVC   CONCCW1(WRT77CPL),WRT77CP  Move in model                 04150000
         STC   R4,CONCCW1+5               Save number of lines          04160000
         MVC   GRFXBUFF(WRT77DSL),WRT77DS Data stream model             04170000
*                                                                       04180000
         LA    R3,GRFXBUFF             Address the data stream          04190000
         STCM  R3,7,CONCCW2+1          Set the preamble CCW data addr   04200000
         USING WRT77DS,R3     ...                                       04210000
*                                                                       04220000
         TM    RDEVSTA3,RDEVEWRT       Erase/write required?            04230000
         BZ    WRTNOEW                 No                               04240000
         NI    RDEVSTA3,255-RDEVEWRT   Turn off flag                    04250000
         MVC   CONCCW2(1),GRFXERAS     Set erase CCW opcode             04260000
WRTNOEW  DS    0H                                                       04270000
*                                                                       04280000
*        Calculate starting buffer address                              04290000
*                                                                       04300000
         SR    R1,R1               Get current line position            04310000
         IC    R1,RDEVCORD         ...                                  04320000
         TM    TRQBFLAG,CRTSIO     Diag58 writing to input area?        04330000
         BZ    *+8                 no, RDEVCORD is good                 04340000
         IC    R1,TRQBLINE         yes, get Diag58 line number          04350000
         STC   R1,SAVEWRK1         (save starting buffer address)       04360000
         AR    R4,R1               also calc ending line number         04370000
         MH    R1,GRFXCOLS         * col count = raw buffer addr        04380000
*                                                                       04390000
*        Build preamble data stream                                     04400000
*                                                                       04410000
         TM    CONPARM2,HILIGHT/256 Is the HILIGHT option in effect?    04420000
         BZ    WRTNOHI1            no, take the simple path             04430000
         LTR   R1,R1               Writing to first line?               04440000
         BZ    WRTLN0              yes, special case                    04450000
         BCTR  R1,0                no, set attr on line above           04460000
         LA    R2,WRT77LN2         Set preamble data length             04470000
         B     WRTADDR1            join below                           04480000
*                                                                       04490000
*        Here, the first line on the screen is to be hilighted.         04500000
*        We will just set a value of the bottom right attribute         04510000
*        that also referenced whenever the status area is displayed.    04520000
*                                                                       04530000
WRTLN0   DS    0H                                                       04540000
         MVI   GRFXATOA,FLDHIPRO   Set hilite attr for first line       04550000
*                                                                       04560000
*        Here for all non-hilighted and when the 1st line               04570000
*        is to be lighted. In this case, the SBA to set the             04580000
*        output line is the same: the start og the target line          04590000
*        This is setting up for just: WCC SBA(line#,0) preamble.        04600000
*                                                                       04610000
WRTNOHI1 DS    0H                                                       04620000
         LA    R2,WRT77LN1         Set basic prefix data length         04630000
*                                                                       04640000
WRTADDR1 DS    0H                                                       04650000
         STH   R2,CONCCW2+6        Set preamble data stream length      04660000
         TM    RDEVGRIC,RDEVAD14   14-bit addressing                    04670000
         BO    WRTADD1A            yes, use addr as-is                  04680000
         CALL  DMKCVT12            no, convert to 12-bit                04690000
WRTADD1A DS    0H                                                       04700000
         STCM  R1,3,WRT77AD1       Set addr in data stream              04710000
*                                                                       04720000
*        Fill in user's data adr & length                               04730000
*                                                                       04740000
         LA    R1,CONDATA          User's data address                  04750000
         STCM  R1,7,CONCCW3+1      ...                                  04760000
         LH    R1,CONCNT           and its length                       04770000
         STH   R1,CONCCW3+6        ...                                  04780000
*                                                                       04790000
*        Build footer based on HILITE and row 0                         04800000
*                                                                       04810000
         TM    CONPARM2,HILIGHT/256 Is the HILIGHT option in effect?    04820000
         BZ    WRTNOHI2            no, take the simple path             04830000
         CLI   SAVEWRK1,0          Started on line 0?                   04840000
         BE    WRTNOHI2            yes, also simple                     04850000
         CLM   R4,1,GRFXINL1       Ended on last output line            04860000
         BE    WRTNOHI2            yes, the InArea attr is enough       04870000
*                                                                       04880000
*        Suffix needs to first end the HILITE                           04890000
*                                                                       04900000
         MH    R4,GRFXCOLS         put attr at end of last line         04910000
         BCTR  R4,0                  of HILITE output                   04920000
         TM    RDEVGRIC,RDEVAD14   14-bit addressing                    04930000
         BO    WRTADD2A            yes, use addr as-is                  04940000
         CALL  DMKCVT12            no, convert to 12-bit                04950000
WRTADD2A DS    0H                                                       04960000
         STCM  R4,3,WRT77AD2       end-HILITE addr to data stream       04970000
         LA    R1,WRT77SF1         use large suffix                     04980000
         LA    R2,WRT77LN3         ...                                  04990000
         B     WRTDOSFX            and join below                       05000000
*                                                                       05010000
*        Simple suffix if not HILITE                                    05020000
*        or HILITE started on line 0                                    05030000
*        or HILITEended on last output area line                        05040000
*                                                                       05050000
WRTNOHI2 DS    0H                                                       05060000
         LA    R1,WRT77SF2         use shorter suffix                   05070000
         LA    R2,WRT77LN4         ...                                  05080000
*                                                                       05090000
*        Build the common part of suffix                                05100000
*                                                                       05110000
WRTDOSFX DS    0H                                                       05120000
         STCM  R1,7,CONCCW4+1      Set suffix address                   05130000
         STH   R2,CONCCW4+6           and length in the CCW             05140000
*                                                                       05150000
         MVC   WRT77AD3,GRFX@INP   Set @inpt buffer address             05160000
         MVC   WRT77AD4,GRFX@STA   Set @stat buffer address             05170000
         L     R14,=A(DMKSYSID)    Move in systemId                     05180000
         MVC   WRT77SID,0(R14)     ...                                  05190000
         MVC   WRT77ATT,GRFXATOA   Set lower right attr                 05200000
*                                                                       05210000
         LA    R1,CONCCW1          Use CCWs in CONTASK                  05220000
         TM    CONPARM,ALARM       Alarm with message??                 05230000
         BZ    EXITR1              no, just exit                        05240000
         OI    TRQBFLAG,CRTALRM    Flag screen alarm                    05250000
         OI    WRT77WCC,WCCALARM   Add alaarm bit to WCC                05260000
         B     EXITR1              and return to caller                 05270000
*                                                                       05280000
         POP   USING                                                    05290000
         SPACE 3                                                        05300000
*-------------------------------------------------------------          05310000
*        WRT Channel Program template                                   05320000
*-------------------------------------------------------------          05330000
         SPACE 1                                                        05340000
WRT77CP  DS    0D                                                       05350000
         CCW   CCWSEL,0,SILI+CC,1       Select                          05360000
         CCW   CCWWRT,*-*,SILI+CD,*-*   Write: WCC, etc heading         05370000
         CCW   0,*-*,SILI+CD,*-*        Write output data               05380000
         CCW   0,*-*,SILI,*-*           Write trailer                   05390000
WRT77CPL EQU   *-WRT77CP                                                05400000
         SPACE 1                                                        05410000
*-------------------------------------------------------------          05420000
*        WRT Data Stream template                                       05430000
*-------------------------------------------------------------          05440000
         SPACE 1                                                        05450000
WRT77DS  EQU   *                                                        05460000
WRT77WCC DC    AL1(WCCUNLK)   unlock keyboard                           05470000
         DC    AL1(SBA)                                                 05480000
WRT77AD1 DC    AL2(*-*)       line addr                                 05490000
WRT77LN1 EQU   *-WRT77DS      heading len (no hilite or line 0)         05500000
*                                                                       05510000
         DC    AL1(SF,FLDHIPRO) hilite not line 0                       05520000
WRT77LN2 EQU   *-WRT77DS      heading len (w/hilite not row 0)          05530000
*                                                                       05540000
*        then output data goes here                                     05550000
*                                                                       05560000
WRT77SF1 EQU   *              footer (hilite not row 0)                 05570000
         DC    AL1(SBA)                                                 05580000
WRT77AD2 DC    AL2(*-*)       line end addr                             05590000
         DC    AL1(SF,FLDPROT)                                          05600000
*                                                                       05610000
WRT77SF2 EQU   *                                                        05620000
         DC    AL1(SBA)                                                 05630000
WRT77AD3 DC    AL2(*-*)       Input area buffer address                 05640000
         DC    AL1(SF,FLDCHNG)                                          05650000
         DC    AL1(SBA)                                                 05660000
WRT77AD4 DC    AL2(*-*)       Status area buffer address                05670000
         DC    AL1(SF,FLDPROT)                                          05680000
         DC    CL9'RUNNING'                                             05690000
         DC    AL1(SF,FLDPROT)                                          05700000
WRT77SID DC    CL8'*-*'                                                 05710000
         DC    AL1(SF)        Output area attr                          05720000
WRT77ATT DC    AL1(*-*)       FLDPROT or HIPRO if hilite line 0         05730000
*                                                                       05740000
WRT77LN3 EQU   *-WRT77SF1     len of hilite not row 0                   05750000
WRT77LN4 EQU   *-WRT77SF2     others                                    05760000
*                                                                       05770000
WRT77DSL EQU   *-WRT77DS      total length for move                     05780000
         EJECT ,                                                        05790000
* +--------------------------------------------------------+            05800000
* |                                                        |            05810000
* |      C L R : Clear & format the whole screen           |            05820000
* |                                                        |            05830000
* |      Input:                                            |            05840000
* |      none                                              |            05850000
* |                                                        |            05860000
* |      0B (Select)                                       |            05870000
* |      01 (Write) WCC kbreset                            |            05880000
* |                 SBA 0,0                                |            05890000
* |                 RA  @inpt;0                            |            05900000
* |                 SF  unprotected, low, mdt              |            05910000
* |                 IC                                     |            05920000
* |                 SBA @stat                              |            05930000
* |                 SF  prot-low                           |            05940000
* |                 CL9'RUNNING'                           |            05950000
* |                 SF  prot-low                           |            05960000
* |                 CL8'sysid'                             |            05970000
* |                 SF  prot-low                           |            05980000
* |                                                        |            05990000
* |      note: Vanilla VM/370 does the RA in 480-byte      |            06000000
* |            chunks. The component description manuals   |            06010000
* |            only talk about that limitation for the     |            06020000
* |            remote terminals: 3275 and 3172 controller  |            06030000
* |                                                        |            06040000
* +--------------------------------------------------------+            06050000
         SPACE 1                                                        06060000
         PUSH  USING                                                    06070000
BLD77CLR DS    0H      Clear screen                                     06080000
         MVC   GRFCCW1(CLR77CPL),CLR77CP  Channel program               06090000
         MVC   GRFXBUFF(CLR77DSL),CLR77DS Data stream                   06100000
*                                                                       06110000
         LA    R1,CLR77DSL        Set data stream length                06120000
         STH   R1,GRFCCW2+6         into the write CCW                  06130000
         LA    R3,GRFXBUFF        Data stream goes here                 06140000
         STCM  R3,7,GRFCCW2+1     plug in CCW address                   06150000
*                                                                       06160000
         USING CLR77DS,R3         Fill in variables                     06170000
         SR    R1,R1              Set home addr                         06180000
         TM    RDEVGRIC,RDEVAD14  14-bit addressing                     06190000
         BO    CLRADDR1           yes, use addr as-is                   06200000
         CALL  DMKCVT12           no, convert to 12-bit                 06210000
CLRADDR1 DS    0H                                                       06220000
         STCM  R1,3,CLR77AD1      Set top-left buffer addr              06230000
         MVC   CLR77AD2,GRFX@INP  Set input area addr                   06240000
         MVC   CLR77AD3,GRFX@STA  Set status area addr                  06250000
         L     R14,=A(DMKSYSID)   Move in systemId                      06260000
         MVC   CLR77SID,0(R14)    ...                                   06270000
*                                                                       06280000
         MVI   GRFXATOA,FLDPROT   reset bottom right attr               06290000
*                                                                       06300000
         B     GOODEXIT           all set.. return to caller            06310000
         SPACE 1                                                        06320000
         POP   USING                                                    06330000
         SPACE 3                                                        06340000
*-------------------------------------------------------------          06350000
*        CLR Channel Program template                                   06360000
*-------------------------------------------------------------          06370000
         SPACE 1                                                        06380000
CLR77CP  DS    0D                                                       06390000
         CCW   CCWSEL,0,SILI+CC,1       Select                          06400000
         CCW   CCWWRT,*-*,SILI,*-*      Write: WCC, etc heading         06410000
CLR77CPL EQU   *-CLR77CP                                                06420000
         SPACE 1                                                        06430000
*-------------------------------------------------------------          06440000
*        CLR Data Stream template                                       06450000
*-------------------------------------------------------------          06460000
         SPACE 1                                                        06470000
CLR77DS  EQU   *                                                        06480000
         DC    AL1(WCCUNLK)   unlock keyboard                           06490000
         DC    AL1(SBA)                                                 06500000
CLR77AD1 DC    AL2(*-*)       0,0                                       06510000
         DC    AL1(RA)                                                  06520000
CLR77AD2 DC    AL2(*-*)       input area buffer address                 06530000
         DC    AL1(SF,FLDCHNG)                                          06540000
         DC    AL1(IC)                                                  06550000
         DC    AL1(SBA)                                                 06560000
CLR77AD3 DC    AL2(*-*)       Status area buffer address                06570000
         DC    AL1(SF,FLDPROT)                                          06580000
         DC    CL9'RUNNING'                                             06590000
         DC    AL1(SF,FLDPROT)                                          06600000
CLR77SID DC    CL8'*-*'                                                 06610000
         DC    AL1(SF,FLDPROT) Bottom-right (OutArea) attr              06620000
*                                                                       06630000
CLR77DSL EQU   *-CLR77DS      data stream length                        06640000
         EJECT ,                                                        06650000
* +--------------------------------------------------------+            06660000
* |                                                        |            06670000
* |      C L S : Clear screen with Erase Write             |            06680000
* |                                                        |            06690000
* |      Input:                                            |            06700000
* |      none                                              |            06710000
* |                                                        |            06720000
* |      05/0D (EW) WCC kbreset                            |            06730000
* |                 SBA @inpt                              |            06740000
* |                 SF  unprot+hidden+mdt                  |            06750000
* |                 IC                                     |            06760000
* |                 EUA @stat                              |            06770000
* |                 SBA @inpt                              |            06780000
* |                 SF  unprot+low+mdt                     |            06790000
* |                 SBA @stat                              |            06800000
* |                 SF  prot-low                           |            06810000
* |                 CL9'RUNNING'                           |            06820000
* |                 SF  prot-low                           |            06830000
* |                 CL8'sysid'                             |            06840000
* |                 SF  prot-low                           |            06850000
* |                                                        |            06860000
* +--------------------------------------------------------+            06870000
         SPACE 1                                                        06880000
         PUSH  USING                                                    06890000
BLD77CLS DS    0H      Clear screen                                     06900000
         MVC   GRFCCW1(CLS77CPL),CLS77CP  Channel program               06910000
         MVC   GRFXBUFF(CLS77DSL),CLS77DS Data stream                   06920000
*                                                                       06930000
         MVC   GRFCCW1(1),GRFXERAS Seet EW/EWA CCW opcode               06940000
*                                                                       06950000
         LA    R1,CLS77DSL        Set data stream length                06960000
         STH   R1,GRFCCW1+6         into the write CCW                  06970000
         LA    R3,GRFXBUFF        Data stream goes here                 06980000
         STCM  R3,7,GRFCCW1+1     plug in CCW address                   06990000
*                                                                       07000000
         USING CLS77DS,R3         Fill in variables                     07010000
         MVC   CLS77AD1,GRFX@INP  Set input area addr                   07020000
         MVC   CLS77AD2,GRFX@STA  Set status area addr                  07030000
         MVC   CLS77AD3,GRFX@INP  Set input area addr                   07040000
         MVC   CLS77AD4,GRFX@STA  Set status area addr                  07050000
         L     R14,=A(DMKSYSID)   Move in systemId                      07060000
         MVC   CLS77SID,0(R14)    ...                                   07070000
*                                                                       07080000
         MVI   GRFXATOA,FLDPROT   reset bottom right attr               07090000
*                                                                       07100000
         B     GOODEXIT           all set.. return to caller            07110000
         SPACE 1                                                        07120000
         POP   USING                                                    07130000
         SPACE 3                                                        07140000
*-------------------------------------------------------------          07150000
*        CLS Channel Program template                                   07160000
*-------------------------------------------------------------          07170000
         SPACE 1                                                        07180000
CLS77CP  DS    0D                                                       07190000
         CCW   *-*,*-*,SILI,*-*   Erase Write (Alternate)               07200000
CLS77CPL EQU   *-CLS77CP                                                07210000
         SPACE 1                                                        07220000
*-------------------------------------------------------------          07230000
*        CLS Data Stream template                                       07240000
*-------------------------------------------------------------          07250000
         SPACE 1                                                        07260000
CLS77DS  EQU   *                                                        07270000
         DC    AL1(WCCUNLK)                                             07280000
         DC    AL1(SBA)                                                 07290000
CLS77AD1 DC    AL2(*-*)       input area buffer addr                    07300000
         DC    AL1(SF,FLDHIDMT)                                         07310000
         DC    AL1(IC)                                                  07320000
         DC    AL1(EUA)                                                 07330000
CLS77AD2 DC    AL2(*-*)       status area buffer address                07340000
         DC    AL1(SBA)                                                 07350000
CLS77AD3 DC    AL2(*-*)       input area buffer address                 07360000
         DC    AL1(SF,FLDCHNG)                                          07370000
         DC    AL1(SBA)                                                 07380000
CLS77AD4 DC    AL2(*-*)       status area buffer address                07390000
         DC    AL1(SF,FLDPROT)                                          07400000
         DC    CL9'RUNNING'                                             07410000
         DC    AL1(SF,FLDPROT)                                          07420000
CLS77SID DC    CL8'*-*'                                                 07430000
         DC    AL1(SF,FLDPROT) Bottom-right (OutArea) attr              07440000
*                                                                       07450000
CLS77DSL EQU   *-CLS77DS      data stream length                        07460000
         EJECT ,                                                        07470000
* +--------------------------------------------------------+            07480000
* |                                                        |            07490000
* |      C R D : Clear the input area                      |            07500000
* |                                                        |            07510000
* |      Input:                                            |            07520000
* |      none                                              |            07530000
* |                                                        |            07540000
* |      0B (Select)                                       |            07550000
* |      01 (Write) WCC kbreset                            |            07560000
* |                 SBA @inpt                              |            07570000
* |                 SF  unprot+hidden+mdt                  |            07580000
* |                 IC                                     |            07590000
* |                 EUA @stat                              |            07600000
* |                 SBA @inpt                              |            07610000
* |                 SF  unprot+low+mdt                     |            07620000
* |                 SBA @stat                              |            07630000
* |                 SF  prot-low                           |            07640000
* |                 CL9'RUNNING'                           |            07650000
* |                 SF  prot-low                           |            07660000
* |                 CL8'sysid'                             |            07670000
* |                 SF  OutArea-attr                       |            07680000
* |                                                        |            07690000
* +--------------------------------------------------------+            07700000
         SPACE 1                                                        07710000
         PUSH  USING                                                    07720000
BLD77CRD DS    0H      Clear screen                                     07730000
         MVC   GRFCCW1(CRD77CPL),CRD77CP  Channel program               07740000
         MVC   GRFXBUFF(CRD77DSL),CRD77DS Data stream                   07750000
*                                                                       07760000
         LA    R1,CRD77DSL        Set data stream length                07770000
         STH   R1,GRFCCW2+6         into the write CCW                  07780000
         LA    R3,GRFXBUFF        Data stream goes here                 07790000
         STCM  R3,7,GRFCCW2+1     plug in CCW address                   07800000
*                                                                       07810000
         USING CRD77DS,R3         Fill in variables                     07820000
         MVC   CRD77AD1,GRFX@INP  Set input area addr                   07830000
         MVC   CRD77AD2,GRFX@STA  Set status area addr                  07840000
         MVC   CRD77AD3,GRFX@INP  Set input area addr                   07850000
         MVC   CRD77AD4,GRFX@STA  Set status area addr                  07860000
         L     R14,=A(DMKSYSID)   Move in systemId                      07870000
         MVC   CRD77SID,0(R14)    ...                                   07880000
         MVC   CRD77ATT,GRFXATOA  Set lower right attr                  07890000
*                                                                       07900000
         B     GOODEXIT           all set.. return to caller            07910000
         SPACE 1                                                        07920000
         POP   USING                                                    07930000
         SPACE 3                                                        07940000
*-------------------------------------------------------------          07950000
*        CRD Channel Program template                                   07960000
*-------------------------------------------------------------          07970000
         SPACE 1                                                        07980000
CRD77CP  DS    0D                                                       07990000
         CCW   CCWSEL,0,SILI+CC,1       Select                          08000000
         CCW   CCWWRT,*-*,SILI,*-*      Write: WCC, etc heading         08010000
CRD77CPL EQU   *-CRD77CP                                                08020000
         SPACE 1                                                        08030000
*-------------------------------------------------------------          08040000
*        CRD Data Stream template                                       08050000
*-------------------------------------------------------------          08060000
         SPACE 1                                                        08070000
CRD77DS  EQU   *                                                        08080000
         DC    AL1(WCCUNLK)                                             08090000
         DC    AL1(SBA)                                                 08100000
CRD77AD1 DC    AL2(*-*)       input area buffer addr                    08110000
         DC    AL1(SF,FLDHIDMT)                                         08120000
         DC    AL1(IC)                                                  08130000
         DC    AL1(EUA)                                                 08140000
CRD77AD2 DC    AL2(*-*)       status area buffer address                08150000
         DC    AL1(SBA)                                                 08160000
CRD77AD3 DC    AL2(*-*)       input area buffer address                 08170000
         DC    AL1(SF,FLDCHNG)                                          08180000
         DC    AL1(SBA)                                                 08190000
CRD77AD4 DC    AL2(*-*)       status area buffer address                08200000
         DC    AL1(SF,FLDPROT)                                          08210000
         DC    CL9'RUNNING'                                             08220000
         DC    AL1(SF,FLDPROT)                                          08230000
CRD77SID DC    CL8'*-*'                                                 08240000
         DC    AL1(SF)        Output area attr                          08250000
CRD77ATT DC    AL1(*-*)       FLDPROT or HIPRO if hilite line 0         08260000
*                                                                       08270000
CRD77DSL EQU   *-CRD77DS      data stream length                        08280000
         EJECT ,                                                        08290000
* +--------------------------------------------------------+            08300000
* |                                                        |            08310000
* |      M R D : Clear input area when in MORE or HOLDING  |            08320000
* |                                                        |            08330000
* |      Input:                                            |            08340000
* |      none                                              |            08350000
* |                                                        |            08360000
* |      0B (Select)                                       |            08370000
* |      01 (Write) WCC kbreset                            |            08380000
* |                 SBA @inpt                              |            08390000
* |                 SF  unprot+hidden+mdt                  |            08400000
* |                 IC                                     |            08410000
* |                 EUA @stat                              |            08420000
* |                 SBA @inpt                              |            08430000
* |                 SF  unprot+low+mdt                     |            08440000
* |                                                        |            08450000
* +--------------------------------------------------------+            08460000
         SPACE 1                                                        08470000
         PUSH  USING                                                    08480000
BLD77MRD DS    0H      Clear screen                                     08490000
         MVC   GRFCCW1(MRD77CPL),MRD77CP  Channel program               08500000
         MVC   GRFXBUFF(MRD77DSL),MRD77DS Data stream                   08510000
*                                                                       08520000
         LA    R1,MRD77DSL        Set data stream length                08530000
         STH   R1,GRFCCW2+6         into the write CCW                  08540000
         LA    R3,GRFXBUFF        Data stream goes here                 08550000
         STCM  R3,7,GRFCCW2+1     plug in CCW address                   08560000
*                                                                       08570000
         USING MRD77DS,R3         Fill in variables                     08580000
         MVC   MRD77AD1,GRFX@INP  Set input area addr                   08590000
         MVC   MRD77AD2,GRFX@STA  Set status area addr                  08600000
         MVC   MRD77AD3,GRFX@INP  Set input area addr                   08610000
*                                                                       08620000
         B     GOODEXIT           all set.. return to caller            08630000
         SPACE 1                                                        08640000
         POP   USING                                                    08650000
         SPACE 3                                                        08660000
*-------------------------------------------------------------          08670000
*        MRD Channel Program template                                   08680000
*-------------------------------------------------------------          08690000
         SPACE 1                                                        08700000
MRD77CP  DS    0D                                                       08710000
         CCW   CCWSEL,0,SILI+CC,1       Select                          08720000
         CCW   CCWWRT,*-*,SILI,*-*      Write: WCC, etc heading         08730000
MRD77CPL EQU   *-MRD77CP                                                08740000
         SPACE 1                                                        08750000
*-------------------------------------------------------------          08760000
*        MRD Data Stream template                                       08770000
*-------------------------------------------------------------          08780000
         SPACE 1                                                        08790000
MRD77DS  EQU   *                                                        08800000
         DC    AL1(WCCUNLK)                                             08810000
         DC    AL1(SBA)                                                 08820000
MRD77AD1 DC    AL2(*-*)       input area buffer addr                    08830000
         DC    AL1(SF,FLDHIDMT)                                         08840000
         DC    AL1(IC)                                                  08850000
         DC    AL1(EUA)                                                 08860000
MRD77AD2 DC    AL2(*-*)       status area buffer address                08870000
         DC    AL1(SBA)                                                 08880000
MRD77AD3 DC    AL2(*-*)       input area buffer address                 08890000
         DC    AL1(SF,FLDCHNG)                                          08900000
*                                                                       08910000
MRD77DSL EQU   *-MRD77DS      data stream length                        08920000
         EJECT ,                                                        08930000
* +--------------------------------------------------------+            08940000
* |                                                        |            08950000
* |      I D S : Write to input area                       |            08960000
* |                                                        |            08970000
* |      Input:                                            |            08980000
* |      R3:   length of data to display                   |            08990000
* |      R4:   address of data to display                  |            09000000
* |                                                        |            09010000
* |      0B (Select)                                       |            09020000
* |      01 (Write)  WCC kbreset                           |            09030000
* |                  SBA @inpt                             |            09040000
* |                  EUA @stat                             |            09050000
* |                  SBA @inpt                             |            09060000
* |                  SF  attr7                             |            09070000
* |                  IC                                    |            09080000
* |                                                        |            09090000
* |      00 data chained for caller's data                 |            09100000
* |                                                        |            09110000
* +--------------------------------------------------------+            09120000
         SPACE 1                                                        09130000
         PUSH  USING                                                    09140000
BLD77IDS DS    0H      Write to input area                              09150000
         MVC   GRFCCW1(IDS77CPL),IDS77CP  Channel program               09160000
         MVC   GRFXBUFF(IDS77DSL),IDS77DS Data stream                   09170000
*                                                                       09180000
         STCM  R4,7,GRFCCW3+1     Set caller's data address             09190000
         STH   R3,GRFCCW3+6          and length                         09200000
*                                                                       09210000
         LA    R1,IDS77DSL        Set data stream length                09220000
         STH   R1,GRFCCW2+6         into the write CCW                  09230000
         LA    R3,GRFXBUFF        Data stream goes here                 09240000
         STCM  R3,7,GRFCCW2+1     plug in CCW address                   09250000
*                                                                       09260000
         USING IDS77DS,R3         Fill in variables                     09270000
         MVC   IDS77AD1,GRFX@INP  Set input area addr                   09280000
         MVC   IDS77AD2,GRFX@STA  Set status area addr                  09290000
         MVC   IDS77AD3,GRFX@INP  Set input area addr                   09300000
*                                                                       09310000
         B     GOODEXIT           all set.. return to caller            09320000
         SPACE 1                                                        09330000
         POP   USING                                                    09340000
         SPACE 3                                                        09350000
*-------------------------------------------------------------          09360000
*        IDS Channel Program template                                   09370000
*-------------------------------------------------------------          09380000
         SPACE 1                                                        09390000
IDS77CP  DS    0D                                                       09400000
         CCW   CCWSEL,0,SILI+CC,1       Select                          09410000
         CCW   CCWWRT,*-*,SILI+CD,*-*   Write: WCC, etc heading         09420000
         CCW   0,*-*,SILI,*-*           write caller's data             09430000
IDS77CPL EQU   *-IDS77CP                                                09440000
         SPACE 1                                                        09450000
*-------------------------------------------------------------          09460000
*        IDS Data Stream template                                       09470000
*-------------------------------------------------------------          09480000
         SPACE 1                                                        09490000
IDS77DS  EQU   *                                                        09500000
         DC    AL1(WCCUNLK)                                             09510000
         DC    AL1(SBA)                                                 09520000
IDS77AD1 DC    AL2(*-*)       input area buffer addr                    09530000
         DC    AL1(EUA)                                                 09540000
IDS77AD2 DC    AL2(*-*)       status area buffer address                09550000
         DC    AL1(SBA)                                                 09560000
IDS77AD3 DC    AL2(*-*)       input area buffer address                 09570000
         DC    AL1(SF,FLDCHNG)                                          09580000
         DC    AL1(IC)                                                  09590000
*                                                                       09600000
IDS77DSL EQU   *-IDS77DS      data stream length                        09610000
         EJECT ,                                                        09620000
* +--------------------------------------------------------+            09630000
* |                                                        |            09640000
* |      T A B : Insert tab character & move cursor        |            09650000
* |                                                        |            09660000
* |      Input:                                            |            09670000
* |      R0  = Length of TAB set list                      |            09680000
* |      R1  = address of TAB set list                     |            09690000
* |      R3  = current input BUFFER                        |            09700000
* |                                                        |            09710000
* |      0B (Select)                                       |            09720000
* |      01 (Write) WCC                                    |            09730000
* |                 SBA @inpt                              |            09740000
* |      06 (RM)    buffer                                 |            09750000
* |                                                        |            09760000
* +--------------------------------------------------------+            09770000
         SPACE 1                                                        09780000
         PUSH  USING                                                    09790000
BLD77TAB DS    0H      Insert a logical tab & move cursor               09800000
         USING BUFFER,R3          Need access to current input          09810000
         SPACE 1                                                        09820000
         LR    R4,R0              Save input parms                      09830000
         LR    R5,R1              ...                                   09840000
*                                                                       09850000
*        Initialize resulting channel program                           09860000
*                                                                       09870000
         MVC   GRFCCW1(TAB77CPL),TAB77CP  Channel program               09880000
         MVC   GRFXBUFF(TAB77DSL),TAB77DS Data stream                   09890000
*                                                                       09900000
         LA    R1,TAB77DSL        Set data stream length                09910000
         STH   R1,GRFCCW2+6         into the write CCW                  09920000
         LA    R2,GRFXBUFF        Data stream goes here                 09930000
         STCM  R2,7,GRFCCW2+1     plug in CCW address                   09940000
*                                                                       09950000
         USING TAB77DS,R2         Fill in variables                     09960000
*                                                                       09970000
*        Get current relative column number                             09980000
*                                                                       09990000
         SR    R1,R1                                                    10000000
         ICM   R1,3,BUFCSR        Get current cursor address            10010000
         CALL  DMKCVT14           ...                                   10020000
         SH    R1,GRFXORGI        R1 = current 0-based column           10030000
         LR    R7,R1              (keep in R7)                          10040000
*                                                                       10050000
*        Scan TAB sets to find target column                            10060000
*                                                                       10070000
         LTR   R4,R4              Are there any                         10080000
         BNP   TABEGIN            No, put cursor at start               10090000
*                                                                       10100000
TABSCAN  DS    0H                                                       10110000
         CLM   R7,1,0(R5)         Is this the place to tab to?          10120000
         BL    TABHIGH            Yes if current column is lower        10130000
         LA    R5,1(,R5)          Bump to next tab stop                 10140000
         BCT   R4,TABSCAN         Scan all the tab stops                10150000
*                                                                       10160000
TABEGIN  DS    0H                                                       10170000
         SR    R7,R7              Put cursor back at the start          10180000
*                                                                       10190000
*        No logical tab needed.. Just the IC                            10200000
*                                                                       10210000
TABONE   DS    0H                                                       10220000
         LA    R1,TAB77LN1        Set length w/o logical tab            10230000
         STH   R1,GRFCCW2+6       ...                                   10240000
*                                                                       10250000
TABTWO   DS    0H             Both logical tab and IC needed            10260000
         BAL   R6,TABADDR         Convert & store buffer address        10270000
         MVI   TAB77TAB,IC        and add Insert Cursor order           10280000
*                                                                       10290000
         B     GOODEXIT                                                 10300000
*                                                                       10310000
*        Figure out where to place the logical tab                      10320000
*                                                                       10330000
TABHIGH  DS    0H                                                       10340000
         IC    R7,0(,R5)          Get target tab stop column            10350000
         L     R5,SAVER1          Restore ptr to tab stops              10360000
         LA    R4,BUFDATA         And ptr to the current input          10370000
         SLR   R3,R3              Init ctr for logical tab loc          10380000
         IC    R6,VMGRFTAB        Get user's logical tab char           10390000
*                                                                       10400000
TABLOOP  DS    0H                                                       10410000
         CLI   0(R4),0            Have we hit the end of data?          10420000
         BE    TABCHAR            Yes, put logical tab here             10430000
         CLM   R6,1,0(R4)         Previous logical tab here?            10440000
         BE    TABUPDT            Yes, must update tab location         10450000
         LA    R3,1(,R3)          Bump logical tab location             10460000
         CLM   R3,1,0(R5)         Is this also a tab stop?              10470000
         BL    TABDATA            If not, just keep checking            10480000
         LA    R5,1(,R5)          Point to next tab stop                10490000
TABDATA  DS    0H                                                       10500000
         LA    R4,1(,R4)          Bump to next input character          10510000
         CR    R3,R7              Reached the target tab stop?          10520000
         BL    TABLOOP            No, leep looking at input             10530000
         B     TABONE             Yes, no need for logical tab          10540000
*                                                                       10550000
TABUPDT  DS    0H                                                       10560000
         IC    R3,0(,R5)          Bump logical tab location             10570000
         LA    R5,1(,R5)          Point to next tab stop                10580000
         B     TABDATA            and keep checking the input data      10590000
*                                                                       10600000
TABCHAR  DS    0H                                                       10610000
         LR    R5,R7              Save cursor target location           10620000
         LR    R7,R3              Get logical tab location              10630000
         STC   R6,TAB77TAB        Put logical tab in data stream        10640000
         BAL   R6,TABADDR         Convert R7 addr & put in data stream  10650000
         LA    R2,TAB77DSP(,R2)   Bump data stream pointer for IC       10660000
         LR    R7,R5              Restore new cursor target address     10670000
         B     TABTWO             and go ad the IC to the data stream   10680000
         SPACE 2                                                        10690000
*                                                                       10700000
*        Little subroutine to convert & store buffer address            10710000
*                                                                       10720000
TABADDR  DS    0H                                                       10730000
         AH    R7,GRFXORGI        Add back the input area origin        10740000
         LR    R1,R7              pass it in R1                         10750000
         TM    RDEVGRIC,RDEVAD14  14-bit addressing                     10760000
         BO    TABADDR1           yes, use addr as-is                   10770000
         CALL  DMKCVT12           no, convert to 12-bit                 10780000
TABADDR1 DS    0H                                                       10790000
         STCM  R1,3,3(R2)         Put result in data stream             10800000
         BR    R6                 Return to caller                      10810000
         SPACE 1                                                        10820000
         POP   USING                                                    10830000
         SPACE 3                                                        10840000
*-------------------------------------------------------------          10850000
*        TAB Channel Program template                                   10860000
*-------------------------------------------------------------          10870000
         SPACE 1                                                        10880000
TAB77CP  DS    0D                                                       10890000
         CCW   CCWSEL,0,SILI+CC,1       Select                          10900000
         CCW   CCWWRT,*-*,SILI,*-*      Write: WCC, etc heading         10910000
TAB77CPL EQU   *-TAB77CP                                                10920000
         SPACE 1                                                        10930000
*-------------------------------------------------------------          10940000
*        TAB Data Stream template                                       10950000
*-------------------------------------------------------------          10960000
         SPACE 1                                                        10970000
TAB77DS  EQU   *                                                        10980000
         DC    AL1(WCCUNLK)                                             10990000
         DC    AL1(SBA)                                                 11000000
TAB77AD1 DC    AL2(*-*)       where to put logical tab                  11010000
TAB77TAB DC    AL1(*-*)       logical tab char (or IC)                  11020000
*                                                                       11030000
TAB77LN1 EQU   *-TAB77DS      length w/o logical tab                    11040000
*                                                                       11050000
         DC    AL1(SBA)                                                 11060000
TAB77AD2 DC    AL2(*-*)       target column                             11070000
         DC    AL1(IC)                                                  11080000
*                                                                       11090000
TAB77DSP EQU   TAB77AD2-TAB77AD1 2nd SBA displacement                   11100000
*                                                                       11110000
TAB77DSL EQU   *-TAB77DS      data stream length                        11120000
         EJECT ,                                                        11130000
* +--------------------------------------------------------+            11140000
* |                                                        |            11150000
* |      H L D : Set status area to HOLDING                |            11160000
* |      M O R : Set status area to MORE...                |            11170000
* |      N A C : Set status area to NOT ACCEPTED           |            11180000
* |                                                        |            11190000
* |      Input:                                            |            11200000
* |      none                                              |            11210000
* |                                                        |            11220000
* |      0B    (Select)                                    |            11230000
* |      01    (Write) WCC krreset+alarm                   |            11240000
* |                    SBA @stat                           |            11250000
* |                    SF prot-low                         |            11260000
* |                    CL9'HOLDING' or MORE... or ...      |            11270000
* |                    SF prot-low                         |            11280000
* |                    CL8'sysid'                          |            11290000
* |                    SF prot-low   s/b last screen cell  |            11300000
* |                                                        |            11310000
* +--------------------------------------------------------+            11320000
         SPACE 1                                                        11330000
         PUSH  USING                                                    11340000
BLD77HLD DS    0H                                                       11350000
         LA    R5,HLD77OPT    Display options + status                  11360000
         B     BLDSTAT        Join common                               11370000
         SPACE 1                                                        11380000
HLD77OPT EQU   *                                                        11390000
         DC    AL1(WCCUNLK,FLDHIPRO,FLDPROT)                            11400000
         DC    CL9'HOLDING'                                             11410000
         SPACE 2                                                        11420000
BLD77MOR DS    0H                                                       11430000
         LA    R5,MOR77OPT    Display options + status                  11440000
         B     BLDSTAT        Join common                               11450000
         SPACE 1                                                        11460000
MOR77OPT EQU   *                                                        11470000
         DC    AL1(WCCUNLK,FLDHIPRO,FLDPROT)                            11480000
         DC    CL9'MORE...'                                             11490000
         SPACE 2                                                        11500000
BLD77NAC DS    0H                                                       11510000
         LA    R5,NAC77OPT    Display options + status                  11520000
         B     BLDSTAT        Join common                               11530000
         SPACE 1                                                        11540000
NAC77OPT EQU   *                                                        11550000
         DC    AL1(WCCBEEP,FLDHIPRO,0)                                  11560000
         DC    CL18'NOT ACCEPTED'                                       11570000
         SPACE 3                                                        11580000
STATOPT  DSECT ,                                                        11590000
STATWCC  DS    XL1                                                      11600000
STATATT1 DS    XL1                                                      11610000
STATATT2 DS    XL1                                                      11620000
STATMSG  DS    0C                                                       11630000
         SPACE 1                                                        11640000
HDKGRC   CSECT ,                                                        11650000
* +---------------------------------------------------------            11660000
* +      Common status area update channel program                      11670000
* +---------------------------------------------------------            11680000
         SPACE 1                                                        11690000
BLDSTAT  DS    0H                                                       11700000
         USING STATOPT,R5         Address the options                   11710000
         MVC   GRFCCW1(STA77CPL),STA77CP  Channel program               11720000
         MVC   GRFXBUFF(STA77DSL),STA77DS Data stream                   11730000
*                                                                       11740000
         LA    R1,STA77DSL        Set data stream length                11750000
         STH   R1,GRFCCW2+6         into the write CCW                  11760000
         LA    R1,GRFXBUFF        Data stream goes here                 11770000
         STCM  R1,7,GRFCCW2+1     plug in CCW address                   11780000
*                                                                       11790000
         USING STA77DS,R1         Fill in variables                     11800000
         MVC   STA77WCC,STATWCC   Set WCC from options                  11810000
         MVC   STA77SBA,GRFX@STA  ... status area buffer addr           11820000
         MVC   STA77AT1,STATATT1  ... status area attribute             11830000
*                                                                       11840000
         CLI   STATATT2,0         long status?                          11850000
         BNE   STASTD             ..NO                                  11860000
         MVC   STA77LMS,STATMSG   ..yes...move it                       11870000
         MVI   STA77SF4,SF        Set ending attribute                  11880000
         MVC   STA77AT4,GRFXATOA  .. maybe hilite row 0?                11890000
*                                                                       11900000
         LA    R0,STA77LML        Set correct length                    11910000
         STH   R0,GRFCCW2+6       ...                                   11920000
         B     GOODEXIT           and return to caller                  11930000
*                                                                       11940000
STASTD   DS    0H                                                       11950000
         MVC   STA77SMS,STATMSG   Set status                            11960000
         MVI   STA77SF2,SF        SysId attr                            11970000
         MVC   STA77AT2,STATATT2  as per options                        11980000
         L     R14,=A(DMKSYSID)   Move in systemId                      11990000
         MVC   STA77SID,0(R14)    ...                                   12000000
         MVI   STA77SF3,SF        Set ending attribute                  12010000
         MVC   STA77AT3,GRFXATOA  .. maybe hilite row 0?                12020000
*                                                                       12030000
         LA    R0,STA77SML        Set correct length                    12040000
         STH   R0,GRFCCW2+6       ...                                   12050000
         B     GOODEXIT           and return to caller                  12060000
         SPACE 1                                                        12070000
         POP   USING                                                    12080000
         SPACE 3                                                        12090000
*-------------------------------------------------------------          12100000
*        Status update Channel Program template                         12110000
*-------------------------------------------------------------          12120000
         SPACE 1                                                        12130000
STA77CP  DS    0D                                                       12140000
         CCW   CCWSEL,0,SILI+CC,1       Select                          12150000
         CCW   CCWWRT,*-*,SILI,*-*      Write: WCC, etc                 12160000
STA77CPL EQU   *-STA77CP                                                12170000
         SPACE 1                                                        12180000
*-------------------------------------------------------------          12190000
*        Status update Data Stream template                             12200000
*-------------------------------------------------------------          12210000
         SPACE 1                                                        12220000
STA77DS  EQU   *                                                        12230000
STA77WCC DC    AL1(*-*)       WCC depends on options                    12240000
         DC    AL1(SBA)                                                 12250000
STA77SBA DC    AL2(*-*)       Status Area buffer address                12260000
         DC    AL1(SF)                                                  12270000
STA77AT1 DC    AL1(*-*)       Attribute from options                    12280000
*                                                                       12290000
STA77STA EQU   *              Variable based on option                  12300000
*                                                                       12310000
STA77SMS DC    CL9'*-*'       Short status                              12320000
STA77SF2 DC    AL1(SF)                                                  12330000
STA77AT2 DC    AL1(*-*)       SysId attr                                12340000
STA77SID DC    CL8'*-*'                                                 12350000
STA77SF3 DC    AL1(SF)        Output area attr                          12360000
STA77AT3 DC    AL1(*-*)                                                 12370000
STA77SML EQU   *-STA77DS                                                12380000
*                                                                       12390000
         ORG   STA77STA       Redefine for long status                  12400000
STA77LMS DC    CL18'*-*'      long status                               12410000
STA77SF4 DC    AL1(SF)        Output area attr                          12420000
STA77AT4 DC    AL1(*-*)                                                 12430000
STA77LML EQU   *-STA77DS                                                12440000
         ORG   ,                                                        12450000
STA77DSL EQU   *-STA77DS                                                12460000
         EJECT ,                                                        12470000
* +--------------------------------------------------------+            12480000
* |                                                        |            12490000
* |      R U N : Set status area to RUNNING                |            12500000
* |                                                        |            12510000
* |      Input:                                            |            12520000
* |      none                                              |            12530000
* |                                                        |            12540000
* |      0B    (Select)                                    |            12550000
* |      01    (Write) WCC krreset+clear MDTs              |            12560000
* |                    SBA @inpt                           |            12570000
* |                    SF prot-low+MDT                     |            12580000
* |                    SBA @stat                           |            12590000
* |                    SF prot-low                         |            12600000
* |                    CL9'RUNNING'                        |            12610000
* |                    SF prot-low                         |            12620000
* |                    CL8'sysid'                          |            12630000
* |                    SF prot-low   s/b last screen cell  |            12640000
* |                                                        |            12650000
* +--------------------------------------------------------+            12660000
         SPACE 1                                                        12670000
         PUSH  USING                                                    12680000
BLD77RUN DS    0H                                                       12690000
         MVC   GRFCCW1(RUN77CPL),RUN77CP  Channel program               12700000
         MVC   GRFXBUFF(RUN77DSL),RUN77DS Data stream                   12710000
*                                                                       12720000
         LA    R1,RUN77DSL        Set data stream length                12730000
         STH   R1,GRFCCW2+6         into the write CCW                  12740000
         LA    R1,GRFXBUFF        Data stream goes here                 12750000
         STCM  R1,7,GRFCCW2+1     plug in CCW address                   12760000
*                                                                       12770000
         USING RUN77DS,R1         Fill in variables                     12780000
         MVC   RUN77AD1,GRFX@INP  ... input area buffer addr            12790000
         MVC   RUN77AD2,GRFX@STA  ... status area buffer addr           12800000
         L     R14,=A(DMKSYSID)   Move in systemId                      12810000
         MVC   RUN77SID,0(R14)    ...                                   12820000
         MVC   RUN77ATT,GRFXATOA  .. maybe hilite row 0?                12830000
*                                                                       12840000
         B     GOODEXIT           and return to caller                  12850000
         SPACE 1                                                        12860000
         POP   USING                                                    12870000
         SPACE 3                                                        12880000
*-------------------------------------------------------------          12890000
*        RUNNUNG status Channel Program template                        12900000
*-------------------------------------------------------------          12910000
         SPACE 1                                                        12920000
RUN77CP  DS    0D                                                       12930000
         CCW   CCWSEL,0,SILI+CC,1       Select                          12940000
         CCW   CCWWRT,*-*,SILI,*-*      Write: WCC, etc                 12950000
RUN77CPL EQU   *-RUN77CP                                                12960000
         SPACE 1                                                        12970000
*-------------------------------------------------------------          12980000
*        RUNNUNG status Data Stream template                            12990000
*-------------------------------------------------------------          13000000
         SPACE 1                                                        13010000
RUN77DS  EQU   *                                                        13020000
         DC    AL1(WCCNMDT)   Reset kbd and clear MDTs                  13030000
         DC    AL1(SBA)                                                 13040000
RUN77AD1 DC    AL2(*-*)       Input area buffer address                 13050000
         DC    AL1(SF)                                                  13060000
         DC    AL1(FLDCHNG)   Unprotected, low, mdt                     13070000
         DC    AL1(SBA)                                                 13080000
RUN77AD2 DC    AL2(*-*)       Status area buffer address                13090000
         DC    AL1(SF,FLDPROT)                                          13100000
         DC    CL9'RUNNING'                                             13110000
         DC    AL1(SF,FLDPROT) Sysid attr                               13120000
RUN77SID DC    CL8'*-*'                                                 13130000
         DC    AL1(SF)                                                  13140000
RUN77ATT DC    AL1(*-*)       Hilite for row 0                          13150000
RUN77DSL EQU   *-RUN77DS                                                13160000
         EJECT ,                                                        13170000
* +--------------------------------------------------------+            13180000
* |                                                        |            13190000
* |      V M R : Set status area to VM READ                |            13200000
* |      V M P : Set status area to VM READ (w/inhibit)    |            13210000
* |      C P R : Set status area to CP READ                |            13220000
* |      C P P : Set status area to CP READ (w/inhibit)    |            13230000
* |                                                        |            13240000
* |      Input:                                            |            13250000
* |      none                                              |            13260000
* |                                                        |            13270000
* |      0B    (Select)                                    |            13280000
* |      01    (Write) WCC krreset+clear MDTs              |            13290000
* |                    SBA @inpt                           |            13300000
* |                    SF not-prot+MDT  or hidden+MDT      |            13310000
* |                    SBA @stat                           |            13320000
* |                    SF prot-high                        |            13330000
* |                    CL9'xx READ                         |            13340000
* |                    SF prot-low                         |            13350000
* |                    CL8'sysid'                          |            13360000
* |                    SF prot-low   s/b last screen cell  |            13370000
* |                                                        |            13380000
* +--------------------------------------------------------+            13390000
         SPACE 1                                                        13400000
         PUSH  USING                                                    13410000
BLD77VMR DS    0H                                                       13420000
         LA    R0,FLDCHNG         Input area attribute                  13430000
         B     BLD77VMX           join common code                      13440000
         SPACE 1                                                        13450000
BLD77VMP DS    0H                                                       13460000
         LA    R0,FLDHIDMT        Hide input area                       13470000
BLD77VMX DS    0H                                                       13480000
         LA    R2,=CL9'VM READ'   Status area value                     13490000
         B     BLDREAD            join common code                      13500000
         SPACE 1                                                        13510000
BLD77CPR DS    0H                                                       13520000
         LA    R0,FLDCHNG         Input area attribute                  13530000
         B     BLD77CPX           join common code                      13540000
         SPACE 1                                                        13550000
BLD77CPP DS    0H                                                       13560000
         LA    R0,FLDHIDMT        Hide input area                       13570000
BLD77CPX DS    0H                                                       13580000
         LA    R2,=CL9'CP READ'   Status area value                     13590000
*        B     BLDREAD            join common code                      13600000
         SPACE 2                                                        13610000
* +---------------------------------------------------------            13620000
* +      Common VM/CP READ status area logic                            13630000
* +---------------------------------------------------------            13640000
         SPACE 1                                                        13650000
BLDREAD  DS    0H                                                       13660000
         MVC   GRFCCW1(RDR77CPL),RDR77CP  Channel program               13670000
         MVC   GRFXBUFF(RDR77DSL),RDR77DS Data stream                   13680000
*                                                                       13690000
         LA    R1,RDR77DSL        Set data stream length                13700000
         STH   R1,GRFCCW2+6         into the write CCW                  13710000
         LA    R1,GRFXBUFF        Data stream goes here                 13720000
         STCM  R1,7,GRFCCW2+1     plug in CCW address                   13730000
*                                                                       13740000
         USING RDR77DS,R1         Fill in variables                     13750000
         MVC   RDR77AD1,GRFX@INP  ... input area buffer addr            13760000
         STC   R0,RDR77ATT        ... input area attribute              13770000
*                                                                       13780000
         MVC   RDR77AD2,GRFX@STA  Status area buffer address            13790000
         MVC   RDR77STA,0(R2)     Status message                        13800000
         L     R14,=A(DMKSYSID)   Move in systemId                      13810000
         MVC   RDR77SID,0(R14)    ...                                   13820000
         MVC   RDR77ATZ,GRFXATOA  .. maybe hilite row 0?                13830000
*                                                                       13840000
         B     GOODEXIT           and return to caller                  13850000
         SPACE 1                                                        13860000
         POP   USING                                                    13870000
         SPACE 3                                                        13880000
*-------------------------------------------------------------          13890000
*        VM/CP READ Channel Program template                            13900000
*-------------------------------------------------------------          13910000
         SPACE 1                                                        13920000
RDR77CP  DS    0D                                                       13930000
         CCW   CCWSEL,0,SILI+CC,1       Select                          13940000
         CCW   CCWWRT,*-*,SILI,*-*      Write: WCC, etc                 13950000
RDR77CPL EQU   *-RDR77CP                                                13960000
         SPACE 1                                                        13970000
*-------------------------------------------------------------          13980000
*        VM/CP READ Data Stream template                                13990000
*-------------------------------------------------------------          14000000
         SPACE 1                                                        14010000
RDR77DS  EQU   *                                                        14020000
         DC    AL1(WCCNMDT)   WCC depends on options                    14030000
         DC    AL1(SBA)                                                 14040000
RDR77AD1 DC    AL2(*-*)       Input Area buffer address                 14050000
         DC    AL1(SF)                                                  14060000
RDR77ATT DC    AL1(*-*)       Input area attribute                      14070000
         DC    AL1(SBA)                                                 14080000
RDR77AD2 DC    AL2(*-*)       Status area buffer address                14090000
         DC    AL1(SF,FLDHIPRO)  Attribute from options                 14100000
RDR77STA DC    CL9'*-*'       Short status                              14110000
         DC    AL1(SF,FLDPROT)                                          14120000
RDR77SID DC    CL8'*-*'                                                 14130000
         DC    AL1(SF)                                                  14140000
RDR77ATZ DC    AL1(*-*)       Hilite for row 0                          14150000
RDR77DSL EQU   *-RDR77DS                                                14160000
         EJECT ,                                                        14170000
* +--------------------------------------------------------+            14180000
* |                                                        |            14190000
* |      W N G : Sound the alarm on the terminal           |            14200000
* |                                                        |            14210000
* |      Input:                                            |            14220000
* |      IOBMISC = read buffer address                     |            14230000
* |                                                        |            14240000
* |      0B (Select)                                       |            14250000
* |      01 (Write) WCC                                    |            14260000
* |                 SBA @inpt                              |            14270000
* |      06 (RM)    buffer                                 |            14280000
* |                                                        |            14290000
* +--------------------------------------------------------+            14300000
         SPACE 1                                                        14310000
         PUSH  USING                                                    14320000
BLD77WNG DS    0H                                                       14330000
         MVC   GRFCCW1(WNG77CPL),WNG77CP  Channel program               14340000
         MVC   GRFXBUFF(WNG77DSL),WNG77DS Data stream                   14350000
*                                                                       14360000
         LA    R1,WNG77DSL        Set data stream length                14370000
         STH   R1,GRFCCW2+6         into the write CCW                  14380000
         LA    R1,GRFXBUFF        Data stream goes here                 14390000
         STCM  R1,7,GRFCCW2+1     plug in CCW address                   14400000
         B     GOODEXIT                                                 14410000
         SPACE 1                                                        14420000
         POP   USING                                                    14430000
         SPACE 3                                                        14440000
*-------------------------------------------------------------          14450000
*        WNG (warning) Channel Program template                         14460000
*-------------------------------------------------------------          14470000
         SPACE 1                                                        14480000
WNG77CP  DS    0D                                                       14490000
         CCW   CCWSEL,0,SILI+CC,1       Select                          14500000
         CCW   CCWWRT,*-*,SILI,*-*      Write: WCC, etc                 14510000
WNG77CPL EQU   *-RDR77CP                                                14520000
         SPACE 1                                                        14530000
*-------------------------------------------------------------          14540000
*        Warning Data Stream template                                   14550000
*-------------------------------------------------------------          14560000
         SPACE 1                                                        14570000
WNG77DS  EQU   *                                                        14580000
         DC    AL1(WCCBEEP)                                             14590000
WNG77DSL EQU   *-WNG77DS                                                14600000
         TITLE 'HDKGRC:HDKGRCRL  (CP)  VM370CE: VIRTUAL MACHINE/370 COMX14610000
               MUNITY EDITION'                                          14620000
***************************************************************         14630000
*                                                                       14640000
* METHOD NAME -                                                         14650000
*                                                                       14660000
*        HDKGRCRL                                                       14670000
*                                                                       14680000
* FUNCTION -                                                            14690000
*                                                                       14700000
*        Release any RDEV resources used building 327x                  14710000
*        channel programs                                               14720000
*                                                                       14730000
* ENTRY CONDITIONS -                                                    14740000
*                                                                       14750000
*        R8  = Address of the RDEVBLOK                                  14760000
*        R10 = Address of the IOBLOK                                    14770000
*        R11 = Address of the user's VMBLOK                             14780000
*        R12 = Address of HDKGINIT entry point                          14790000
*        R13 = Address of standard SAVEAREA                             14800000
*                                                                       14810000
* EXIT CONDITIONS -                                                     14820000
*                                                                       14830000
*        R15 = 0 : All resources released                               14840000
*                                                                       14850000
***************************************************************         14860000
         SPACE 3                                                        14870000
HDKGRCRL RELOC ,                                                        14880000
         SPACE 3                                                        14890000
*-------------------------------------------------------------          14900000
*        Generate 327x channel programs and data streams                14910000
*-------------------------------------------------------------          14920000
         SPACE 1                                                        14930000
         ICM   R7,15,IOBCHPRG Get channel program addressing            14940000
         BZ    RLRETURN       not there.. nothing to do                 14950000
*                                                                       14960000
*        Release logo data buffer if there                              14970000
*                                                                       14980000
         ICM   R1,15,GRFBUFFA Is the logo buffer there?                 14990000
         BZ    NOGRFBUF       no, skip the step                         15000000
         LH    R0,GRFBUFFL    Get size in bytes                         15010000
         SRL   R0,3           ...      in wdords                        15020000
         CALL  DMKFRET        Release trhe storage                      15030000
*                                                                       15040000
NOGRFBUF DS    0H                                                       15050000
         LR    R1,R7          Finally, release the CCW area             15060000
         LA    R0,GRFCCWLD    ...                                       15070000
         CALL  DMKFRET        ...                                       15080000
         SR    R1,R1                                                    15090000
         ST    R1,IOBCHPRG    Clear IOBLOK field                        15100000
         SPACE 1                                                        15110000
RLRETURN DS    0H                                                       15120000
         EXIT  ,                                                        15130000
         TITLE 'HDKGRC           (CP)  VM370CE: VIRTUAL MACHINE/370 COMX15140000
               MUNITY EDITION'                                          15150000
         LTORG ,                                                        15160000
         EJECT ,                                                        15170000
         COPY  EQU                                                      15180000
         COPY  DEVTYPES                                                 15190000
         COPY  GRCWORK                                                  15200000
         COPY  HDK3270                                                  15210000
         COPY  VMBLOK                                                   15220000
         COPY  RBLOKS                                                   15230000
         COPY  GRFXBLOK                                                 15240000
         COPY  IOBLOKS                                                  15250000
         COPY  CONBUF                                                   15260000
         COPY  SAVE                                                     15270000
         COPY  TIMER                                                    15280000
         PSA                                                            15290000
         SPACE 3                                                        15300000
HDKGRC   CSECT ,                                                        15310000
         ORG   ,                                                        15320000
MODEND   DS    0D             *** Mark module's end ***                 15330000
         END                                                            15340000
:READ HDKG66 AUXLCL   A
HRC250DK V01 Dynamic 327x screen size support
:READ HDKG66 HRC250DK A
./ * HRC250DK - Dynamic 327x screen size support
./ *
./ * Add new module to dynamically build channel programs    
./ * and data streams for the 3066 operator console.           
./ * 
./ * HISTORY:
./ * 25-Jul-2025 WDENTON  Initial version for VM370CE V1 R1.2
./ *
:READ HDKG66 ASSEMBLE A
G66      TITLE 'HDKG66           (CP)  VM370CE: VIRTUAL MACHINE/370 COMX00010000
               MUNITY EDITION'                                          00020000
         ISEQ  73,80          Validate sequence numbers                 00030000
**********************************************************************  00040000
*                                                                       00050000
* MODULE NAME -                                                         00060000
*                                                                       00070000
*        HDKG66                                                         00080000
*                                                                       00090000
* FUNCTION -                                                            00100000
*                                                                       00110000
*        Build all of the Channel Programs needed to manage             00120000
*        3066 display devices.                                          00130000
*                                                                       00140000
* ATTRIBUTES -                                                          00150000
*                                                                       00160000
*        Reenterable, resident                                          00170000
*                                                                       00180000
* ENTRY POINTS -                                                        00190000
*                                                                       00200000
*        DMKG66CP - Prepare channel programs                            00210000
*                                                                       00220000
**********************************************************************  00230000
         EJECT ,                                                        00240000
         COPY  OPTIONS                                                  00250000
         COPY  LOCAL                                                    00260000
         SPACE 3                                                        00270000
HDKG66   CSECT ,                                                        00280000
         DC    CL8'HDKG66'        Module Id                             00290000
         DC    AL2(MODEND-HDKG66) Module length                         00300000
         DC    C'&SYSDATE',C'-'   Compile date                          00310000
         DC    C'&SYSTIME'        Compile time                          00320000
         SPACE 3                                                        00330000
         USING PSA,0                                                    00340000
         USING TRQBLOK,R5                                               00350000
         USING CONTASK,R6                                               00360000
         USING RDEVBLOK,R8                                              00370000
         USING IOBLOK,R10                                               00380000
         USING VMBLOK,R11                                               00390000
         USING SAVEAREA,R13                                             00400000
         TITLE 'HDKG66:HDKG66CP  (CP)  VM370CE: VIRTUAL MACHINE/370 COMX00410000
               MUNITY EDITION'                                          00420000
***************************************************************         00430000
*                                                                       00440000
* METHOD NAME -                                                         00450000
*                                                                       00460000
*        HDKG66CP                                                       00470000
*                                                                       00480000
* FUNCTION -                                                            00490000
*                                                                       00500000
*        Build a 3066 display device channel program                    00510000
*        and its associated data stream.                                00520000
*                                                                       00530000
* ENTRY CONDITIONS -                                                    00540000
*                                                                       00550000
*        Entered via GOTO from HDKGRCCW                                 00560000
*                                                                       00570000
*        R0  = Index of channel program to be built                     00580000
*        R8  = Address of the RDEVBLOK                                  00590000
*        R10 = Address of the IOBLOK                                    00600000
*        R11 = Address of the user's VMBLOK                             00610000
*        R12 = Address of HDKGINIT entry point                          00620000
*        R13 = Address of standard SAVEAREA                             00630000
*                                                                       00640000
* EXIT CONDITIONS -                                                     00650000
*                                                                       00660000
*        R15 = 0 : The RDEVBLOK has been initialized                    00670000
*                                                                       00680000
*        R15 = 4 : A Read Partition Query was issued.                   00690000
*                  Wait for the Attention interrupt that                00700000
*                  will be generated. A call to HDKGINRD                00710000
*                  needs to be made when that interrupt occurs.         00720000
*                                                                       00730000
*        R15 = 8 : An I/O error occurred while trying th                00740000
*                  initialize the display device.                       00750000
*                                                                       00760000
* NOTES -                                                               00770000
*                                                                       00780000
*        Local display device initialization is invoked                 00790000
*        when an unsolicited Device-End is detected for                 00800000
*        an enabled device or when an ENABLE command is                 00810000
*        issued for a disabled device                                   00820000
*                                                                       00830000
***************************************************************         00840000
         SPACE 3                                                        00850000
HDKG66CP RELOC ,                                                        00860000
         SPACE 3                                                        00870000
         CLI   RDEVTYPE,TYP3066   Is this for a 3066?                   00880000
         BNE   BADCALL            no, just return an error              00890000
         SPACE 3                                                        00900000
*-------------------------------------------------------------          00910000
*        Route to requested build logic                                 00920000
*-------------------------------------------------------------          00930000
         SPACE 1                                                        00940000
ROUTCALL DS    0H                                                       00950000
         B     VECTOR66(R1)                                             00960000
VECTOR66 DS    0H                                                       00970000
         B     BADCALL        CPIX=0  bad call                          00980000
         B     BLD66RMI       CPIX=1  Read Manual Input                 00990000
         B     BLD66FMT       CPIX=2  Format screen w/logo              01000000
         B     BLD66WRT       CPIX=3  Write to output area              01010000
         B     BLD66CLR       CPIX=4  Clear screen                      01020000
         B     BLD66CLS       CPIX=5  Clear screen w/EraseWrite         01030000
         B     BLD66CRD       CPIX=6  Clear input area w/RUNNING        01040000
         B     BLD66MRD       CPIX=7  Clear input area w/o status       01050000
         B     BLD66IDS       CPIX=8  Write to input area               01060000
         B     BLD66TAB       CPIX=9  Insert a logical tab              01070000
         B     BLD66HLD       CPIX=10 Set status = HOLDING              01080000
         B     BLD66MOR       CPIX=11 Set status = MORE...              01090000
         B     BLD66NAC       CPIX=12 Set status = NOT ACCEPTED         01100000
         B     BLD66RUN       CPIX=13 Set status = RUNNING              01110000
         B     BLD66VMR       CPIX=14 Set status = VM READ              01120000
         B     BLD66CPR       CPIX=15 Set status = CP READ              01130000
         B     BLD66VMP       CPIX=16 Set status = VM READ inhibit      01140000
         B     BLD66CPP       CPIX=17 Set status = CP READ inhibit      01150000
         B     BLD66WNG       CPIX=18 Sound warning alarm               01160000
         SPACE 3                                                        01170000
*-------------------------------------------------------------          01180000
*        Return to DMKGRF                                               01190000
*-------------------------------------------------------------          01200000
         SPACE 1                                                        01210000
PASSCONT DS    0H                                                       01220000
         LA    R1,CONCCW1                                               01230000
PASSR1   DS    0H                                                       01240000
         ST    R1,SAVER1      Return R1 = channel program               01250000
         XR    R15,R15        and RC=0                                  01260000
DOEXIT   DS    0H                                                       01270000
         EXIT  ,                                                        01280000
BADCALL  DS    0H                                                       01290000
         LA    R15,8                                                    01300000
         B     DOEXIT                                                   01310000
         EJECT ,                                                        01320000
*-------------------------------------------------------------          01330000
*        R M I - Read operator input                                    01340000
*-------------------------------------------------------------          01350000
         SPACE 1                                                        01360000
BLD66RMI DS    0H                                                       01370000
         L     R1,IOBCAW      GET CCW ADDRESS                           01380000
         MVC   0(32,R1),RMI66CCW GET MODEL CCWS                         01390000
         L     R3,IOBMISC     GET BUFFER ADDRESS                        01400000
         STCM  R3,7,1(R1)     SET CURSOR DATA ADDRESS                   01410000
         LA    R3,6(R3)       DATA ADDRESS                              01420000
         STCM  R3,7,17(R1)    SET ADAT CCW ADDRESS                      01430000
         B     PASSR1                                                   01440000
         SPACE 3                                                        01450000
*-------------------------------------------------------------          01460000
*        F M T - Format the screen                                      01470000
*-------------------------------------------------------------          01480000
         SPACE 1                                                        01490000
BLD66FMT DS    0H                                                       01500000
         LA    R1,FMT66CCW    CCW ADDRESS                               01510000
         B     PASSR1                                                   01520000
         SPACE 3                                                        01530000
*-------------------------------------------------------------          01540000
*        W R T - Write to output area                                   01550000
*-------------------------------------------------------------          01560000
         SPACE 1                                                        01570000
BLD66WRT DS    0H             BUILD 3066 WRITE CCW STRING               01580000
         LH    R3,CONCNT      DATA COUNT                                01590000
         MVC   CONCCW1(3*8),WRT66CCW    SET CCWS                        01600000
         STC   R4,CONCCW1+5   SAVE NUMBER OF LINES                      01610000
         STH   R3,CONCCW2+6   SET DATA COUNT                            01620000
         LA    R3,CONDATA     DATA START                                01630000
         STCM  R3,7,CONCCW2+1 SET CCW ADDRESS                           01640000
         MVC   CONCCW4(2),RDEVCORD      SET BUFFER ADDRESS              01650000
         LA    R3,CONCCW4     DATA ADDRESS                              01660000
         STCM  R3,7,CONCCW1+1  SET CCW ADDESS                           01670000
         MVI   WRT66ALM,NOP   ASSUME NO ALARM                           01680000
         TM    CONPARM,ALARM  ALARM WITH THIS MESSAGE                   01690000
         BZ    PASSCONT       NO, CONT                                  01700000
         OI    TRQBFLAG,CRTALRM FLAG SCREEN ALARM                       01710000
         MVI   WRT66ALM,BEL66 SOUND ALARM                               01720000
         B     PASSCONT       CONT                                      01730000
         SPACE 3                                                        01740000
*-------------------------------------------------------------          01750000
*        C L R - Clear the output area                                  01760000
*-------------------------------------------------------------          01770000
         SPACE 1                                                        01780000
BLD66CLR DS    0H                                                       01790000
BLD66CLS DS    0H             n/a for 3066                              01800000
         LA    R1,CLR66CCW    CCW ADDRESS                               01810000
         B     PASSR1                                                   01820000
         SPACE 3                                                        01830000
*-------------------------------------------------------------          01840000
*        C R D - Clear input area & set status = RUNNING                01850000
*-------------------------------------------------------------          01860000
         SPACE 1                                                        01870000
BLD66CRD DS    0H                                                       01880000
         MVI   CLRDATA,C' '   BLANK AN AREA                             01890000
         MVC   CLRDATA+1(159),CLRDATA CLEAR TO BLANKS                   01900000
         LA    R1,CRD66CCW    POINT TO RUN MSG CCW                      01910000
         B     PASSR1                                                   01920000
         SPACE 3                                                        01930000
*-------------------------------------------------------------          01940000
*        M R D - Clear input area & leave status alone                  01950000
*-------------------------------------------------------------          01960000
         SPACE 1                                                        01970000
BLD66MRD DS    0H                                                       01980000
         MVI   CLRDATA,C' '   BLANK AN AREA                             01990000
         MVC   CLRDATA+1(159),CLRDATA CLEAR TO BLANKS                   02000000
         LA    R1,MRD66CCW    POINT TO RUN MSG CCW                      02010000
         B     PASSR1                                                   02020000
         SPACE 3                                                        02030000
*-------------------------------------------------------------          02040000
*        I D S - Write to input area (n/a 3066 has no PF keys)          02050000
*        T A B - Add a tab to line   (n/a 3066 has no PF keys)          02060000
*-------------------------------------------------------------          02070000
         SPACE 1                                                        02080000
BLD66IDS DS    0H                                                       02090000
BLD66TAB DS    0H                                                       02100000
         LA    R1,NOP66CCW    Just return a NOP                         02110000
         B     PASSR1                                                   02120000
         SPACE 3                                                        02130000
*-------------------------------------------------------------          02140000
*        H L D - Set status = HOLDING                                   02150000
*-------------------------------------------------------------          02160000
         SPACE 1                                                        02170000
BLD66HLD DS    0H                                                       02180000
         LA    R1,HLD66CCW    CCW ADDRESS                               02190000
         B     PASSR1                                                   02200000
         SPACE 3                                                        02210000
*-------------------------------------------------------------          02220000
*        M O R - Set status = MORE...                                   02230000
*-------------------------------------------------------------          02240000
         SPACE 1                                                        02250000
BLD66MOR DS    0H                                                       02260000
         LA    R1,MOR66CCW    CCW ADDRESS                               02270000
         B     PASSR1                                                   02280000
         SPACE 3                                                        02290000
*-------------------------------------------------------------          02300000
*        N A C - Set status = NOT ACCEPTED                              02310000
*-------------------------------------------------------------          02320000
         SPACE 1                                                        02330000
BLD66NAC DS    0H                                                       02340000
         LA    R1,NAC66CCW    CCW ADDRESS                               02350000
         B     PASSR1                                                   02360000
         SPACE 3                                                        02370000
*-------------------------------------------------------------          02380000
*        R U N - Set status = RUNNING                                   02390000
*-------------------------------------------------------------          02400000
         SPACE 1                                                        02410000
BLD66RUN DS    0H                                                       02420000
         LA    R1,RUN66CCW    CCW ADDRESS                               02430000
         MVI   WRT66ALM,NOP   SET END TO NOP                            02440000
         B     PASSR1                                                   02450000
         SPACE 3                                                        02460000
*-------------------------------------------------------------          02470000
*        V M R - Set status = VM READ                                   02480000
*        V M P - Set status = VM READ (inhibit) n/a for 3066            02490000
*-------------------------------------------------------------          02500000
         SPACE 1                                                        02510000
BLD66VMR DS    0H                                                       02520000
BLD66VMP DS    0H                                                       02530000
         LA    R1,VMR66CCW    CCW ADDRESS                               02540000
         B     PASSR1                                                   02550000
         SPACE 3                                                        02560000
*-------------------------------------------------------------          02570000
*        C P R - Set status = CP READ                                   02580000
*        C P P - Set status = CP READ (inhibit) n/a for 3066            02590000
*-------------------------------------------------------------          02600000
         SPACE 1                                                        02610000
BLD66CPR DS    0H                                                       02620000
BLD66CPP DS    0H                                                       02630000
         LA    R1,CPR66CCW    CCW ADDRESS                               02640000
         B     PASSR1                                                   02650000
         SPACE 3                                                        02660000
*-------------------------------------------------------------          02670000
*        W N G - Sound the alarm                                        02680000
*-------------------------------------------------------------          02690000
         SPACE 1                                                        02700000
BLD66WNG DS    0H                                                       02710000
         LA    R1,WNG66CCW    CCW ADDRESS                               02720000
         B     PASSR1                                                   02730000
         EJECT ,                                                        02740000
* 3066 CCW PACKAGES                                                     02750000
         SPACE 1                                                        02760000
*        3066 CCW Op Codes                                              02770000
         SPACE 1                                                        02780000
WRT66    EQU   X'01'          Write                                     02790000
CSR66    EQU   X'0F'          Set Cursor                                02800000
SBA66    EQU   X'27'          Set Buffer Address                        02810000
RD66     EQU   X'06'          Read                                      02820000
RMI66    EQU   X'0E'          Read Manual Input                         02830000
BEL66    EQU   X'0B'          Set Audible Alarm                         02840000
LOCK66   EQU   X'67'          Lock keyboard                             02850000
ERS66    EQU   X'07'          Erase                                     02860000
NOP      EQU   X'03'          Do Nothing                                02870000
TIC      EQU   X'08'          Link                                      02880000
         SPACE                                                          02890000
WRT66CCW CCW   SBA66,*-*,SILI+CC,2                                      02900000
         CCW   WRT66,*-*,SILI+CC,*-*                                    02910000
         CCW   TIC,RUN66CCW,0,0    TIC TO WRITE RUNNING                 02920000
         SPACE                                                          02930000
RMI66CCW CCW   RMI66,*-*,SILI+CC,3                                      02940000
         CCW   SBA66,SBA3300,SILI+CC,2                                  02950000
         CCW   RD66,*-*,SILI+CC,BUFINLTH                                02960000
         CCW   NOP,0,SILI,1                                             02970000
         SPACE                                                          02980000
FMT66CCW CCW   ERS66,0,SILI+CC,1                                        02990000
         CCW   SBA66,SBA0000,SILI+CC,2                                  03000000
         CCW   WRT66,VM370ONL,SILI+CC,20                                03010000
         CCW   SBA66,SBA3460,SILI+CC,2                                  03020000
         CCW   WRT66,RUNNING,SILI+CC,20                                 03030000
         CCW   CSR66,SBA3300,SILI+CC,2                                  03040000
         CCW   NOP,0,SILI,1                                             03050000
         SPACE                                                          03060000
HLD66CCW CCW   SBA66,SBA3460,SILI+CC,2                                  03070000
         CCW   WRT66,HOLDING,SILI+CC,20                                 03080000
         CCW   NOP,0,SILI,1                                             03090000
         SPACE                                                          03100000
MOR66CCW CCW   SBA66,SBA3460,SILI+CC,2                                  03110000
         CCW   WRT66,MOREMSG,SILI+CC,20                                 03120000
         CCW   NOP,0,SILI,1                                             03130000
         SPACE                                                          03140000
NAC66CCW CCW   SBA66,SBA3460,SILI+CC,2                                  03150000
         CCW   WRT66,NOTACCPT,SILI+CC,20                                03160000
WNG66CCW CCW   BEL66,0,SILI+CC,1                                        03170000
NOP66CCW CCW   NOP,0,SILI,1                                             03180000
         SPACE                                                          03190000
CRD66CCW CCW   SBA66,SBA3300,SILI+CC,2                                  03200000
         CCW   WRT66,CLRDATA,SILI+CC,140                                03210000
         CCW   SBA66,SBA3460,SILI+CC,2                                  03220000
         CCW   WRT66,RUNNING,SILI+CC,20                                 03230000
         CCW   CSR66,SBA3300,SILI+CC,2                                  03240000
         CCW   NOP,0,SILI,1                                             03250000
         SPACE 2                                                        03260000
MRD66CCW CCW   SBA66,SBA3300,SILI+CC,2                                  03270000
         CCW   WRT66,CLRDATA,SILI+CC,140                                03280000
         CCW   CSR66,SBA3300,SILI+CC,2                                  03290000
         CCW   NOP,0,SILI,1                                             03300000
         SPACE                                                          03310000
RUN66CCW CCW   SBA66,SBA3460,SILI+CC,2                                  03320000
         CCW   WRT66,RUNNING,SILI+CC,20                                 03330000
WRT66ALM CCW   NOP,0,SILI,1                                             03340000
         SPACE                                                          03350000
CLR66CCW CCW   RMI66,CLRMI,SILI+CC,3                                    03360000
         CCW   CSR66,SBA0000,SILI+CC,2                                  03370000
         CCW   SBA66,SBA3300,SILI+CC,2                                  03380000
         CCW   RD66,CLRDATA,SILI+CC,160                                 03390000
         CCW   ERS66,0,SILI+CC,1                                        03400000
         CCW   SBA66,SBA3300,SILI+CC,2                                  03410000
         CCW   WRT66,CLRDATA,SILI+CC,160                                03420000
         CCW   CSR66,CLRMI,SILI+CC,2                                    03430000
         CCW   NOP,0,SILI,1                                             03440000
CLRMI    DC    CL3' '                                                   03450000
CLRDATA  DC    CL160' '                                                 03460000
         SPACE                                                          03470000
VMR66CCW CCW   SBA66,SBA3460,SILI+CC,2                                  03480000
         CCW   WRT66,VMREAD,SILI+CC,20                                  03490000
         CCW   NOP,0,SILI,1                                             03500000
         SPACE                                                          03510000
CPR66CCW CCW   SBA66,SBA3460,SILI+CC,2                                  03520000
         CCW   WRT66,CPREAD,SILI+CC,20                                  03530000
         CCW   NOP,0,SILI,1                                             03540000
         SPACE 3                                                        03550000
*        CONSTANTS                                                      03560000
RUNNING  DC    CL20'RUNNING'                                            03570000
HOLDING  DC    CL20'HOLDING'                                            03580000
MOREMSG  DC    CL20'MORE...'                                            03590000
NOTACCPT DC    CL20'NOT ACCEPTED'                                       03600000
CPREAD   DC    CL20'CP READ'                                            03610000
VMREAD   DC    CL20'VM READ'                                            03620000
VM370ONL DC    CL20'VM/370 Online'                                      03630000
         SPACE                                                          03640000
SBA0000  DC    AL1(00,00)     CORDINATES FOR TOP OF CRT                 03650000
SBA3300  DC    AL1(33,00)     COORDINATES FOR READ INPUT DATA           03660000
SBA3460  DC    AL1(34,60)     COORDINATES FOR SYSTEM STATUS             03670000
         EJECT ,                                                        03680000
         LTORG ,                                                        03690000
         EJECT ,                                                        03700000
         COPY  EQU                                                      03710000
         COPY  DEVTYPES                                                 03720000
         COPY  RBLOKS                                                   03730000
         COPY  CONBUF                                                   03740000
         COPY  IOBLOKS                                                  03750000
         COPY  TIMER                                                    03760000
         COPY  VMBLOK                                                   03770000
         COPY  SAVE                                                     03780000
         PSA                                                            03790000
         SPACE 3                                                        03800000
HDKG66   CSECT ,                                                        03810000
         ORG   ,                                                        03820000
MODEND   DS    0D                                                       03830000
         END                                                            03840000
:READ DMKCPI AUXLCL   A
HRC250DK V01 Dynamic 327x screen size support
:READ DMKCPI HRC250DK A
./ * HRC250DK - Dynamic 327x screen size support
./ *
./ * Remove part of the logic added by HRC108DK that calls   
./ * DMKGRTID to put the system id into the 3270 data streams.
./ * This is no longer appropriate since the data streams
./ * are now dynamically built based on discovered device
./ * geometry.
./ * 
./ * HISTORY:
./ * 29-Jul-2025 WDENTON  Initial version for VM370CE V1 R1.2
./ *
./ D 00058100
./ R 00238500 $ 00238503
*            DMKSYS.  HDKGRC will use the value in DMKSYSID    HRC250DK 00238503
./ R 00361100 $ 00361200                                   
         EXTRN DMKSYSIC,DMKSYSID,DMKSYSIL                      HRC250DK 00361200
./ D 02275700                                   
:READ HDKD58 AUXLCL   A
HRC250DK V01 Dynamic 327x screen size support
:READ HDKD58 HRC250DK A
./ * HRC250DK - Dynamic 327x screen size support
./ *
./ * Modify Diagnose 58 full-screen logic to remove the      
./ * reference to the GRTBLOK and call HDKGRC to build          
./ * the clear-screen channel program & data stream.       
./ * 
./ * HISTORY:
./ * 29-Jul-2025 WDENTON  Initial version for VM370CE V1 R1.2
./ *
./ I 01181050 $ 01181060
         EXTRN HDKGRCCW                Build channel programs  HDK250DK 01181060
./ R 03183000 03185000 $ 03183100 100
         LA    R1,CPIXCLS              Build clear screen CCWs HDK250DK 03183100
         CALL  HDKGRCCW                  and data stream       HDK250DK 03183200
./ R 03340000 03341000 $ 03340100
         COPY  GRCWORK                                         HDK250DK 03340100
:READ DMKSYM AUXLCL   A
HRC250DK V01 Dynamic 327x screen size support
:READ DMKSYM HRC250DK A
./ * HRC250DK - Dynamic 327x screen size support
./ *
./ * Remove references to obsolete DMKGRT and the others     
./ * derived from GRTBLOK.
./ * 
./ * HISTORY:
./ * 29-Jul-2025 WDENTON  Initial version for VM370CE V1 R1.2
./ *
./ R 00079100 00080670 $ 00079500
         SYM   HDKGRC
:READ HDKD7C AUXLCL   A
HRC250DK V01 Dynamic 327x screen size support
:READ HDKD7C HRC250DK A
./ * HRC250DK - Dynamic 327x screen size support
./ *
./ * Modify Diagnose 7C Logical Device logic to remove       
./ * references to the obsolete RDEVBLOK fields:                
./ * -- RDEVGRTB
./ * -- RDEVGRTY
./ * 
./ * HISTORY:
./ * 29-Jul-2025 WDENTON  Initial version for VM370CE V1 R1.2
./ *
./ R 00249000 $ 00249100
         SLL   R3,2                    Times 4 to make index   HRC250DK 00249100
./ R 00322000 00324000 $ 00322100 100
         MVC   RDEVMDL,GRFMDL          Set model number        HRC250DK 00322100
./ R 00361000 00362000 $ 00361100 1000
GRF3277  EQU   * NAME   MDL      TYPE                          HRC250DK 00361100
         DC    X'3277',X'02',AL1(TYP3277)             Model 2  HRC250DK 00362100
./ R 00365000 00369000 $ 00365100 1000
GRF3278  EQU   * NAME   MDL      TYPE                          HRC250DK 00365100
         DC    X'3278',X'02',AL1(TYP3278)             Model 2  HRC250DK 00366100
         DC    X'3278',X'03',AL1(TYP3278)             Model 3  HRC250DK 00367100
         DC    X'3278',X'04',AL1(TYP3278)             Model 4  HRC250DK 00368100
         DC    X'3278',X'05',AL1(TYP3278)             Model 5  HRC250DK 00369100
./ R 02126000 $ 02126100
GRFMDL   DS    XL1                     RDEVMDL value           HRC250DK 02126100
./ D 02128000
:READ DMKRIO AUXLCL   A
HRC250DK V01 Dynamic 327x screen size support
:READ DMKRIO HRC250DK A
./ * HRC250DK - Dynamic 327x screen size support
./ *
./ * Reassemble DMKRIO to pick up changes to RDEVICE macro   
./ * 
./ * HISTORY:
./ * 29-Jul-2025 WDENTON  Initial version for VM370CE V1 R1.2
./ *
:READ DMKOPR AUXLCL   A
HRC250DK V01 Dynamic 327x screen size support
:READ DMKOPR HRC250DK A
./ * HRC250DK - Dynamic 327x screen size support
./ *
./ * Change to test RDEVMDL for Model 2A instead of the   
./ * obsolete RDEVGRTY
./ * 
./ * HISTORY:
./ * 29-Jul-2025 WDENTON  Initial version for VM370CE V1 R1.2
./ *
./ R 00196401 00196451 $ 00196402 50
         IC    R0,RDEVMDL     also save the screen type        HRC250DK 00196402
         STC   R0,CONSMDL     ...                              HRC250DK 00196452
./ R 00197201 $ 00197202
         CLI   CONSMDL,MODEL2A  Special stuff for model 2A     HRC250DK 00197202
./ R 00268201 00268301 $ 00268202 100
CONSMDL  DC    X'00'          Graphic screen type (RDEVMDL)    HRC250DK 00268202
MODEL2A  EQU   X'2A'          .. value for  3278-2A            HRC250DK 00268302