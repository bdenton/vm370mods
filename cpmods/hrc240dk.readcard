USERID MAINT CLASS A NAME ALTNUC READCARD
:READ PSA AUXLCL A
HRC240DK V01 Alternate CP nucleus enhancements
:READ PSA HRC240DK A
./ * HRC240DK - Alternate CP Nucleus Enhancements
./ *
./ * Add a PSA field to hold the IPL device address which
./ * might be different from the SYSRES device address
./ * (having CKPT, WARM, and ERR) that is kept in SYSIPLDV
./ * Note: this update replaces PSA.INSTWRD2
./ *
./ * HISTORY:
./ * 21-Mar-2018 WDENTON  Initial version for VM/370-CE 1.1.3
./ *
./ R 00218000 $ 00218100 100
*        SYSIPLDV is maintained in all three PSA's.            HRC240DK 00218100
SYSIPLDV DS    1H -      P*3  CKPT/WRM/ERR device address      HRC240DK 00218200
./ R 00257000 $ 00257100 100
*        PSAIPLDV and PSANUCAD maintained in all three PSA's   HRC240DK 00257100
PSAIPLDV DC    H'0' -         Nucleus IPL device address       HRC240DK 00257200
PSANUCAD DC    H'0' -         IPL'd nucleus starting cylinder  HRC240DK 00257300
:READ SYSRES AUXLCL A
HRC240DK V01 Alternate CP nucleus enhancements
:READ SYSRES HRC240DK A
./ * HRC240DK - Alternate CP Nucleus Enhancements
./ *
./ * Save nucleus volser and cylinder location in GBLx variables
./ * so that it can be included in the nucleus location table
./ * that will be build in SYSLOCS.
./ * Also enhance SYSRES macro to allow specification of the
./ * number of cylinders allocated to the nucleus (HRC102DK)
./ *
./ * PREREQUISITES:
./ * HRC102DK V02 Add upper bound for nucleus write/read
./ * HRC075DK V01 Alternate nucleus support
./ *
./ * HISTORY:
./ * 21-Mar-2018 WDENTON  Initial version for VM/370-CE 1.1.3
./ * 14-Aug-2024 WDENTON  Rework to make HRC102DK a prerequiisite
./ * 21-Aug-2024 WDENTON  Remove obsolete DMKSYSNU                  
./ *
./ R 00005400 $ 00005405 5
         GBLA  &NUCCNT,&NUCBEG(255),&NUCEND(255)               HRC240DK 00005405
./ I 00006000 $ 00006005 5 
         GBLC  &NUCVOL(255),&NUCTYP(255)                       HRC240DK 00006005
./ R 00021050 $ 00021055 5
         ENTRY DMKSYSER,DMKSYSCT,DMKSYSWM                      HRC240DK 00021055
./ R 00025030 $ 00025035 5
&NUCCNT  SETA  1                        Alt Nucleus count      HRC240DK 00025035
&NUCVOL(1) SETC '&SYSVOL'               Nucleus VOLSER         HRC240DK 00025040
&NUCTYP(1) SETC '&SYSTYPE'              ... device type        HRC240DK 00025045
&NUCBEG(1) SETA &SYSNUC(1)              ... start cylinder     HRC240DK 00025050
./ R 00025150 $ 00025155 5
&NUCEND(1) SETA &SYSNUC(1)+&SYSNUC(2)-1 ... nuc end cylinder   HRC240DK 00025155
./ R 00025270 $ 00025275 5 
&NUCEND(1) SETA &SYSNUC(1)+1            ... nuc end cylinder   HRC240DK 00025175
./ D 00025330                 
./ R 00028750 $ 00028755 5
       MNOTE *,'Nucleus = &NUCBEG(1)-&NUCEND(1)'               HRC240DK 00028755
:READ ALTNUC AUXLCL A
HRC240DK V01 Alternate CP nucleus enhancements
:READ ALTNUC HRC240DK A
./ * HRC240DK - Alternate CP Nucleus Enhancements
./ *
./ * New macro to specify VOLSER, device type, and cylinder
./ * location of one or more alternate nucleus images
./ * Note: update HRC106DK is anticipated by already
./ *       including support for 3375 and 3380
./ *
./ * HISTORY:
./ * 21-Mar-2018 WDENTON  Initial version for VM/370-CE 1.1.3
./ * 14-Aug-2024 WDENTON  Add 3375/3380 support ala HRC106DK
./ *
:READ ALTNUC MACRO A
         MACRO                                                          00010000
         ALTNUC &VOLSER=,&DEVTYPE=,&CYLS=                               00020000
.* Specifies an alternate nucleus VOLSER, device type & cylinder range  00030000
         GBLA  &OWNCNT                                                  00040000
         GBLC  &OWNLST(255),&SYSTYP                                     00050000
         GBLC  &NUCVOL(255),&NUCTYP(255)                                00060000
         GBLA  &NUCCNT,&NUCBEG(255),&NUCEND(255)                        00070000
         LCLA  &BEG,&END,&IX                                            00080000
         LCLC  &DVTYP                                                   00090000
         AIF   ('&VOLSER' EQ '').ERR1                                   00100000
.SERLP   ANOP  ,                                                        00110000
&IX      SETA  &IX+1                                                    00120000
         AIF   (&IX GT &OWNCNT).ERR2                                    00130000
         AIF   ('&OWNLST(&IX)' NE '&VOLSER').SERLP                      00140000
&IX      SETA  0                                                        00150000
.NUCLP   ANOP  ,                                                        00160000
&IX      SETA  &IX+1                                                    00170000
         AIF   (&IX GT &NUCCNT).SEROK                                   00180000
         AIF   ('&NUCVOL(&IX)' NE '&VOLSER').NUCLP                      00190000
         AGO   .ERR3                                                    00200000
.SEROK   ANOP  ,                                                        00210000
         AIF   ('&DEVTYPE' EQ '').DEFTYP                                00220000
&DVTYP   SETC  '&DEVTYPE'                                               00230000
         AIF   (('&DEVTYPE' EQ '2314') OR ('&DEVTYPE' EQ '2319')).TYPOK 00240000
         AIF   (('&DEVTYPE' EQ '3330') OR ('&DEVTYPE' EQ '2305')).TYPOK 00250000
         AIF   (('&DEVTYPE' EQ '3333') OR ('&DEVTYPE' EQ '3340')).TYPOK 00260000
         AIF   ('&DEVTYPE' EQ '3350').TYPOK                             00270000
         AIF   ('&DEVTYPE' EQ '3375').TYPOK                    HRC106DK 00280000
         AIF   ('&DEVTYPE' EQ '3380').TYPOK                    HRC106DK 00290000
         AGO   .ERR4                                                    00300000
.DEFTYP  ANOP  ,                                                        00310000
&DVTYP   SETC  '&SYSTYP'                                                00320000
.TYPOK   ANOP  ,                                                        00330000
         AIF   ('&CYLS' EQ '').ERR5                                     00340000
         AIF   (N'&CYLS EQ 1).CYL1                                      00350000
         AIF   (N'&CYLS NE 2).ERR6                                      00360000
&BEG     SETA  &CYLS(1)                                                 00370000
&END     SETA  &BEG+&CYLS(2)-1                                          00380000
         AGO   .CYLOK                                                   00390000
.CYL1    ANOP  ,                                                        00400000
&BEG     SETA  &CYLS                                                    00410000
&END     SETA  &CYLS+1                                                  00420000
         MNOTE 0,'Default nucleus space set to 2 cylinders'             00430000
.CYLOK   ANOP  ,                                                        00440000
&NUCCNT  SETA  &NUCCNT+1                                                00450000
&NUCVOL(&NUCCNT) SETC '&VOLSER'                                         00460000
&NUCTYP(&NUCCNT) SETC '&DVTYP'                                          00470000
&NUCBEG(&NUCCNT) SETA &BEG                                              00480000
&NUCEND(&NUCCNT) SETA &END                                              00490000
         MEXIT                                                          00500000
.ERR1    MNOTE 8,'ALTNUC macro requires the VOLSER parameter'           00510000
         MEXIT                                                          00520000
.ERR2    MNOTE 8,'Alternate nucleus VOLSER must be in SYSOWN list'      00530000
         MEXIT                                                          00540000
.ERR3    MNOTE 8,'Duplicate VOLSER. One nucleus allowed per volume'     00550000
         MEXIT                                                          00560000
.ERR4    MNOTE 8,'Invalid DEVTYPE parameter for Alternate Nucleus'      00570000
         MEXIT                                                          00580000
.ERR5    MNOTE 8,'ALTNUC macro requires the CYLS parameter'             00590000
         MEXIT                                                          00600000
.ERR6    MNOTE 8,'Invalid CYLS parameter on the ALTNUC macro'           00610000
         MEND                                                           00620000
:READ SYSLOCS AUXLCL A
HRC240DK V01 Alternate CP nucleus enhancements
:READ SYSLOCS HRC240DK A
./ * HRC240DK - Alternate CP Nucleus Enhancements
./ *
./ * Generate a new table DMKSYSNT (Nucleus Table) that
./ * contains the volser, device type,  and cylinder location
./ * of all defined IPLable nucleus images
./ *
./ * HISTORY:
./ * 21-Mar-2018 WDENTON  Initial version for VM/370-CE 1.1.3
./ *
./ I 00010060 $ 00010065 5
         GBLC  &NUCVOL(255),&NUCTYP(255)                       HRC240DK 00010065
         GBLA  &NUCCNT,&NUCBEG(255),&NUCEND(255)               HRC240DK 00010070
./ I 00010220 $ 00010222 2
         LCLA  &IX                                             HRC240DK 00010222
./ I 00019000 $ 00019100 100
         ENTRY DMKSYSNT       Alternate Nucleus table          HRC240DK 00019100
./ I 00051000 $ 00051010 10
DMKSYSNT DS    0H             Alternate Nucleus Table          HRC240DK 00051010
.NUCLP   ANOP  ,                                               HRC240DK 00051020
&IX      SETA  &IX+1                                           HRC240DK 00051030
         AIF   (&IX GT &NUCCNT).NUCDONE                        HRC240DK 00051040
         DC    CL6'&NUCVOL(&IX)',AL1(CLASDASD,TYP&NUCTYP(&IX)) HRC240DK 00051050
         DC    H'&NUCBEG(&IX),&NUCEND(&IX)'                    HRC240DK 00051060
         AGO   .NUCLP                                          HRC240DK 00051070
.NUCDONE ANOP  ,                                               HRC240DK 00051080
         DC    X'FFFF'        Mark end of table                HRC240DK 00051090
./ I 00057000 $ 00057010 10
         SPACE 1                                               HRC240DK 00057010
NUCTAB   DSECT ,                                               HRC240DK 00057020
NUVOLSER DS    CL6            Nucleus volume serial            HRC240DK 00057030
NUDVCLAS DS    AL1            ... device class (CLASDASD)      HRC240DK 00057040
NUDVTYPE DS    AL1            ... device type                  HRC240DK 00057050
NUCYLBEG DS    H              Nucleus start cylinder           HRC240DK 00057060
NUCYLEND DS    H              Nucleus end cylinder or -1       HRC240DK 00057070
NUCTABLN EQU   *-NUCTAB       (entry length)                   HRC240DK 00057080
:READ DMKCKP AUXLCL A
HRC240DK V01 Alternate CP nucleus enhancements
:READ DMKCKP HRC240DK A
./ * HRC240DK - Alternate CP Nucleus Enhancements
./ *
./ * 1) Changes the logic that reads the second page of DMKCKP
./ *    to read from the IPL volume
./ * 2) Changes the logic that reads in DMKSAV to read from
./ *    the IPL volume instead of SYSRES
./ * Note: Warm start data is still written to the SYSRES volume
./ *       regardless of which volume was IPLed.
./ *
./ * PREREQUISITES:
./ * HRC075DK V01 Alternate nucleus support
./ *
./ * HISTORY:
./ * 21-Mar-2018 WDENTON  Initial version for VM/370-CE 1.1.3
./ * 14-Aug-2024 WDENTON  Rework to make HRC075DK a prerequiisite
./ *
./ R 00016000 $ 00016100
*        DATA IS WRITTEN ON THE SYSWARM AREA OF THE SYSRES PACK         00016100
./ I 00171000 $ 00171100 10
         ENTRY DMKCKPCD       Copy of DMKCPICD date/time       HRC240DK 00171100
./ I 00205000 $ 00205100 10
         SPACE 1                                               HRC240DK 00205100
*        Copy of DMKCPICD for use in queries                   HRC240DK 00205110
DMKCKPCD DC    CL9' '         Creation date filled by DMKSAV   HRC240DK 00205120
         DC    CL8' '         Creation time filled by DMKSAV   HRC240DK 00205130
./ R 00208000 00209000 $ 00208100 100
         LH    R0,SYSIPLDV    Get SYSRES addr (only if WARM)   HRC240DK 00208100
         STH   R0,SYSRES      ... save for use by CKPT code    HRC240DK 00208200
         LH    R0,INTTIO      Get IPL addr set by DMP or IPL   HRC240DK 00208300
         STH   R0,SYSIPL      ... save for nucleus loading     HRC240DK 00208400
./ R 00274340 $ 00274345 5
         LH    R1,SYSIPL           Get the IPL device address  HRC240DK 00274345
./ R 00304000 $ 00304100
         LH    R2,SYSIPL      Get IPL device address           HRC240DK 00304100
./ R 00353500 $ 00353505 5
         LH    R10,SYSIPL          Get addr of the IPL devive  HRC240DK 00353505
./ R 00521000 $ 00521100 100
SYSRES   DC    H'0'           System residence address         HRC240DK 00521100
SYSIPL   DC    H'0'           IPL'd hucleus device address     HRC240DK 00521200
:READ DMKCPI AUXLCL A
HRC240DK V01 Alternate CP nucleus enhancements
:READ DMKCPI HRC240DK A
./ * HRC240DK - Alternate CP Nucleus Enhancements
./ *
./ * !!!!  Entry conditions from DMKSAVRS have changed to  !!!!
./ * !!!!  include the starting sylinder location of the   !!!!
./ * !!!!  IPLed nucleus in the high-order 2 bytes of R10  !!!!
./ *
./ * Most of the changes relate to the fact that the IPL device
./ * might not be the SYSRES device.
./ *
./ * 1) Save IPL device address in PSA as well as the
./ *    SYSRES device. Neither of them is based on the
./ *    device address -- just the VOLSER
./ * 2) Change SWPTABLE build so nucleus pages are taken
./ *    from the IPL device and cylinder rance rather than
./ *    using the values from SYSRES macro.
./ *
./ * Note: All SYSRES values except nucleus location will
./ *       still be used and processed against the SYSRES
./ *       volume or other location as per HRC075DK
./ *
./ * HISTORY:
./ * 21-Mar-2018 WDENTON  Initial version for VM/370-CE 1.1.3
./ *
./ R 00033000 $ 00033100 100
*        GPR10 = Bytes 0-1 = IPL'd nucleus starting cylinder   HRC240DK 00033100
*                Bytes 2-3 = IPL device address                HRC240DK 00033200
./ D 00136000
./ R 00358000 $ 00358100 100
         EXTRN DMKSYSVL,DMKCSOSD,DMKDMPAU                      HRC240DK 00358100
./ R 00451000 $ 00451100 100
         STH   R10,PSAIPLDV   Save IPL device address          HRC240DK 00451100
         STCM  R10,B'1100',PSANUCAD and starting cylinder      HRC240DK 00451200
./ R 00485100 $ 00485110 10
         LH    R15,PSAIPLDV   Get address of IPL device        HRC240DK 00485110
./ R 00982000 $ 00982100 100
         LH    R1,PSAIPLDV    Get address of IPL device        HRC240DK 00982100
./ R 01041000 01042000 $ 01041200 200
         CH    R15,PSAIPLDV       Is this the IPL device?      HRC240DK 01041200
         BNE   MOUNTIPL           ... no, proceed              HRC240DK 01041400
         LR    R1,R15             Get IPL device addr in hex   HRC240DK 01041600
         CALL  DMKCVTBH           ...                          HRC240DK 01041800
         STCM  R1,B'0111',STIPLAD ... and put in startup msg   HRC240DK 01042000
         MVC   STIPLVOL,RDEVSER   ... along with IPL VOLSER    HRC240DK 01042200
         B     MOUNTDVI           IPL device already mounted   HRC240DK 01042400
./ R 01471000 01473000 $ 01471100 100
         LR    R8,R1          Std place for RDEVBLOK address   HRC240DK 01471100
         CALL  DMKSCNRD       Get SYSRES device address        HRC240DK 01471200
         STH   R1,SYSIPLDV    Save CUU of CKP/WRM/ERR volume   HRC240DK 01471300
         TM    APSTAT1,APUOPER Is this an AP system?           HRC240DK 01471400
         BZ    CPIWED1        No. then no prefix pages         HRC240DK 01471500
         L     R15,PREFIXA    Yes, get Absolute PSA            HRC240DK 01471600
         STH   R1,SYSIPLDV-PSA(,R15) Save CUU of SYSRES there  HRC240DK 01471700
         L     R15,PREFIXB    and get the other CPU's PSA      HRC240DK 01471800
         STH   R1,SYSIPLDV-PSA(,R15) also save SYSRES there    HRC240DK 01471900
CPIWED1  DS    0H                                              HRC240DK 01472000
         L     R15,CPIDMPSD   Also save CCU of CKP/WRM/ERR...  HRC240DK 01472100
         STH   R1,0(,R15)     ...volume in 'DMKDMPSD'.         HRC240DK 01472200
         CALL  DMKCVTBH           SYSRES addr in hex           HRC240DK 01472300
         STCM  R1,B'0111',STRESAD .. put in startup message    HRC240DK 01472400
         MVC   STRESVOL,RDEVSER   .. along with VOLSER         HRC240DK 01472500
         LH    R1,PSAIPLDV    Put back addr of IPL device      HRC240DK 01472600
         CALL  DMKSCNRU       Get RBLOKS for IPL device        HRC240DK 01472700
./ D 01475000 01476000
./ R 01477000 01478000 $ 01477100 100
         LH    R1,PSANUCAD    Get Ipl'd nucleus cylinder       HRC240DK 01477100
./ I 02145000 $ 02145100 100
         DC    X'15',C'IPLed from '''                          HRC240DK 02145100
STIPLVOL DC    CL6' ',C''' on '                                HRC240DK 02145200
STIPLAD  DC    CL3' ',C'; SYSRES '''                           HRC240DK 02145300
STRESVOL DC    CL6' ',C''' is on '                             HRC240DK 02145400
STRESAD  DC    CL3' '                                          HRC240DK 02145500
:READ DMKDDR AUXLCL A
HRC240DK V01 Alternate CP nucleus enhancements
:READ DMKDDR HRC240DK A
./ * HRC240DK - Alternate CP Nucleus Enhancements
./ *
./ * This makes the following changes to NUCLEUS operations
./ * performed with DASD as an output target.
./ *
./ * 1) No longer validate that the input and output
./ *    VOLSERs match.
./ * 2) If the output volume already has a nucleus on it,
./ *    then write the new nucleus to that location if it
./ *    will fit.
./ *
./ * In order to have DDR write a nucleus to location other
./ * than the location of the input nucleus, the output
./ * volume must have previously had a nucleus written
./ * to it by DMKSAV.
./ *
./ * HISTORY:
./ * 21-Mar-2018 WDENTON  Initial version for VM/370-CE 1.1.3
./ *
./ D 01893000 01895000
./ I 01897000 $ 01897025 25
*                                                              HRC240DK 01897025
*        Here we are going to attempt to modify the            HRC240DK 01897050
*        "reorder" cylinder and output writing controls        HRC240DK 01897075
*        so the input nucleus replaced the output nucleus      HRC240DK 01897100
*        even when it is in a different location.              HRC240DK 01897125
*        In order for this to work, a nucleus must have        HRC240DK 01897150
*        been saved on the output volume at some point.        HRC240DK 01897175
*                                                              HRC240DK 01897200
         LA    R1,RCKPOLD        Read DMKCKP from OUT volume   HRC240DK 01897225
         L     R2,IOBERROR       Disable normal error logic    HRC240DK 01897250
         XC    IOBERROR,IOBERROR ...                           HRC240DK 01897275
         IC    R3,IOBOPT         ...                           HRC240DK 01897300
         NI    IOBOPT,255-IOBEEXIT-IOBERST                     HRC240DK 01897325
         BAL   R14,STARTIO       Go read record 0/0/2          HRC240DK 01897350
         ST    R2,IOBERROR       Restore error handling        HRC240DK 01897375
         STC   R3,IOBOPT         ...                           HRC240DK 01897400
         CLC   IOBCSW+4(2),=F'0' Any errors?                   HRC240DK 01897425
         BNE   DDRWED1E          yes, assume OUT has no CKP    HRC240DK 01897450
         L     R1,RCKPOLDA    Get buffer address               HRC240DK 01897475
         CLC   =CL8'DMKCKP',14(R1) Is this really a nucleus?   HRC240DK 01897500
         BNE   DDRWED1E            no, no nuc on OUT volume    HRC240DK 01897525
         LH    R2,22(,R1)     Get OUT nuc begin cyl            HRC240DK 01897550
         STH   R2,CYLREOR     (Save as REORDER value)          HRC240DK 01897575
         STH   R2,OUTADD+2    (Prime output writing)           HRC240DK 01897600
         STH   R2,THR+22      (Save in output CKP)             HRC240DK 01897625
         LH    R3,24(,R1)     Get OUT nuc end cyl              HRC240DK 01897650
         STH   R3,THR+24      (Save in output CKP)             HRC240DK 01897675
         LH    R1,CYLSTOP     Check that the nucleus fits      HRC240DK 01897700
         SH    R1,CYLSTART    .. IN.stop - IN.start            HRC240DK 01897725
         AR    R1,R2          .. + OUT.start                   HRC240DK 01897750
         CR    R1,R3          .. <= OUT.stop                   HRC240DK 01897775
         BH    DDR722         too small.. issue error          HRC240DK 01897800
         B     DDRWED1X       go check OUT allocations         HRC240DK 01897825
DDRWED1E DS    0H                                              HRC240DK 01897850
         LH    R2,CYLSTART    GET STARTING ADD OF NUC          HRC240DK 01897875
         LH    R3,CYLSTOP     GET THE END ADD OF THE NUCLEUS   HRC240DK 01897900
DDRWED1X DS    0H                                              HRC240DK 01897925
./ D 01899000
./ D 01901000
./ I 04974000 $ 04974100 100
RCKPOLD  CCW   07,ALLOADD,CC,6                                 HRC240DK 04974100
         CCW   49,CKPMOD,CC+SILI,5                             HRC240DK 04974200
         CCW   08,*-8,0,0                                      HRC240DK 04974300
RCKPOLDA CCW   06,DB1,0,4096                                   HRC240DK 04974400
:READ DMKDMP AUXLCL A
HRC240DK V01 Alternate CP nucleus enhancements
:READ DMKDMP HRC240DK A
./ * HRC240DK - Alternate CP Nucleus Enhancements
./ *
./ * Differentiate between the SYSRES and IPL volumes
./ * -- SYSRES is used by checkpointing logic
./ * -- IPL volume is used by warm start logic
./ *
./ * HISTORY:
./ * 21-Mar-2018 WDENTON  Initial version for VM/370-CE 1.1.3
./ *
./ * repl by HRC075DK
./ * ./ R 00566000 $ 00566100 100
./ *     LH    R1,DMKDMPSD    A(SYSRES) CKPT/WARM/ERR volume   HRC240DK 00566100
./ * ./ R 00579000 $ 00579100 100
./ *     LH    R15,DMKDMPSD   A(SYSRES) CKPT/WARM/ERR volume   HRC240DK 00579100
./ R 00766000 $ 00766100 100
         LH    R15,PSAIPLDV   Get nucleus IPL device address   HRC240DK 00766100
:READ DMKSAV AUXLCL A
HRC240DK V01 Alternate CP nucleus enhancements
:READ DMKSAV HRC240DK A
./ * HRC240DK - Alternate CP Nucleus Enhancements
./ *
./ * !!!!  Entry conditions from DMKSAVRS to DMKCPINT have !!!!
./ * !!!!  changed to include the starting sylinder of the !!!!
./ * !!!!  IPLed nucleus in the high-order 2 bytes of R10  !!!!
./ *
./ * Writes the nucleus to the DMKSYSRSS device address. The 
./ * device type and cylinder range are determined by looking
./ * the device's volid in the DMKSYSNT table.
./ *
./ * Reads the nucleus from the IPL device. The device type 
./ * and cylinder range are fouind by looking up the IPL volid
./ * in the DMKSYSNT table.
./ *
./ * PREREQUISITES:
./ * HRC102DK V02 Add upper bound for nucleus write/read
./ * HRC202DK V03 Generral message cleanup
./ *
./ * HISTORY:
./ * 21-Mar-2018 WDENTON  Initial version for VM/370-CE 1.1.3
./ * 14-Aug-2024 WDENTON  Rework to make HRC102DK a prerequisite
./ * 15-Nov-2024 WDENTON  Reorganize NUCTAB processing
./ *
./ D 00044000
./ R 00046000 00047580 $ 00046500 100
*        DMKSYSNT - Table of IPLable nucleus configs           HRC240DK 00046500
*                   (VOLSER, device type, beg/end cylinders    HRC240DK 00046600
./ I 00049000 $ 00049100
*        DMKCKPCD - Copy of creation date/time for queries     HRC240DK 00049100
./ R 00132000 $ 00132100
         EXTRN DMKCPINT,DMKCKPT,DMKSYSRS,DMKSYSNT,DMKCKPCD     HRC240DK 00132100
./ R 00195000 $ 00195100 100
         BNZ   SETCCW            ...still saving               HRC240DK 00195100
         ICM   R10,B'1100',START ...CPI needs nucleus start    HRC240DK 00195200
         BR    R12               ...xfer to CPINT to start up  HRC240DK 00195300
./ R 00389000 $ 00389100 100
         SPACE 1                                               HRC240DK 00389100
         BAL   R14,GETNUCDV   Get/validate the nucleus device  HRC240DK 00389200
*                             Returns R10 -> NUCTAB entry      HRC240DK 00389300
         SPACE 2                                               HRC240DK 00389400
         USING NUCTAB,R10                                      HRC240DK 00389500
         LA    R9,NUDVCLAS    Nucleus dev class/type in table  HRC240DK 00389600
./ R 00416000 00419000 $ 00416100 100
         LA    R9,NUCYLBEG    Cylinder loc from Nucleus Table  HRC240DK 00416100
./ D 00423000 00439000
./ I 00586000 $ 00586050 10
         L     R1,=A(DMKCPICD) Copy date/time from here..      HRC240DK 00586050
         L     R9,=A(DMKCKPCD) .. to here                      HRC240DK 00586060
         MVC   0(17,R9),0(R1)  ...                             HRC240DK 00586070
./ R 00623000 00624000 $ 00622501 20
         EJECT ,                                               HRC240DK 00622501 
* +---------------------------------------------------------+  HRC240DK 00622521
* |                                                         |  HRC240DK 00622541
* |      GETNUCDV - Locate and validate the device that     |  HRC240DK 00622561
* |                 the new CP nucleus will be written to   |  HRC240DK 00622581
* |      Returns:                                           |  HRC240DK 00622601
* |            Success:                                     |  HRC240DK 00622621
* |               R1  =  target device address              |  HRC240DK 00622641
* |               R10 -> NUCTAB entry                       |  HRC240DK 00622661
* |               DISK = target device address              |  HRC240DK 00622681
* |            Failure:                                     |  HRC240DK 00622701
* |               Error message issued and processing       |  HRC240DK 00622721
* |               terminated with disabled wait PSW         |  HRC240DK 00622741
* |                                                         |  HRC240DK 00622761
* +---------------------------------------------------------+  HRC240DK 00622781
         SPACE 1                                               HRC240DK 00622801
GETNUCDV DS    0H                                              HRC240DK 00622821
         STM   R0,R15,NUCSAVE                                  HRC240DK 00622841
         SPACE 1                                               HRC240DK 00622861
         L     R1,=A(DMKSYSRS)     Default address is SYSRES   HRC240DK 00622881
         LH    R1,0(,R1)             defined in DMKSYS         HRC240DK 00622901
         SPACE 1                                               HRC240DK 00622921
ASKLP1   DS    0H                                              HRC240DK 00622941
         ST    R1,DISK            Save candidate               HRC240DK 00622961
         CALL  DMKCVTBH           Place address in message     HRC240DK 00622981
         STCM  R1,7,NUCM1CUU      ...                          HRC240DK 00623001
         SPACE 1                                               HRC240DK 00623021
*              New CP nucleus will be written to [cuu].        HRC240DK 00623041     
         LA    R1,NUCMSG1         Write the announce           HRC240DK 00623061
         BAL   R14,CONIO          ...                          HRC240DK 00623081
         SPACE 1                                               HRC240DK 00623101
*                                                              HRC240DK 00623121
*        Issue sense CCW to see if device exists               HRC240DK 00623141
*                                                              HRC240DK 00623161
ASKT1    DS    0H                                              HRC240DK 00623181
         LA    R1,SNS             Issue Sense CCW (x'04')      HRC240DK 00623201  
         ST    R1,CAW               to see if device is there  HRC240DK 00623221  
         L     R1,DISK                candidate device address HRC240DK 00623241  
ASKT1A   DS    0H                                              HRC240DK 00623261
         SIO   0(R1)              Access candidate device      HRC240DK 00623281 
         BC    6,ASKT1A           retry Busy & CSW Stored      HRC240DK 00623301
         BC    1,NDISK            NotOp (CC3) is bad           HRC240DK 00623321
         TIO   0(R1)              Clear the device             HRC240DK 00623341
         BNZ   *-4                ...                          HRC240DK 00623361
         TM    SNSIN,INTREQ       Intervention required?       HRC240DK 00623381
         BO    NDISK              ..yes, die now               HRC240DK 00623401
         SPACE 1                                               HRC240DK 00623421
*                                                              HRC240DK 00623441
*        Read the volume label                                 HRC240DK 00623461
*        -- First have to set CR2 channel mask                 HRC240DK 00623481
*           to allow for interupts                             HRC240DK 00623501
*                                                              HRC240DK 00623521
ASKT2    DS    0H                                              HRC240DK 00623541
         LR    R2,R1              Get channel number           HRC240DK 00623561
         SRL   R2,8               ...                          HRC240DK 00623581
         LA    R0,1               Set up the mask for shifting HRC240DK 00623601
         SR    R1,R1              ...                          HRC240DK 00623621
         SRDL  R0,1(R2)           Shift the 1 to right place   HRC240DK 00623641
         ST    R1,CREG2             and save as the CR2 value  HRC240DK 00623661
*                                                              HRC240DK 00623681
*        note.. Here, VM R6 only allows having                 HRC240DK 00623701
*        nucleus devices on Channels 0-5.. why??               HRC240DK 00623721
*        Dont think we want that on current systems            HRC240DK 00623741
*                                                              HRC240DK 00623761
         LCTL  C2,C2,CREG2        Allow for interrupts         HRC240DK 00623781
         SR    R8,R8              Clear retry counter          HRC240DK 00623801
         LA    R14,LABCCW         Read the volume label        HRC240DK 00623821
         BAL   R15,SCPZCAW        ...                          HRC240DK 00623841
         SPACE 1                                               HRC240DK 00623861
*                                                              HRC240DK 00623881
*        Find entry in Nucleus Table                           HRC240DK 00623901
*                                                              HRC240DK 00623921
ASKT3    DS    0H                                              HRC240DK 00623941
         USING NUCTAB,R10                                      HRC240DK 00623961
         L     R10,=A(DMKSYSNT)   Find volume in nucleus table HRC240DK 00623981
FINDNUC  DS    0H                                              HRC240DK 00624001
         CLC   NUVOLSER,VOLID+4   Match VOLSER of DMKSYSRS dev HRC240DK 00624021
         BE    ASKDONE            ... got it: return to main   HRC240DK 00624041
         LA    R10,NUCTABLN(,R10) Next entry                   HRC240DK 00624061
         CLI   0(R10),X'FF'       End of table?                HRC240DK 00624081
         BNE   FINDNUC            ..no, keep checking          HRC240DK 00624101
         B     SCPBADLB           ..yes, issue error & die     HRC240DK 00624121
         SPACE 1                                               HRC240DK 00624141
*                                                              HRC240DK 00624161
*        Got the target device to hold nucleus.                HRC240DK 00624181
*        -- Return device address in R1 (also in DISK)         HRC240DK 00624201
*        -- Return Nucleus Table entry addr in R10             HRC240DK 00624221
*                                                              HRC240DK 00624241
ASKDONE  DS    0H                                              HRC240DK 00624261
         L     R1,DISK            Return target device addr    HRC240DK 00624281
         ST    R1,NUCSVR1           in R1                      HRC240DK 00624301
         ST    R10,NUCSVR10       Return R10 -> NucTab entry   HRC240DK 00624321
         LM    R0,R15,NUCSAVE     Restore other regs           HRC240DK 00624341
         BR    R14                  and return                 HRC240DK 00624361
         SPACE 3                                               HRC240DK 00624381
* +---------------------------------------------------------+  HRC240DK 00624401
* |      CONIO - Write to operator console                  |  HRC240DK 00624421
* |      Input: R1 -> AL1(length),C'message'                |  HRC240DK 00624441
* +---------------------------------------------------------+  HRC240DK 00624461
         SPACE 1                                               HRC240DK 00624481
CONIO    DS    0H                                              HRC240DK 00624501
         STM   R14,R2,CONSAVE     Save a few regs              HRC240DK 00624521
         XR    R0,R0              Get message length           HRC240DK 00624541
         IC    R0,0(,R1)          ...                          HRC240DK 00624561
         LA    R1,1(,R1)          and address                  HRC240DK 00624581
         SR    R2,R2              No special parms             HRC240DK 00624601
         CALL  DMKOPRWT           Call standalone writer       HRC240DK 00624621
         LM    R14,R2,CONSAVE     restore regs                 HRC240DK 00624641
         BR    R14                and return                   HRC240DK 00624661
         EJECT ,                                               HRC240DK 00624681
./ I 00628000 $ 00628100 10
NUCSAVE  DS    0F             GETNUCDV save area               HRC240DK 00628100
NUCSVR0  DC    F'0'           R0                               HRC240DK 00628110
NUCSVR1  DC    F'0'           R1                               HRC240DK 00628120
NUCSVR2  DC    F'0'           R2                               HRC240DK 00628130
NUCSVR3  DC    F'0'           R3                               HRC240DK 00628140
NUCSVR4  DC    F'0'           R4                               HRC240DK 00628150
NUCSVR5  DC    F'0'           R5                               HRC240DK 00628160
NUCSVR6  DC    F'0'           R6                               HRC240DK 00628170
NUCSVR7  DC    F'0'           R7                               HRC240DK 00628180
NUCSVR8  DC    F'0'           R8                               HRC240DK 00628190
NUCSVR9  DC    F'0'           R9                               HRC240DK 00628200
NUCSVR10 DC    F'0'           R10                              HRC240DK 00628210
NUCSVR11 DC    F'0'           R11                              HRC240DK 00628220
NUCSVR12 DC    F'0'           R12                              HRC240DK 00628230
NUCSVR13 DC    F'0'           R13                              HRC240DK 00628240
NUCSVR14 DC    F'0'           R14                              HRC240DK 00628250
NUCSVR15 DC    F'0'           R15                              HRC240DK 00628260
CONSAVE  DS    0F             CONIO save area                  HRC240DK 00628270
CONSVR14 DC    F'0'           R14                              HRC240DK 00628280
CONSVR15 DC    F'0'           R15                              HRC240DK 00628290
CONSVR0  DC    F'0'           R0                               HRC240DK 00628300
CONSVR1  DC    F'0'           R1                               HRC240DK 00628310
CONSVR2  DC    F'0'           R2                               HRC240DK 00628320
*                                                              HRC240DK 00628330
./ R 00659000 $ 00659100 100
         MVC   VOLMSG1,VOLID+4 Put IPL volid in error msg      HRC240DK 00659100
./ R 00667490 $ 00667100
         DC    C'Volid '''                                     HRC240DK 00667100
./ I 00668100 $ 00668200 100
         DC    C''' not a configured IPL volume'               HRC240DK 00668200
./ I 00679200 $ 00679210 10
         SPACE 1                                               HRC240DK 00679210
NUCMSG1  DC    AL1(NUCMSG1L)                                   HRC240DK 00679220
         DC    C'New CP nucleus will be written to ['          HRC240DK 00679230
NUCM1CUU DC    C'cuu',C'].'                                    HRC240DK 00679240
NUCMSG1L EQU   *-NUCMSG1-1                                     HRC240DK 00679250
./ I 00685000 $ 00685100 100
         SYSLOCS ,                                             HRC240DK 00685100
:READ HDKCQA AUXLCL A
HRC240DK V01 Alternate CP nucleus enhancements
:READ HDKCQA HRC240DK A
./ * HRC240DK - Alternate CP Nucleus Enhancements
./ *
./ * Remove reference to obsolete SYSRES member DMKSYSNU   
./ *
./ * PREREQUISITES:
./ * HRC030DK H40 Add QUERY ALLOC command
./ *
./ * HISTORY:
./ * 21-Aug-2024 WDENTON  Initial version for VM/370-CE 1.1.3
./ *
./ D 00046000
./ R 00099000 $ 00099005 5
         EXTRN DMKSYSVL                                        HRC240DK 00099005
:READ DMKCFC AUXLCL A
HRC240DK V01 Alternate CP nucleus enhancements
:READ DMKCFC HRC240DK A
./ * HRC240DK - Alternate CP Nucleus Enhancements
./ *
./ * This updates adds the HDKCQN query module and adds the   
./ * QUERY NUCLEUS command to report on nucleus configs
./ *
./ * PREREQUISITES:
./ * HRC030DK H40 Add QUERY ALLOC command
./ *
./ * HISTORY:
./ * 22-Aug-2024 WDENTON  Initial version for VM/370-CE 1.1.3
./ *
./ I 00117960 $ 00117965
         EXTRN HDKCQNUC       Alternate nucleus extensions     HRC240DK 00117965
./ I 00604950 $ 00604955
         DC    A(HDKCQNUC)    INDEX 36 Alt nucleus extension   HRC240DK 00604955
./ I 00661820 $ 00661822 2
         DC    C'NUCLEUS ',AL1(3,A+C+E,36,0) MOD 36 = HDKCQNUC HRC240DK 00661822
:READ HDKCQN AUXLCL A
HRC240DK V01 Alternate CP nucleus enhancements
:READ HDKCQN HRC240DK A
./ * HRC240DK - Alternate CP Nucleus Enhancements
./ *
./ * Adds a new query extensions module to contain
./ * the new QUERY NUCLEUS command.                   
./ * This started out in HDKCQA but got too large   
./ *
./ * HISTORY:
./ * 22-Aug-2024 WDENTON  Initial version for VM/370-CE 1.1.3
./ * 27-Aug-2024 WDENTON  Add 3375/3380 support ala HRC106DK
./ *
:READ HDKCQN ASSEMBLE A
CQN      TITLE 'HDKCQN            (CP)    VM/370    VERSION 6, LEVEL 0' 00010000
         ISEQ  73,80          Validate sequence numbers                 00020000
**********************************************************************  00030000
*                                                                       00040000
* MODULE NAME -                                                         00050000
*                                                                       00060000
*        HDKCQN                                                         00070000
*                                                                       00080000
* FUNCTION -                                                            00090000
*                                                                       00100000
*        Construct and send responses for alternate                     00110000
*        nucleus query extensions                                       00120000
*                                                                       00130000
* ATTRIBUTES -                                                          00140000
*                                                                       00150000
*        REENTRANT, PAGEABLE, CALLED VIA SVC                            00160000
*                                                                       00170000
* ENTRY POINTS -                                                        00180000
*                                                                       00190000
*        HDKCQNUC - Alternate nucleus query functions                   00200000
*                                                                       00210000
**********************************************************************  00220000
         EJECT ,                                                        00230000
         COPY  OPTIONS                                                  00240000
         COPY  LOCAL                                                    00250000
         SPACE 3                                                        00260000
HDKCQN   CSECT ,                                                        00270000
MODID    DC    CL8'HDKCQN'        Module Id                             00280000
         DC    AL2(MODEND-HDKCQN) Module length                         00290000
         DC    C'&SYSDATE'        Compile date                          00300000
         DC    C'-&SYSTIME'       Compile time                          00310000
         SPACE 3                                                        00320000
         USING PSA,0                                                    00330000
         USING VMBLOK,R11                                               00340000
         USING SAVEAREA,R13                                             00350000
         SPACE 1                                                        00360000
         EXTRN DMKCVTBD,DMKCVTBH                                        00370000
         EXTRN DMKSYSNT                                                 00380000
         EXTRN DMKSCNFD,DMKSCNRD,DMKSCNVS                               00390000
         EXTRN DMKIOSQR                                                 00400000
         EXTRN DMKERMSG                                                 00410000
         TITLE 'HDKCQN:HDKCQNUC   (CP)    VM/370    VERSION 6, LEVEL 0' 00420000
**********************************************************************  00430000
*                                                                       00440000
* METHOD NAME -                                                         00450000
*                                                                       00460000
*        HDKCQNUC                                                       00470000
*                                                                       00480000
* FUNCTION -                                                            00490000
*                                                                       00500000
*        Process any query commands related to the CP nucleus           00510000
*                                                                       00520000
* ENTRY CONDITIONS -                                                    00530000
*                                                                       00540000
*        R6  = Branch table index value                                 00550000
*        R9  = Address of the command line buffer                       00560000
*        R11 = Address of the VMBLOK                                    00570000
*        R12 = Address of HDKCQNUC entry point                          00580000
*        R13 = Address of standard SAVEAREA                             00590000
*                                                                       00600000
* EXIT CONDITIONS -                                                     00610000
*                                                                       00620000
*        Normal:                                                        00630000
*              R2 = 0                                                   00640000
*                                                                       00650000
*        Error:                                                         00660000
*              R2 = Error message code number                           00670000
*                                                                       00680000
* NOTES/COMMENTS -                                                      00690000
*                                                                       00700000
*        1. Since the SAVEAREA created on the call from CFMQU           00710000
*           is not used, it will be released via SVC 16. Thus,          00720000
*           when this routine returns, it will go back to the           00730000
*           CFM main command processor instead of the CFMQU             00740000
*           QUERY commandU. (CFM's registers were already               00750000
*           saved by CFMQU                                              00760000
*                                                                       00770000
*        2. This module can process multiple QERY options. The          00780000
*           proper routine is entered via a branch table indexed        00790000
*           by the incoming R6 that was set up by CFMQU the             00800000
*           main QUERY command processor;                               00810000
*                                                                       00820000
**********************************************************************  00830000
         EJECT ,                                                        00840000
*                                                                       00850000
*        Start by releasing the current save area so we                 00860000
*        will appear to be called from the CFM main                     00870000
*        command processor                                              00880000
*                                                                       00890000
         ENTRY HDKCQNUC                                                 00900000
HDKCQNUC DS    0H             Entry from CFMQU                          00910000
         USING *,R12          (temp local addressability)               00920000
         SVC   16             Release the SAVEAERA.. use CFMQU's        00930000
         SPACE 1                                                        00940000
         STM   R0,R11,SAVEREGS    Save incomine registers               00950000
         SL    R12,=A(HDKCQNUC-HDKCQN) Set module addressability        00960000
         USING HDKCQN,R12         and a permanent base                  00970000
         SPACE 1                                                        00980000
         XC    SAVEWRK1(4),SAVEWRK1 Clear some work space               00990000
         B     QNVECTOR(R6)         and jump to processing routine      01000000
QNVECTOR DS    0H                                                       01010000
         B     QRYNUC         Q NUCLEUS                                 01020000
         SPACE 3                                                        01030000
*                                                                       01040000
*        Common exit point to write a message and exit                  01050000
*                                                                       01060000
QRYWRITE DS    0H                                                       01070000
         CALL  DMKQCNWT,PARM=NORET+DFRET                                01080000
         SPACE 1                                                        01090000
*                                                                       01100000
*        Exit point to return success                                   01110000
*                                                                       01120000
QRYEXIT0 DS    0H                                                       01130000
         SLR   R2,R2          ZERO RETRN REG                            01140000
         SPACE 1                                                        01150000
*                                                                       01160000
*        Exit point to return error message code in R2                  01170000
*                                                                       01180000
QRYEXIT  DS    0H                                                       01190000
         N     R2,XRIGHT16    AND OFF ALL BUT ERROR CODE                01200000
         ST    R2,SAVER2      STORE RETURN CODE                         01210000
         EXIT  ,              RETURN                                    01220000
         EJECT ,                                                        01230000
**********************************************************************  01240000
*                                                                       01250000
* QUERY NUCLEUS                                                         01260000
*                                                                       01270000
* COMMAND FORMAT                                                        01280000
*                                                                       01290000
*        +---------+-----------+                                        01300000
*        |  QUERY  |  NUCleus  |                                        01310000
*        +---------+-----------+                                        01320000
*                                                                       01330000
* RESPONSE                                                              01340000
*                                                                       01350000
*        For all nucleus locations defined in DMKSYS:                   01360000
*            CP NUCLEUS LOCATIONS:                                      01370000
*            VOLSER UNIT TYPE   RANGE   CREATE DATE/TIME                01380000
*            volser cuu* 33xx nnnn-nnnn mm/dd/yy hh:mm:ss               01390000
*            . . .                                                      01400000
*            * Currently IPLed nucleus                                  01410000
*                                                                       01420000
*        If a nucleus has never been loaded:                            01430000
*            volser cuu  33xx nnnn-nnnn no nucleus loaded               01440000
*                                                                       01450000
*        If update HRC240DK has not been applied to DMKCKP:             01460000
*            volser cuu  33xx nnnn-nnnn missing HRC240DK                01470000
*                                                                       01480000
*        If the nucleus location on disk does not                       01490000
*        match the DMKSSY Nucleus Table definition:                     01500000
*            volser cuu  33xx nnnn-nnnn wrong location                  01510000
*                                                                       01520000
*        If the Nucleus Table in DMKSYS is empty:                       01530000
*            No nucleus locations defined!                              01540000
*                                                                       01550000
**********************************************************************  01560000
         SPACE 2                                                        01570000
QRYNUC   DS    0H                                                       01580000
         CALL  DMKSCNFD          Look for next parm                     01590000
         BZ    ERR026            ... no options allowed                 01600000
         SPACE 1                                                        01610000
*        Get a little bit of temp storage                               01620000
         LA    R0,QNWORKL        ...                                    01630000
         CALL  DMKFREE           ...                                    01640000
         ST    R1,SAVEWRK1       (save its address)                     01650000
         LR    R9,R1             ... temp access via R9                 01660000
         USING QNUCWORK,R9       ...                                    01670000
         SPACE 1                                                        01680000
*                                                                       01690000
*        First count the number of entries in the DMKSYSNT table        01700000
*                                                                       01710000
         L     R6,=A(DMKSYSNT)   Count # of defined nucs                01720000
         USING NUCTAB,R6         ..                                     01730000
         SR    R3,R3             .. (count in R3)                       01740000
NUCCNTLP DS    0H                ..                                     01750000
         CLI   0(R6),X'FF'       ..                                     01760000
         BE    NUCCNTEN          ..                                     01770000
         LA    R3,1(,R3)         ..                                     01780000
         LA    R6,NUCTABLN(,R6)  ..                                     01790000
         B     NUCCNTLP          ..                                     01800000
*                                                                       01810000
*        Then calculate the length of the query output                  01820000
*                                                                       01830000
NUCCNTEN DS    0H                                                       01840000
         LTR   R3,R3             Any nucs defined in DMKSYS?            01850000
         BZ    NUCNONE1          ..no, simple output then               01860000
         LA    R1,NUCLOVHD       Basic message content length           01870000
         LR    R2,R3             and add detail lines                   01880000
         MH    R2,=AL2(NUCLDETL) ...                                    01890000
         AR    R1,R2             ...                                    01900000
         B     *+8               go allocate buffer                     01910000
NUCNONE1 DS    0H                                                       01920000
         LA    R1,NUCLNONE       Msg length when none defined           01930000
         LA    R0,7(,R1)         Size in Dwords                         01940000
         SRL   R0,3                                                     01950000
         ST    R0,QRYBUFFL       (save dw size for FRET later)          01960000
         CALL  DMKFREE                                                  01970000
         ST    R1,QRYBUFF        Save buffer addr                       01980000
         LR    R7,R1             Use R7 to build output                 01990000
         SPACE 1                                                        02000000
         DROP  R9                DON't need work area for a while       02010000
         SPACE 1                                                        02020000
*                                                                       02030000
*        Initialize query output with heading lines                     02040000
*                                                                       02050000
         LA    R1,NUCMSGHD       Main header                            02060000
         LA    R2,L'NUCMSGHD     ...                                    02070000
         BAL   R4,NUCADDLN       ...                                    02080000
         LTR   R3,R3             Any nucs defined in DMKSYS?            02090000
         BZ    NUCNONE2          ..no, simple output then               02100000
         LA    R1,NUCMSGCH       Column header                          02110000
         LA    R2,L'NUCMSGCH     ...                                    02120000
         BAL   R4,NUCADDLN       ...                                    02130000
         SPACE 1                                                        02140000
*                                                                       02150000
*        Build each detail line of the query output                     02160000
*                                                                       02170000
         L     R6,=A(DMKSYSNT)   Now scan NUCTAB & report               02180000
NUCBLDLP DS    0H                                                       02190000
         CLI   0(R6),X'FF'       End of table?                          02200000
         BE    NUCBLDEN          yes... write buffer                    02210000
         SPACE 1                                                        02220000
         MVI   0(R7),C' '           Clear output line                   02230000
         MVC   1(LNUCDETL,R7),0(R7) ...                                 02240000
         MVI   LNUCDETL(R7),X'15'                                       02250000
         USING NUCMSGDT,R7                                              02260000
         SPACE 1                                                        02270000
         MVC   NUCDTVOL,NUVOLSER  Volser to output                      02280000
         SPACE 1                                                        02290000
         LA    R0,6              Find addr of that volume               02300000
         LA    R1,NUVOLSER       ...                                    02310000
         CALL  DMKSCNVS          ... 1st the RDEVBLOK                   02320000
         BNZ   NUCNODEV          ... not mounted                        02330000
         LR    R8,R1             ...                                    02340000
         CALL  DMKSCNRD          compute the CUU of RDEVBLOK            02350000
         CH    R1,PSAIPLDV       is this the active one?                02360000
         BNE   *+8               nope                                   02370000
         MVI   NUCDTACT,C'*'     yup, flag the active nuc               02380000
         CALL  DMKCVTBH          Convert to hex                         02390000
         STCM  R1,B'0111',NUCDTCUU  put in output                       02400000
         B     *+10                                                     02410000
NUCNODEV DS    0H                                                       02420000
         MVC   NUCDTCUU,=C'---'  show not online                        02430000
         SPACE 1                                                        02440000
         IC    R2,NUDVTYPE       Add device type to result              02450000
         LA    R1,DASDTYPS       ...                                    02460000
         LA    R0,DASDTYPN       ...                                    02470000
NUCTYPLP DS    0H                ...                                    02480000
         CLM   R2,1,0(R1)        ...                                    02490000
         BE    NUCTYPOK          ...                                    02500000
         LA    R1,DASDTYPL(,R1)  ...                                    02510000
         BCT   R0,NUCTYPLP       ...                                    02520000
         B     NUCNOTYP          ...                                    02530000
NUCTYPOK DS    0H                ...                                    02540000
         MVC   NUCDTTYP,1(R1)    Move in dev type                       02550000
         B     *+10              ...                                    02560000
NUCNOTYP DS    0H                                                       02570000
         MVC   NUCDTTYP,=C'????' Unknown type                           02580000
         SPACE 1                                                        02590000
         LH    R1,NUCYLBEG         Starting cylinder                    02600000
         CALL  DMKCVTBD            ...                                  02610000
         STCM  R1,B'1111',NUCDTBEG ...                                  02620000
         MVI   NUCDTSEP,C'-'                                            02630000
         LH    R1,NUCYLEND         Ending cylinder                      02640000
         CALL  DMKCVTBD            ...                                  02650000
         STCM  R1,B'1111',NUCDTEND ...                                  02660000
         SPACE 1                                                        02670000
         BAL   R4,NUCVERFY       Verify the nucleus                     02680000
*                                (also fills in create dt/tm)           02690000
         SPACE 1                                                        02700000
         LA    R7,NUCLDETL(,R7)  next line                              02710000
         LA    R6,NUCTABLN(,R6)  ..                                     02720000
         B     NUCBLDLP          loop thru the table                    02730000
         SPACE 1                                                        02740000
NUCBLDEN DS    0H                                                       02750000
         LA    R1,NUCNTACT       Note about active nuc flag             02760000
         LA    R2,L'NUCNTACT     ...                                    02770000
         BAL   R4,NUCADDLN       ...                                    02780000
         B     NUCDONE                                                  02790000
         SPACE 1                                                        02800000
NUCNONE2 DS    0H                                                       02810000
         LA    R1,NUCNTNON       Note About no nucs defined             02820000
         LA    R2,L'NUCNTNON     ...                                    02830000
         BAL   R4,NUCADDLN       ...                                    02840000
         SPACE 1                                                        02850000
NUCDONE  DS    0H                                                       02860000
         L     R9,SAVEWRK1       Get back to the work area              02870000
         USING QNUCWORK,R9       ...                                    02880000
         L     R2,QRYBUFF        Pick up needed fields                  02890000
         L     R3,QRYBUFFL         so the work area                     02900000
         LR    R1,R9                 can be released                    02910000
         LA    R0,QNWORKL              ...                              02920000
         CALL  DMKFRET                 ...                              02930000
         DROP  R9                                                       02940000
         LR    R0,R7             R0 = message len                       02950000
         SR    R0,R2             ..                                     02960000
         LR    R1,R2             R1 = message addr                      02970000
*                                R3 = Dwords to FRET (from above)       02980000
         B     QRYWRITE                                                 02990000
         SPACE 3                                                        03000000
*                                                                       03010000
* Move a static line to output buffer                                   03020000
* -- R1 = address of thhe data                                          03030000
* -- R2 = length of the data                                            03040000
* -- R4 = return address                                                03050000
*                                                                       03060000
NUCADDLN DS    0H                                                       03070000
         EX    R2,NUCMOVLN       Move the data (+1 extra)               03080000
         AR    R7,R2             followed by a NL                       03090000
         MVI   0(R7),X'15'       ...                                    03100000
         LA    R7,1(,R7)         ...                                    03110000
         BR    R4                                                       03120000
NUCMOVLN MVC   0(*-*,R7),0(R1)   *** Executed ***                       03130000
         SPACE 3                                                        03140000
*                                                                       03150000
* Verify the nucleus currently on a device                              03160000
* -- R4 = return address                                                03170000
* -- R6 = current DMKSYSNT table entry                                  03180000
* -- R7 = addr of current output detail line                            03190000
* -- R8 = RDEVBLOK of device with a nucleus                             03200000
*                                                                       03210000
* Returns R0 = 0  (Success)                                             03220000
*         R0 = 32 (no valid nuc on device)                              03230000
*                                                                       03240000
NUCVERFY DS    0H                                                       03250000
         LA    R2,=AL1(0,0,0,0,0,0,2) ...                               03260000
         BAL   R9,READ1K         ...                                    03270000
         USING IOBLOK,R10                                               03280000
         LA    R9,RDDATA         Check for good nuc                     03290000
         USING NUCR2CKP,R9                                              03300000
         CLC   ID,=CL8'DMKCKP'   is 1st page of DMKCKP?                 03310000
         BNE   NUCNONUC          ..no, no nucleus on device             03320000
         CLC   CKPST,NUCYLBEG    same starting cyl as DMKSYS?           03330000
         BNE   NUCOLD            ..no, stale nuc                        03340000
         CLI   CKPCD+2,C'/'      Nuc includes HRC240DK??                03350000
         BNE   NUCPREV           no, no date/time                       03360000
         MVC   NUCDTDTS,CKPCD    copy in create date/time               03370000
         SLR   R9,R9             Return code = 0                        03380000
         B     NUCVRET           and done                               03390000
         DROP  R9                                                       03400000
NUCNONUC DS    0H                                                       03410000
         MVC   NUCDTDTS,MSNONUC  no nucleus on device                   03420000
         B     NUCVERER                                                 03430000
NUCPREV  DS    0H                                                       03440000
         MVC   NUCDTDTS,MSNOUPDT missing this update                    03450000
         B     NUCVERER                                                 03460000
NUCOLD   DS    0H                                                       03470000
         MVC   NUCDTDTS,MSBADNUC DMKSYS def .ne. Loaded nuc             03480000
NUCVERER DS    0H                                                       03490000
         LA    R9,32             Return code = 32                       03500000
NUCVRET  DS    0H                                                       03510000
         DROP  R10                                                      03520000
         LA    R0,RD1KDWCT       Release IOBLOK & extras                03530000
         LR    R1,R10                                                   03540000
         CALL  DMKFRET                                                  03550000
         LR    R0,R9             return code to R0                      03560000
         BR    R4                and return                             03570000
         DROP  R6,R7                                                    03580000
*              C'mm/dd/yy hh:mm:ss'                                     03590000
MSNONUC  DC    C'no nucleus loaded'                                     03600000
MSNOUPDT DC    C'missing HRC240DK '                                     03610000
MSBADNUC DC    C'wrong location   '                                     03620000
         SPACE 3                                                        03630000
*                                                                       03640000
*        Templates for Query Nucleus output                             03650000
*                                                                       03660000
NUCMSGHD DC    C'CP NUCLEUS LOCATIONS'                                  03670000
NUCMSGCH DC    C'VOLSER UNIT TYPE   RANGE   CREATE DATE/TIME'           03680000
         SPACE 1                                                        03690000
NUCMSGDT DSECT ,                 Output detail line                     03700000
NUCDTVOL DC    C'VOLSER',C' '       Nucleus volume id                   03710000
NUCDTCUU DC    C'CUU'               Device address                      03720000
NUCDTACT DC    C'*',C' '            Active IPLd nuc flag                03730000
NUCDTTYP DC    C'3330',C' '         Device type                         03740000
NUCDTBEG DC    C'0000'              First allocated cyl                 03750000
NUCDTSEP DC    C'-'                 -                                   03760000
NUCDTEND DC    C'0000',C' '         Last allocated cyl                  03770000
NUCDTDTS DC    C'mm/dd/yy hh:mm:ss' Create date/time                    03780000
LNUCDETL EQU   *-NUCMSGDT                                               03790000
         SPACE 1                                                        03800000
HDKCQN   CSECT ,                                                        03810000
         SPACE 1                                                        03820000
NUCNTACT DC    C'* = Currently IPLed nucleus'                           03830000
NUCNTNON DC    C'No nucleus locations defined!'                         03840000
         SPACE 1                                                        03850000
*              Overhead message length (regular)                        03860000
NUCLOVHD EQU   L'NUCMSGHD+L'NUCMSGCH+L'NUCNTACT+3                       03870000
*              Overhead message length (no nucs defined)                03880000
NUCLNONE EQU   L'NUCMSGHD+L'NUCNTNON+2                                  03890000
*              Length of detail lines                                   03900000
NUCLDETL EQU   LNUCDETL+1                                               03910000
         SPACE 3                                                        03920000
NUCR2CKP DSECT ,              Map the DKMCKP prefix in 0/0/2            03930000
CKPT     DS    0H                                                       03940000
         LM    R12,R13,*-*    LOAD BASE REGS                            03950000
         B     *-*                                                      03960000
ERRORMSG DC    A(*-*)         ERROR MESSAGE ADDRESS                     03970000
         ORG   CKPT+14        ORIGIN NAME ADDRESS FOR DMKDDR            03980000
ID       DC    CL8'DMKCKP'         MODULE NAME                          03990000
         SPACE 1                                                        04000000
         ORG   CKPT+22        ORIGIN NUC CYL ADDRESS FOR DMKDDR@V2A2029 04010000
CKPST    DC    XL2'00'        CYLINDER ADDRESS OF THE FIRST NUCLEUS CYL 04020000
         DC    XL2'00'        CYLINDER ADDRESS OF THE LAST NUCLEUS CYL  04030000
         SPACE 1                                                        04040000
         DS    0F                                                       04050000
CKPRS    DC    XL8'00'        BBCCHHR OF THE DMKSAV ON DISK             04060000
CKPLD    DC    XL8'00'        BBCCHRR OF DMKCKP PAGE 2                  04070000
SEEK     DC    H'0'           BB CURRENT SEEK ADDRESS                   04080000
         DC    H'0'           CC CYLINDER                               04090000
HEAD     DC    H'0'           HH HEAD                                   04100000
REC      DC    X'0100'        R  RECORD                                 04110000
BASEREGS DC    A(X'800')      DMKCKP BASE ADDRESS                       04120000
         DC    A(X'1800')     2ND BASE REG ADDRESS                      04130000
TERMBUFF DC    A(*-*)         TERMBUFF ADDRESS                          04140000
         SPACE 1                                                        04150000
*        Copy of DMKCPICD for use in queries                            04160000
CKPCD    DC    CL9' '         Creation date filled by DMKSAV            04170000
         DC    CL8' '         Creation time filled by DMKSAV            04180000
         SPACE 1                                                        04190000
CKP001   DS    0H                                                       04200000
HDKCQN   CSECT ,                                                        04210000
         EJECT ,                                                        04220000
*-------------------------------------------------------------          04230000
*                                                                       04240000
* Subroutine to read 1K of data from a disk                             04250000
*                                                                       04260000
* Input:                                                                04270000
*     R2 = disk record address (BBCCHHR)                                04280000
*     R8 = RDEVBLOK to be read                                          04290000
*     R9 = return address                                               04300000
*                                                                       04310000
* Results:                                                              04320000
*     R0  = return code (0=success,32=error)                            04330000
*     R10 = address of IOBLOK + extnsions (see below)                   04340000
*                                                                       04350000
*-------------------------------------------------------------          04360000
READ1K   DS    0H                                                       04370000
         STM   R2,R9,SAVEWRK2                                           04380000
         LA    R0,RD1KDWCT       Allocate IOBLOK & extras               04390000
         CALL  DMKFREE                                                  04400000
         LR    R10,R1            Address as the IOBLOK + extensions     04410000
         USING IOBLOK,R10        ...                                    04420000
         XC    IOBLOK(IOBSIZE*8),IOBLOK CLEAR IT                        04430000
         LA    R1,RDCCWS         Set IOBCAW to the channel program      04440000
         ST    R1,IOBCAW         ...                                    04450000
         LA    R1,READDONE       Return here after the read is done     04460000
         ST    R1,IOBIRA         ...                                    04470000
         ST    R11,IOBUSER       Associate IOBLOK with VMBLOK           04480000
         ST    R13,IOBMISC       Save the save area address             04490000
         ST    R9,IOBMISC2       and our return address also            04500000
         SPACE 1                                                        04510000
         MVC   RDADDR,0(R2)      Save record address                    04520000
         LM    R0,R7,MRDCCWS     Pick up the model CCWs                 04530000
         ALR   R0,R10            ... relocate addrs to IOBLOK           04540000
         ALR   R2,R10            ...                                    04550000
         ALR   R4,R10            ...                                    04560000
         ALR   R6,R10            ...                                    04570000
         STM   R0,R7,RDCCWS      place in IOBLOK for execution          04580000
         CALL  DMKIOSQR          Issue the I/O request                  04590000
         GOTO  DMKDSPCH          and wait for the results               04600000
         SPACE 2                                                        04610000
READDONE DS    0H                IOSQR will return here at completion   04620000
         USING *,R12                                                    04630000
         S     R12,=A(READDONE-HDKCQN) restore base                     04640000
         USING HDKCQN,R12                                               04650000
         L     R13,IOBMISC       Restore addr of save area              04660000
         ST    R10,IOBMISC       Save address of buffer (why?)          04670000
         L     R9,IOBMISC2       Restore R9 (?)                         04680000
         LA    R0,RD1KDWCT       Get size of IOB and buffers            04690000
         ST    R0,IOBMISC2       Save buffer length so caller can FRET  04700000
         L     R11,IOBUSER       Restore VMBLOK address                 04710000
         TM    IOBSTAT,IOBFATAL  Did we have an error?                  04720000
         BO    READFRET          ..yes, FRET IOBLOK+ and return         04730000
         SR    R0,R0             Set RC=0                               04740000
         LA    R1,RDDATA         Address of result data                 04750000
         SPACE 1                                                        04760000
READRET  DS    0H                                                       04770000
         LM    R2,R9,SAVEWRK2    Restore all registers                  04780000
         LTR   R0,R0             Set CC                                 04790000
         BR    R9                and return                             04800000
         SPACE 1                                                        04810000
READFRET DS    0H                Fatal I/O error occurred               04820000
*                                R0 still set from above(len in dwords) 04830000
         LR    R1,R10            Block to be released                   04840000
         CALL  DMKFRET           Release storage                        04850000
         LA    R0,12             RC=12 (I/O Error)                      04860000
         SR    R1,R1             return null result data                04870000
         B     READRET           Return                                 04880000
         DROP  R10               finished with IOBLOK                   04890000
         EJECT ,                                                        04900000
*        QUERY MODULE ERROR EXITS...                                    04910000
*                                                                       04920000
ERR026   LA    R2,26          ERROR CODE                                04930000
         SPACE 1                                                        04940000
NOVAR    SR    R1,R1          ZERO PARM REG                             04950000
CALLERM  ICM   R0,14,MODID+3  INSERT MODULE ID                          04960000
         CALL  DMKERMSG       GO SEND MESSAGE                           04970000
*        DMKERMSG WILL RETURN DIRECTLY TO DMKCFM                        04980000
         EJECT ,                                                        04990000
DASDTYPS EQU   *              Nucleus device type table                 05000000
         DC    AL1(TYP2314),CL4'2314'                                   05010000
DASDTYPL EQU   *-DASDTYPS                                               05020000
         DC    AL1(TYP3330),CL4'3330'                                   05030000
         DC    AL1(TYP3340),CL4'3340'                                   05040000
         DC    AL1(TYP3350),CL4'3350'                                   05050000
         DC    AL1(TYP3375),CL4'3375'                                   05060000
         DC    AL1(TYP3380),CL4'3380'                                   05070000
DASDTYPN EQU   (*-DASDTYPS)/DASDTYPL                                    05080000
         SPACE 1                                                        05090000
IOBEXMDL DS    0D                                                       05100000
MRDADDR  DS    XL7               BBCCHHR to be read                     05110000
MRDCCWS  DS    0D                                                       05120000
MRDSEEK  CCW   X'07',RDADDR-IOBLOK,CC+SILI,6                            05130000
MRDSIDE  CCW   X'31',RDADDR-IOBLOK+2,CC+SILI,5                          05140000
MRDTIC   CCW   X'08',RDSIDE-IOBLOK,CC+SILI,1                            05150000
MRDREAD  CCW   X'06',RDDATA-IOBLOK,SILI,RDDATALN                        05160000
         SPACE 1                                                        05170000
RDDATALN EQU   1024              Only want 1st 1K of the record         05180000
         SPACE 3                                                        05190000
         LTORG ,                                                        05200000
         EJECT ,                                                        05210000
*==========================================================             05220000
*                                                                       05230000
*  Temp storage to save stuff that won't fit in SAVEAREA                05240000
*                                                                       05250000
*==========================================================             05260000
         SPACE 1                                                        05270000
QNUCWORK DSECT ,                                                        05280000
QRYBUFF  DS    A                 -> Query output buffer                 05290000
QRYBUFFL DS    F                 Length in double words                 05300000
QNWORKL  EQU   (*-QNUCWORK+7)/8                                         05310000
         EJECT ,                                                        05320000
         COPY  IOBLOKS                                                  05330000
IOBLOK   DSECT ,                                                        05340000
         ORG   ,      go back to the end of the dsect                   05350000
         DS    0D                                                       05360000
RDADDR   DS    XL7               BBCCHHR to be read                     05370000
RDCCWS   DS    0D                                                       05380000
RDSEEK   CCW   X'07',RDADDR,CC+SILI,6                                   05390000
RDSIDE   CCW   X'31',RDADDR+2,CC+SILI,5                                 05400000
RDTIC    CCW   X'08',*-8,CC+SILI,1                                      05410000
RDREAD   CCW   X'06',RDDATA,SILI,RDDATALN                               05420000
RDCCSLEN EQU   *-RDCCWS                                                 05430000
RDDATA   DS    (RDDATALN)X                                              05440000
         SPACE 1                                                        05450000
RD1KIOBL EQU   *-IOBLOK                                                 05460000
RD1KDWCT EQU   (RD1KIOBL+7)/8                                           05470000
         EJECT ,                                                        05480000
         COPY  VMBLOK                                                   05490000
         COPY  SAVE                                                     05500000
         COPY  EQU                                                      05510000
         COPY  RBLOKS                                                   05520000
         COPY  DEVTYPES                                                 05530000
         SYSLOCS ,                                                      05540000
         PSA   ,                                                        05550000
HDKCQN   CSECT ,              Resume CSECT                              05560000
MODEND   DS    0D             Mark end of module                        05570000
         END                                                            05580000